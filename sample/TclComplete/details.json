{
    "after":
        {
        "cancel":"",
        "idle":"",
        "info":""
        },
    "append":
        {
        "":""
        },
    "apply":
        {
        "":""
        },
    "array":
        {
        "anymore":"",
        "donesearch":"",
        "exists":"",
        "get":"",
        "names":"",
        "nextelement":"",
        "set":"",
        "size":"",
        "startsearch":"",
        "statistics":"",
        "unset":""
        },
    "auto_execok":
        {
        "":""
        },
    "auto_import":
        {
        "":""
        },
    "auto_load":
        {
        "":""
        },
    "auto_load_index":
        {
        "":""
        },
    "auto_qualify":
        {
        "":""
        },
    "binary":
        {
        "decode":"",
        "encode":"",
        "format":"",
        "scan":""
        },
    "break":
        {
        "":""
        },
    "case":
        {
        "":""
        },
    "catch":
        {
        "":""
        },
    "cd":
        {
        "":""
        },
    "chan":
        {
        "blocked":"",
        "close":"",
        "configure":"",
        "copy":"",
        "create":"",
        "eof":"",
        "event":"",
        "flush":"",
        "gets":"",
        "names":"",
        "pending":"",
        "pipe":"",
        "pop":"",
        "postevent":"",
        "push":"",
        "puts":"",
        "read":"",
        "seek":"",
        "tell":"",
        "truncate":""
        },
    "clock":
        {
        "add":"",
        "clicks":"",
        "format":"",
        "microseconds":"",
        "milliseconds":"",
        "scan":"",
        "seconds":""
        },
    "close":
        {
        "":""
        },
    "concat":
        {
        "":""
        },
    "continue":
        {
        "":""
        },
    "coroutine":
        {
        "":""
        },
    "dict":
        {
        "append":"",
        "create":"",
        "exists":"",
        "filter":"",
        "for":"",
        "get":"",
        "incr":"",
        "info":"",
        "keys":"",
        "lappend":"",
        "map":"",
        "merge":"",
        "remove":"",
        "replace":"",
        "set":"",
        "size":"",
        "unset":"",
        "update":"",
        "values":"",
        "with":""
        },
    "encoding":
        {
        "convertfrom":"",
        "convertto":"",
        "dirs":"",
        "names":"",
        "system":""
        },
    "encoding convertfrom":
        {
        "ascii":"",
        "big5":"",
        "cp1250":"",
        "cp1251":"",
        "cp1252":"",
        "cp1253":"",
        "cp1254":"",
        "cp1255":"",
        "cp1256":"",
        "cp1257":"",
        "cp1258":"",
        "cp437":"",
        "cp737":"",
        "cp775":"",
        "cp850":"",
        "cp852":"",
        "cp855":"",
        "cp857":"",
        "cp860":"",
        "cp861":"",
        "cp862":"",
        "cp863":"",
        "cp864":"",
        "cp865":"",
        "cp866":"",
        "cp869":"",
        "cp874":"",
        "cp932":"",
        "cp936":"",
        "cp949":"",
        "cp950":"",
        "dingbats":"",
        "ebcdic":"",
        "euc-cn":"",
        "euc-jp":"",
        "euc-kr":"",
        "gb12345":"",
        "gb1988":"",
        "gb2312":"",
        "gb2312-raw":"",
        "identity":"",
        "iso2022":"",
        "iso2022-jp":"",
        "iso2022-kr":"",
        "iso8859-1":"",
        "iso8859-10":"",
        "iso8859-13":"",
        "iso8859-14":"",
        "iso8859-15":"",
        "iso8859-16":"",
        "iso8859-2":"",
        "iso8859-3":"",
        "iso8859-4":"",
        "iso8859-5":"",
        "iso8859-6":"",
        "iso8859-7":"",
        "iso8859-8":"",
        "iso8859-9":"",
        "jis0201":"",
        "jis0208":"",
        "jis0212":"",
        "koi8-r":"",
        "koi8-u":"",
        "ksc5601":"",
        "macCentEuro":"",
        "macCroatian":"",
        "macCyrillic":"",
        "macDingbats":"",
        "macGreek":"",
        "macIceland":"",
        "macJapan":"",
        "macRoman":"",
        "macRomania":"",
        "macThai":"",
        "macTurkish":"",
        "macUkraine":"",
        "shiftjis":"",
        "symbol":"",
        "tis-620":"",
        "unicode":"",
        "utf-8":""
        },
    "encoding convertto":
        {
        "ascii":"",
        "big5":"",
        "cp1250":"",
        "cp1251":"",
        "cp1252":"",
        "cp1253":"",
        "cp1254":"",
        "cp1255":"",
        "cp1256":"",
        "cp1257":"",
        "cp1258":"",
        "cp437":"",
        "cp737":"",
        "cp775":"",
        "cp850":"",
        "cp852":"",
        "cp855":"",
        "cp857":"",
        "cp860":"",
        "cp861":"",
        "cp862":"",
        "cp863":"",
        "cp864":"",
        "cp865":"",
        "cp866":"",
        "cp869":"",
        "cp874":"",
        "cp932":"",
        "cp936":"",
        "cp949":"",
        "cp950":"",
        "dingbats":"",
        "ebcdic":"",
        "euc-cn":"",
        "euc-jp":"",
        "euc-kr":"",
        "gb12345":"",
        "gb1988":"",
        "gb2312":"",
        "gb2312-raw":"",
        "identity":"",
        "iso2022":"",
        "iso2022-jp":"",
        "iso2022-kr":"",
        "iso8859-1":"",
        "iso8859-10":"",
        "iso8859-13":"",
        "iso8859-14":"",
        "iso8859-15":"",
        "iso8859-16":"",
        "iso8859-2":"",
        "iso8859-3":"",
        "iso8859-4":"",
        "iso8859-5":"",
        "iso8859-6":"",
        "iso8859-7":"",
        "iso8859-8":"",
        "iso8859-9":"",
        "jis0201":"",
        "jis0208":"",
        "jis0212":"",
        "koi8-r":"",
        "koi8-u":"",
        "ksc5601":"",
        "macCentEuro":"",
        "macCroatian":"",
        "macCyrillic":"",
        "macDingbats":"",
        "macGreek":"",
        "macIceland":"",
        "macJapan":"",
        "macRoman":"",
        "macRomania":"",
        "macThai":"",
        "macTurkish":"",
        "macUkraine":"",
        "shiftjis":"",
        "symbol":"",
        "tis-620":"",
        "unicode":"",
        "utf-8":""
        },
    "encoding system":
        {
        "ascii":"",
        "big5":"",
        "cp1250":"",
        "cp1251":"",
        "cp1252":"",
        "cp1253":"",
        "cp1254":"",
        "cp1255":"",
        "cp1256":"",
        "cp1257":"",
        "cp1258":"",
        "cp437":"",
        "cp737":"",
        "cp775":"",
        "cp850":"",
        "cp852":"",
        "cp855":"",
        "cp857":"",
        "cp860":"",
        "cp861":"",
        "cp862":"",
        "cp863":"",
        "cp864":"",
        "cp865":"",
        "cp866":"",
        "cp869":"",
        "cp874":"",
        "cp932":"",
        "cp936":"",
        "cp949":"",
        "cp950":"",
        "dingbats":"",
        "ebcdic":"",
        "euc-cn":"",
        "euc-jp":"",
        "euc-kr":"",
        "gb12345":"",
        "gb1988":"",
        "gb2312":"",
        "gb2312-raw":"",
        "identity":"",
        "iso2022":"",
        "iso2022-jp":"",
        "iso2022-kr":"",
        "iso8859-1":"",
        "iso8859-10":"",
        "iso8859-13":"",
        "iso8859-14":"",
        "iso8859-15":"",
        "iso8859-16":"",
        "iso8859-2":"",
        "iso8859-3":"",
        "iso8859-4":"",
        "iso8859-5":"",
        "iso8859-6":"",
        "iso8859-7":"",
        "iso8859-8":"",
        "iso8859-9":"",
        "jis0201":"",
        "jis0208":"",
        "jis0212":"",
        "koi8-r":"",
        "koi8-u":"",
        "ksc5601":"",
        "macCentEuro":"",
        "macCroatian":"",
        "macCyrillic":"",
        "macDingbats":"",
        "macGreek":"",
        "macIceland":"",
        "macJapan":"",
        "macRoman":"",
        "macRomania":"",
        "macThai":"",
        "macTurkish":"",
        "macUkraine":"",
        "shiftjis":"",
        "symbol":"",
        "tis-620":"",
        "unicode":"",
        "utf-8":""
        },
    "eof":
        {
        "":""
        },
    "error":
        {
        "":""
        },
    "eval":
        {
        "":""
        },
    "exec":
        {
        "":""
        },
    "exit":
        {
        "":""
        },
    "expr":
        {
        "abs":"",
        "acos":"",
        "asin":"",
        "atan":"",
        "atan2":"",
        "bool":"",
        "ceil":"",
        "cos":"",
        "cosh":"",
        "double":"",
        "entier":"",
        "exp":"",
        "floor":"",
        "fmod":"",
        "hypot":"",
        "int":"",
        "isqrt":"",
        "log":"",
        "log10":"",
        "max":"",
        "min":"",
        "pow":"",
        "rand":"",
        "round":"",
        "sin":"",
        "sinh":"",
        "sqrt":"",
        "srand":"",
        "tan":"",
        "tanh":"",
        "wide":""
        },
    "fblocked":
        {
        "":""
        },
    "fconfigure":
        {
        "":""
        },
    "fcopy":
        {
        "":""
        },
    "file":
        {
        "atime":"",
        "attributes":"",
        "channels":"",
        "copy":"",
        "delete":"",
        "dirname":"",
        "executable":"",
        "exists":"",
        "extension":"",
        "isdirectory":"",
        "isfile":"",
        "join":"",
        "link":"",
        "lstat":"",
        "mkdir":"",
        "mtime":"",
        "nativename":"",
        "normalize":"",
        "owned":"",
        "pathtype":"",
        "readable":"",
        "readlink":"",
        "rename":"",
        "rootname":"",
        "separator":"",
        "size":"",
        "split":"",
        "stat":"",
        "system":"",
        "tail":"",
        "tempfile":"",
        "type":"",
        "volumes":"",
        "writable":""
        },
    "fileevent":
        {
        "":""
        },
    "flush":
        {
        "":""
        },
    "for":
        {
        "":""
        },
    "foreach":
        {
        "":""
        },
    "format":
        {
        "%d":"Signed decimal",
        "%s":"String",
        "%c":"Unicode character",
        "%u":"Unsigned decimal",
        "%x":"Lower case hex",
        "%X":"Upper case hex",
        "%o":"Octal",
        "%b":"Binary",
        "%f":"Floating point (default precision=6)",
        "%e":"Scientific notication x.yyye+zz",
        "%g":"%f or %e, based on precision",
        "%G":"%f or %E, based on precision"
        },
    "gets":
        {
        "":""
        },
    "glob":
        {
        "":""
        },
    "global":
        {
        "":""
        },
    "history":
        {
        "":""
        },
    "if":
        {
        "":""
        },
    "incr":
        {
        "":""
        },
    "info":
        {
        "args":"",
        "body":"",
        "class":"",
        "cmdcount":"",
        "commands":"",
        "complete":"",
        "coroutine":"",
        "default":"",
        "errorstack":"",
        "exists":"",
        "frame":"",
        "functions":"",
        "globals":"",
        "hostname":"",
        "level":"",
        "library":"",
        "loaded":"",
        "locals":"",
        "nameofexecutable":"",
        "object":"",
        "patchlevel":"",
        "procs":"",
        "script":"",
        "sharedlibextension":"",
        "tclversion":"",
        "vars":""
        },
    "info class":
        {
        "call":"",
        "constructor":"",
        "definition":"",
        "destructor":"",
        "filters":"",
        "forward":"",
        "instances":"",
        "methodtype":"",
        "mixins":"",
        "subclasses":"",
        "superclasses":"",
        "variables":""
        },
    "info object":
        {
        "call":"",
        "class":"",
        "definition":"",
        "filters":"",
        "forward":"",
        "isa":"",
        "methods":"",
        "methodtype":"",
        "mixins":"",
        "namespace":"",
        "variables":"",
        "vars":""
        },
    "interp":
        {
        "alias":"",
        "aliases":"",
        "bgerror":"",
        "cancel":"",
        "create":"",
        "debug":"",
        "delete":"",
        "eval":"",
        "exists":"",
        "expose":"",
        "hidden":"",
        "hide":"",
        "invokehidden":"",
        "issafe":"",
        "limit":"",
        "marktrusted":"",
        "recursionlimit":"",
        "share":"",
        "slaves":"",
        "target":"",
        "transfer":""
        },
    "join":
        {
        "":""
        },
    "lappend":
        {
        "":""
        },
    "lassign":
        {
        "":""
        },
    "lindex":
        {
        "":""
        },
    "linsert":
        {
        "":""
        },
    "list":
        {
        "":""
        },
    "llength":
        {
        "":""
        },
    "lmap":
        {
        "":""
        },
    "load":
        {
        "":""
        },
    "lrange":
        {
        "":""
        },
    "lrepeat":
        {
        "":""
        },
    "lreplace":
        {
        "":""
        },
    "lreverse":
        {
        "":""
        },
    "lsearch":
        {
        "-exact":"Pattern is compared for exact equality against each list element.",
        "-glob":"Pattern is a glob-style pattern.",
        "-regexp":"Pattern is treated as a regular expression.",
        "-sorted":"The list elements are already in sorted order and a more efficient search algorithm is used.",
        "-all":"The result is all matching indices or values.",
        "-inline":"The matching value is returned instead of its index",
        "-not":"This negates the sense of the match.",
        "-start":"The list is searched starting a position index",
        "-index":"Search criteria looks for index value of sublists",
        "-nocase":"Comparison with -sorted option done ignoring case",
        "-unique":"Remove duplicate elements in list",
        "-ascii":"Comparison with -sorted option done as Unicode strings",
        "-dictionary":"Comparison with -sorted option done with embedded numbers treated as integers",
        "-integer":"Comparison with -sorted option done with list elements as integers",
        "-real":"Comparison with -sorted option done with list elements as floating point",
        "-increasing":"Comparison with -sorted option done in increasing order.",
        "-decreasing":"Comparison with -sorted option done in decreasing order.",
        "-subindices":"Used with -index, the result will be a complete path within overall list"
        },
    "lset":
        {
        "":""
        },
    "lsort":
        {
        "-ascii":"Use string comparison with Unicode code-point collation.  This is the default",
        "-dictionary":"Embedded numbers compare as integers, not characters",
        "-integer":"Convert list elements to integers and use integer comparison",
        "-real":"Convert list elements to floating-point values and use floating comparison",
        "-command":"Use a command as a comparison command",
        "-increasing":"Sort the list in increasing order.  This is the default",
        "-decreasing":"Sort the list in decreasing order.",
        "-indices":"Return a list of indices in sorted order instead of the values themselves",
        "-index":"Each of the elements must be a proper Tcl sublist.  Sort by index of sublist",
        "-nocase":"Compare in a case-insensitive manner.",
        "-unique":"Remove duplicate elements in list"
        },
    "msgcat::ConvertLocale":
        {
        "":""
        },
    "msgcat::DefaultUnknown":
        {
        "":""
        },
    "msgcat::GetPreferences":
        {
        "":""
        },
    "msgcat::Init":
        {
        "":""
        },
    "msgcat::Invoke":
        {
        "":""
        },
    "msgcat::ListComplement":
        {
        "":""
        },
    "msgcat::Load":
        {
        "":""
        },
    "msgcat::LoadAll":
        {
        "":""
        },
    "msgcat::PackageLocales":
        {
        "":""
        },
    "msgcat::PackagePreferences":
        {
        "":""
        },
    "msgcat::mc":
        {
        "":""
        },
    "msgcat::mcexists":
        {
        "":""
        },
    "msgcat::mcflmset":
        {
        "":""
        },
    "msgcat::mcflset":
        {
        "":""
        },
    "msgcat::mcforgetpackage":
        {
        "":""
        },
    "msgcat::mcload":
        {
        "":""
        },
    "msgcat::mcloadedlocales":
        {
        "":""
        },
    "msgcat::mclocale":
        {
        "":""
        },
    "msgcat::mcmax":
        {
        "":""
        },
    "msgcat::mcmset":
        {
        "":""
        },
    "msgcat::mcpackageconfig":
        {
        "":""
        },
    "msgcat::mcpackagelocale":
        {
        "":""
        },
    "msgcat::mcpreferences":
        {
        "":""
        },
    "msgcat::mcset":
        {
        "":""
        },
    "msgcat::mcunknown":
        {
        "":""
        },
    "namespace":
        {
        "children":"",
        "code":"",
        "current":"",
        "delete":"",
        "ensemble":"",
        "eval":"",
        "exists":"",
        "export":"",
        "forget":"",
        "import":"",
        "inscope":"",
        "origin":"",
        "parent":"",
        "path":"",
        "qualifiers":"",
        "tail":"",
        "unknown":"",
        "upvar":"",
        "which":""
        },
    "namespace ensemble":
        {
        "create":"",
        "configure":"",
        "exists":"",
        "-command":"",
        "-map":"",
        "-namespace":"",
        "-parameters":"",
        "-prefixes":"",
        "-subcommands":"",
        "-unknown":""
        },
    "oo::Helpers::next":
        {
        "":""
        },
    "oo::Helpers::nextto":
        {
        "":""
        },
    "oo::Helpers::self":
        {
        "":""
        },
    "oo::InfoClass":
        {
        "call":"",
        "constructor":"",
        "definition":"",
        "destructor":"",
        "filters":"",
        "forward":"",
        "instances":"",
        "methods":"",
        "methodtype":"",
        "mixins":"",
        "subclasses":"",
        "superclasses":"",
        "variables":""
        },
    "oo::InfoClass::call":
        {
        "":""
        },
    "oo::InfoClass::constructor":
        {
        "":""
        },
    "oo::InfoClass::definition":
        {
        "":""
        },
    "oo::InfoClass::destructor":
        {
        "":""
        },
    "oo::InfoClass::filters":
        {
        "":""
        },
    "oo::InfoClass::forward":
        {
        "":""
        },
    "oo::InfoClass::instances":
        {
        "":""
        },
    "oo::InfoClass::methods":
        {
        "":""
        },
    "oo::InfoClass::methodtype":
        {
        "":""
        },
    "oo::InfoClass::mixins":
        {
        "":""
        },
    "oo::InfoClass::subclasses":
        {
        "":""
        },
    "oo::InfoClass::superclasses":
        {
        "":""
        },
    "oo::InfoClass::variables":
        {
        "":""
        },
    "oo::InfoObject":
        {
        "call":"",
        "class":"",
        "definition":"",
        "filters":"",
        "forward":"",
        "isa":"",
        "methods":"",
        "methodtype":"",
        "mixins":"",
        "namespace":"",
        "variables":"",
        "vars":""
        },
    "oo::InfoObject::call":
        {
        "":""
        },
    "oo::InfoObject::class":
        {
        "":""
        },
    "oo::InfoObject::definition":
        {
        "":""
        },
    "oo::InfoObject::filters":
        {
        "":""
        },
    "oo::InfoObject::forward":
        {
        "":""
        },
    "oo::InfoObject::isa":
        {
        "":""
        },
    "oo::InfoObject::methods":
        {
        "":""
        },
    "oo::InfoObject::methodtype":
        {
        "":""
        },
    "oo::InfoObject::mixins":
        {
        "":""
        },
    "oo::InfoObject::namespace":
        {
        "":""
        },
    "oo::InfoObject::variables":
        {
        "":""
        },
    "oo::InfoObject::vars":
        {
        "":""
        },
    "oo::Obj10::my":
        {
        "":""
        },
    "oo::Obj1::my":
        {
        "":""
        },
    "oo::Obj2::my":
        {
        "":""
        },
    "oo::Obj3::my":
        {
        "":""
        },
    "oo::Obj4::my":
        {
        "":""
        },
    "oo::Obj5::my":
        {
        "":""
        },
    "oo::Obj6::my":
        {
        "":""
        },
    "oo::Obj7::my":
        {
        "":""
        },
    "oo::Obj8::my":
        {
        "":""
        },
    "oo::Obj9::my":
        {
        "":""
        },
    "oo::Slot":
        {
        "":""
        },
    "oo::UnknownDefinition":
        {
        "":""
        },
    "oo::class":
        {
        "create":"",
        "new":""
        },
    "oo::copy":
        {
        "":""
        },
    "oo::define":
        {
        "constructor":"",
        "deletemethod":"",
        "destructor":"",
        "export":"",
        "filter":"",
        "forward":"",
        "method":"",
        "mixin":"",
        "renamemethod":"",
        "self":"",
        "superclass":"",
        "unexport":"",
        "variable":""
        },
    "oo::define::constructor":
        {
        "":""
        },
    "oo::define::deletemethod":
        {
        "":""
        },
    "oo::define::destructor":
        {
        "":""
        },
    "oo::define::export":
        {
        "":""
        },
    "oo::define::filter":
        {
        "":""
        },
    "oo::define::forward":
        {
        "":""
        },
    "oo::define::method":
        {
        "":""
        },
    "oo::define::mixin":
        {
        "":""
        },
    "oo::define::renamemethod":
        {
        "":""
        },
    "oo::define::self":
        {
        "":""
        },
    "oo::define::superclass":
        {
        "":""
        },
    "oo::define::unexport":
        {
        "":""
        },
    "oo::define::variable":
        {
        "":""
        },
    "oo::objdefine":
        {
        "constructor":"",
        "deletemethod":"",
        "destructor":"",
        "export":"",
        "filter":"",
        "forward":"",
        "method":"",
        "mixin":"",
        "renamemethod":"",
        "self":"",
        "superclass":"",
        "unexport":"",
        "variable":""
        },
    "oo::objdefine::class":
        {
        "":""
        },
    "oo::objdefine::deletemethod":
        {
        "":""
        },
    "oo::objdefine::export":
        {
        "":""
        },
    "oo::objdefine::filter":
        {
        "":""
        },
    "oo::objdefine::forward":
        {
        "":""
        },
    "oo::objdefine::method":
        {
        "":""
        },
    "oo::objdefine::mixin":
        {
        "":""
        },
    "oo::objdefine::renamemethod":
        {
        "":""
        },
    "oo::objdefine::unexport":
        {
        "":""
        },
    "oo::objdefine::variable":
        {
        "":""
        },
    "oo::object":
        {
        "":""
        },
    "open":
        {
        "":""
        },
    "package":
        {
        "forget":"",
        "ifneeded":"",
        "names":"",
        "prefer":"",
        "present":"",
        "provide":"",
        "require":"",
        "unknown":"",
        "vcompare":"",
        "versions":"",
        "vsatisfies":"",
        "-exact":""
        },
    "pid":
        {
        "":""
        },
    "pl":
        {
        "":""
        },
    "proc":
        {
        "":""
        },
    "puts":
        {
        "":""
        },
    "pwd":
        {
        "":""
        },
    "read":
        {
        "":""
        },
    "regexp":
        {
        "-about":"Returns a list containing information about the regex.  Intended for debugging",
        "-expanded":"Enables use of the syntax where whitespace and comments are ignored.",
        "-indices":"Changes what is stored in the subMatchVars.",
        "-line":"Enables newline-sensitive matching.",
        "-linestop":"Changes behavior of . to stop at newlines.",
        "-lineanchor":"Changes behavior of ^ and $ to match beginning and end of lines.",
        "-nocase":"Causes upper-case characters in string to be treated as lower case.",
        "-all":"Causes the regex to be matched as many times as possible.",
        "-inline":"Causes the command to return, as a list, the data otherwise placed in match variables",
        "-start":"Specifies a character index offset into the string to start matching"
        },
    "regsub":
        {
        "-all":"All matches in string are substituted.  Not just first match",
        "-expanded":"Enables use of the syntax where whitespace and comments are ignored.",
        "-line":"Enables newline-sensitive matching.",
        "-linestop":"Changes behavior of . to stop at newlines.",
        "-lineanchor":"Changes behavior of ^ and $ to match beginning and end of lines.",
        "-nocase":"Causes upper-case characters in string to be treated as lower case.",
        "-start":"Specifies a character index offset into the string to start matching"
        },
    "rename":
        {
        "":""
        },
    "return":
        {
        "-code":"ok, error, return, break, or continue",
        "-errorcode":"List of additional information about the error.  Only used with -code error",
        "-errorinfo":"Info is the initial stack trace.  Only used with -code error",
        "-errorstack":"Initial error stack reachable through info errorstack.",
        "-level":"Defines the number of levels up the stack at which the return code of a command should be. Default=1",
        "-options":"The value must be a valid dictionary"
        },
    "scan":
        {
        "%d":"Signed decimal",
        "%s":"String",
        "%c":"Unicode character",
        "%u":"Unsigned decimal",
        "%x":"Lower case hex",
        "%X":"Upper case hex",
        "%o":"Octal",
        "%b":"Binary",
        "%f":"Floating point (default precision=6)",
        "%e":"Scientific notication x.yyye+zz",
        "%g":"%f or %e, based on precision",
        "%G":"%f or %E, based on precision"
        },
    "seek":
        {
        "":""
        },
    "self":
        {
        "list":"",
        "call":"",
        "caller":"",
        "class":"",
        "filter":"",
        "method":"",
        "namespace":"",
        "next":"",
        "object":"",
        "target":""
        },
    "set":
        {
        "":""
        },
    "socket":
        {
        "":""
        },
    "source":
        {
        "":""
        },
    "split":
        {
        "":""
        },
    "string":
        {
        "bytelength":"",
        "cat":"",
        "compare":"",
        "equal":"",
        "first":"",
        "index":"",
        "is":"",
        "last":"",
        "length":"",
        "map":"",
        "match":"",
        "range":"",
        "repeat":"",
        "replace":"",
        "reverse":"",
        "tolower":"",
        "totitle":"",
        "toupper":"",
        "trim":"",
        "trimleft":"",
        "trimright":"",
        "wordend":"",
        "wordstart":""
        },
    "string is":
        {
        "alnum":"Any Unicode alphabet or digit character.",
        "alpha":"Any Unicode alphabet character.",
        "ascii":"Any character with a value less than U+0080.",
        "boolean":"Any of the forms allowed to Tcl_GetBoolean.",
        "control":"Any Unicode control character.",
        "digit":"Any Unicode digit character. ",
        "double":"Any of the valid forms for a double in Tcl.",
        "entier":"Any of the valid string formats for an integer value of arbitrary size in Tcl.",
        "false":"Any of the forms allowed to Tcl_GetBoolean where the value is false.",
        "graph":"Any Unicode printing character, except space.",
        "integer":"Any of the valid string formats for a 32-bit integer value in Tcl.",
        "list":"Any proper list structure.",
        "lower":"Any Unicode lower case alphabet character.",
        "print":"Any Unicode printing character, including space.",
        "punct":"Any Unicode punctuation character.",
        "space":"Any Unicode whitespace character.",
        "true":"Any of the forms allowed to Tcl_GetBoolean where the value is true.",
        "upper":"Any upper case alphabet character in the Unicode character set.",
        "wideinteger":"Any of the valid forms for a wide integer in  Tcl.",
        "wordchar":"Any  Unicode  word  character.  ",
        "xdigit":"Any hexadecimal digit character (0-9A-Fa-f)."
        },
    "subst":
        {
        "":""
        },
    "switch":
        {
        "":""
        },
    "tailcall":
        {
        "":""
        },
    "tcl::Bgerror":
        {
        "":""
        },
    "tcl::CopyDirectory":
        {
        "":""
        },
    "tcl::HistAdd":
        {
        "":""
        },
    "tcl::HistChange":
        {
        "":""
        },
    "tcl::HistClear":
        {
        "":""
        },
    "tcl::HistEvent":
        {
        "":""
        },
    "tcl::HistIndex":
        {
        "":""
        },
    "tcl::HistInfo":
        {
        "":""
        },
    "tcl::HistKeep":
        {
        "":""
        },
    "tcl::HistNextID":
        {
        "":""
        },
    "tcl::HistRedo":
        {
        "":""
        },
    "tcl::array::anymore":
        {
        "":""
        },
    "tcl::array::donesearch":
        {
        "":""
        },
    "tcl::array::exists":
        {
        "":""
        },
    "tcl::array::get":
        {
        "":""
        },
    "tcl::array::names":
        {
        "":""
        },
    "tcl::array::nextelement":
        {
        "":""
        },
    "tcl::array::set":
        {
        "":""
        },
    "tcl::array::size":
        {
        "":""
        },
    "tcl::array::startsearch":
        {
        "":""
        },
    "tcl::array::statistics":
        {
        "":""
        },
    "tcl::array::unset":
        {
        "":""
        },
    "tcl::binary::decode":
        {
        "base64":"",
        "hex":"",
        "uuencode":""
        },
    "tcl::binary::encode":
        {
        "base64":"",
        "hex":"",
        "uuencode":""
        },
    "tcl::binary::format":
        {
        "":""
        },
    "tcl::binary::scan":
        {
        "":""
        },
    "tcl::chan::blocked":
        {
        "":""
        },
    "tcl::chan::close":
        {
        "":""
        },
    "tcl::chan::copy":
        {
        "":""
        },
    "tcl::chan::create":
        {
        "":""
        },
    "tcl::chan::eof":
        {
        "":""
        },
    "tcl::chan::event":
        {
        "":""
        },
    "tcl::chan::flush":
        {
        "":""
        },
    "tcl::chan::gets":
        {
        "":""
        },
    "tcl::chan::names":
        {
        "":""
        },
    "tcl::chan::pending":
        {
        "":""
        },
    "tcl::chan::pipe":
        {
        "":""
        },
    "tcl::chan::pop":
        {
        "":""
        },
    "tcl::chan::postevent":
        {
        "":""
        },
    "tcl::chan::push":
        {
        "":""
        },
    "tcl::chan::puts":
        {
        "":""
        },
    "tcl::chan::read":
        {
        "":""
        },
    "tcl::chan::seek":
        {
        "":""
        },
    "tcl::chan::tell":
        {
        "":""
        },
    "tcl::chan::truncate":
        {
        "":""
        },
    "tcl::clock::AddDays":
        {
        "":""
        },
    "tcl::clock::AddMonths":
        {
        "":""
        },
    "tcl::clock::AssignBaseIso8601Year":
        {
        "":""
        },
    "tcl::clock::AssignBaseJulianDay":
        {
        "":""
        },
    "tcl::clock::AssignBaseMonth":
        {
        "":""
        },
    "tcl::clock::AssignBaseWeek":
        {
        "":""
        },
    "tcl::clock::AssignBaseYear":
        {
        "":""
        },
    "tcl::clock::BSearch":
        {
        "":""
        },
    "tcl::clock::ChangeCurrentLocale":
        {
        "":""
        },
    "tcl::clock::ClearCaches":
        {
        "":""
        },
    "tcl::clock::ConvertLegacyTimeZone":
        {
        "":""
        },
    "tcl::clock::ConvertLocalToUTC":
        {
        "":""
        },
    "tcl::clock::DeterminePosixDSTTime":
        {
        "":""
        },
    "tcl::clock::EnterLocale":
        {
        "":""
        },
    "tcl::clock::FormatNumericTimeZone":
        {
        "":""
        },
    "tcl::clock::FormatStarDate":
        {
        "":""
        },
    "tcl::clock::FreeScan":
        {
        "":""
        },
    "tcl::clock::GetDateFields":
        {
        "":""
        },
    "tcl::clock::GetJulianDayFromEraYearDay":
        {
        "":""
        },
    "tcl::clock::GetJulianDayFromEraYearMonthDay":
        {
        "":""
        },
    "tcl::clock::GetJulianDayFromEraYearMonthWeekDay":
        {
        "":""
        },
    "tcl::clock::GetJulianDayFromEraYearWeekDay":
        {
        "":""
        },
    "tcl::clock::GetLocaleEra":
        {
        "":""
        },
    "tcl::clock::GetSystemTimeZone":
        {
        "":""
        },
    "tcl::clock::GuessWindowsTimeZone":
        {
        "":""
        },
    "tcl::clock::InitTZData":
        {
        "":""
        },
    "tcl::clock::InterpretHMS":
        {
        "":""
        },
    "tcl::clock::InterpretHMSP":
        {
        "":""
        },
    "tcl::clock::InterpretTwoDigitYear":
        {
        "":""
        },
    "tcl::clock::IsGregorianLeapYear":
        {
        "":""
        },
    "tcl::clock::LoadTimeZoneFile":
        {
        "":""
        },
    "tcl::clock::LoadWindowsDateTimeFormats":
        {
        "":""
        },
    "tcl::clock::LoadZoneinfoFile":
        {
        "":""
        },
    "tcl::clock::LocaleNumeralMatcher":
        {
        "":""
        },
    "tcl::clock::LocalizeFormat":
        {
        "":""
        },
    "tcl::clock::MakeParseCodeFromFields":
        {
        "":""
        },
    "tcl::clock::MakeUniquePrefixRegexp":
        {
        "":""
        },
    "tcl::clock::Oldscan":
        {
        "":""
        },
    "tcl::clock::ParseClockFormatFormat":
        {
        "":""
        },
    "tcl::clock::ParseClockFormatFormat2":
        {
        "":""
        },
    "tcl::clock::ParseClockScanFormat":
        {
        "":""
        },
    "tcl::clock::ParseFormatArgs":
        {
        "":""
        },
    "tcl::clock::ParsePosixTimeZone":
        {
        "":""
        },
    "tcl::clock::ParseStarDate":
        {
        "":""
        },
    "tcl::clock::ProcessPosixTimeZone":
        {
        "":""
        },
    "tcl::clock::ReadZoneinfoFile":
        {
        "":""
        },
    "tcl::clock::ScanWide":
        {
        "":""
        },
    "tcl::clock::SetupTimeZone":
        {
        "":""
        },
    "tcl::clock::UniquePrefixRegexp":
        {
        "":""
        },
    "tcl::clock::WeekdayOnOrBefore":
        {
        "":""
        },
    "tcl::clock::add":
        {
        "":""
        },
    "tcl::clock::clicks":
        {
        "":""
        },
    "tcl::clock::format":
        {
        "":""
        },
    "tcl::clock::getenv":
        {
        "":""
        },
    "tcl::clock::mc":
        {
        "":""
        },
    "tcl::clock::mcload":
        {
        "":""
        },
    "tcl::clock::mclocale":
        {
        "":""
        },
    "tcl::clock::mcpackagelocale":
        {
        "":""
        },
    "tcl::clock::microseconds":
        {
        "":""
        },
    "tcl::clock::milliseconds":
        {
        "":""
        },
    "tcl::clock::scan":
        {
        "":""
        },
    "tcl::clock::seconds":
        {
        "":""
        },
    "tcl::dict::append":
        {
        "":""
        },
    "tcl::dict::create":
        {
        "":""
        },
    "tcl::dict::exists":
        {
        "":""
        },
    "tcl::dict::filter":
        {
        "":""
        },
    "tcl::dict::for":
        {
        "":""
        },
    "tcl::dict::get":
        {
        "":""
        },
    "tcl::dict::incr":
        {
        "":""
        },
    "tcl::dict::info":
        {
        "":""
        },
    "tcl::dict::keys":
        {
        "":""
        },
    "tcl::dict::lappend":
        {
        "":""
        },
    "tcl::dict::map":
        {
        "":""
        },
    "tcl::dict::merge":
        {
        "":""
        },
    "tcl::dict::remove":
        {
        "":""
        },
    "tcl::dict::replace":
        {
        "":""
        },
    "tcl::dict::set":
        {
        "":""
        },
    "tcl::dict::size":
        {
        "":""
        },
    "tcl::dict::unset":
        {
        "":""
        },
    "tcl::dict::update":
        {
        "":""
        },
    "tcl::dict::values":
        {
        "":""
        },
    "tcl::dict::with":
        {
        "":""
        },
    "tcl::encoding::convertfrom":
        {
        "":""
        },
    "tcl::encoding::convertto":
        {
        "":""
        },
    "tcl::encoding::dirs":
        {
        "":""
        },
    "tcl::encoding::names":
        {
        "":""
        },
    "tcl::encoding::system":
        {
        "":""
        },
    "tcl::file::atime":
        {
        "":""
        },
    "tcl::file::attributes":
        {
        "":""
        },
    "tcl::file::channels":
        {
        "":""
        },
    "tcl::file::copy":
        {
        "":""
        },
    "tcl::file::delete":
        {
        "":""
        },
    "tcl::file::dirname":
        {
        "":""
        },
    "tcl::file::executable":
        {
        "":""
        },
    "tcl::file::exists":
        {
        "":""
        },
    "tcl::file::extension":
        {
        "":""
        },
    "tcl::file::isdirectory":
        {
        "":""
        },
    "tcl::file::isfile":
        {
        "":""
        },
    "tcl::file::join":
        {
        "":""
        },
    "tcl::file::link":
        {
        "":""
        },
    "tcl::file::lstat":
        {
        "":""
        },
    "tcl::file::mkdir":
        {
        "":""
        },
    "tcl::file::mtime":
        {
        "":""
        },
    "tcl::file::nativename":
        {
        "":""
        },
    "tcl::file::normalize":
        {
        "":""
        },
    "tcl::file::owned":
        {
        "":""
        },
    "tcl::file::pathtype":
        {
        "":""
        },
    "tcl::file::readable":
        {
        "":""
        },
    "tcl::file::readlink":
        {
        "":""
        },
    "tcl::file::rename":
        {
        "":""
        },
    "tcl::file::rootname":
        {
        "":""
        },
    "tcl::file::separator":
        {
        "":""
        },
    "tcl::file::size":
        {
        "":""
        },
    "tcl::file::split":
        {
        "":""
        },
    "tcl::file::stat":
        {
        "":""
        },
    "tcl::file::system":
        {
        "":""
        },
    "tcl::file::tail":
        {
        "":""
        },
    "tcl::file::tempfile":
        {
        "":""
        },
    "tcl::file::type":
        {
        "":""
        },
    "tcl::file::volumes":
        {
        "":""
        },
    "tcl::file::writable":
        {
        "":""
        },
    "tcl::history":
        {
        "add":"",
        "change":"",
        "clear":"",
        "event":"",
        "info":"",
        "keep":"",
        "nextid":"",
        "redo":""
        },
    "tcl::info::args":
        {
        "":""
        },
    "tcl::info::body":
        {
        "":""
        },
    "tcl::info::cmdcount":
        {
        "":""
        },
    "tcl::info::commands":
        {
        "":""
        },
    "tcl::info::complete":
        {
        "":""
        },
    "tcl::info::coroutine":
        {
        "":""
        },
    "tcl::info::default":
        {
        "":""
        },
    "tcl::info::errorstack":
        {
        "":""
        },
    "tcl::info::exists":
        {
        "":""
        },
    "tcl::info::frame":
        {
        "":""
        },
    "tcl::info::functions":
        {
        "":""
        },
    "tcl::info::globals":
        {
        "":""
        },
    "tcl::info::hostname":
        {
        "":""
        },
    "tcl::info::level":
        {
        "":""
        },
    "tcl::info::library":
        {
        "":""
        },
    "tcl::info::loaded":
        {
        "":""
        },
    "tcl::info::locals":
        {
        "":""
        },
    "tcl::info::nameofexecutable":
        {
        "":""
        },
    "tcl::info::patchlevel":
        {
        "":""
        },
    "tcl::info::procs":
        {
        "":""
        },
    "tcl::info::script":
        {
        "":""
        },
    "tcl::info::sharedlibextension":
        {
        "":""
        },
    "tcl::info::tclversion":
        {
        "":""
        },
    "tcl::info::vars":
        {
        "":""
        },
    "tcl::mathfunc::abs":
        {
        "":""
        },
    "tcl::mathfunc::acos":
        {
        "":""
        },
    "tcl::mathfunc::asin":
        {
        "":""
        },
    "tcl::mathfunc::atan":
        {
        "":""
        },
    "tcl::mathfunc::atan2":
        {
        "":""
        },
    "tcl::mathfunc::bool":
        {
        "":""
        },
    "tcl::mathfunc::ceil":
        {
        "":""
        },
    "tcl::mathfunc::cos":
        {
        "":""
        },
    "tcl::mathfunc::cosh":
        {
        "":""
        },
    "tcl::mathfunc::double":
        {
        "":""
        },
    "tcl::mathfunc::entier":
        {
        "":""
        },
    "tcl::mathfunc::exp":
        {
        "":""
        },
    "tcl::mathfunc::floor":
        {
        "":""
        },
    "tcl::mathfunc::fmod":
        {
        "":""
        },
    "tcl::mathfunc::hypot":
        {
        "":""
        },
    "tcl::mathfunc::int":
        {
        "":""
        },
    "tcl::mathfunc::isqrt":
        {
        "":""
        },
    "tcl::mathfunc::log":
        {
        "":""
        },
    "tcl::mathfunc::log10":
        {
        "":""
        },
    "tcl::mathfunc::max":
        {
        "":""
        },
    "tcl::mathfunc::min":
        {
        "":""
        },
    "tcl::mathfunc::pow":
        {
        "":""
        },
    "tcl::mathfunc::rand":
        {
        "":""
        },
    "tcl::mathfunc::round":
        {
        "":""
        },
    "tcl::mathfunc::sin":
        {
        "":""
        },
    "tcl::mathfunc::sinh":
        {
        "":""
        },
    "tcl::mathfunc::sqrt":
        {
        "":""
        },
    "tcl::mathfunc::srand":
        {
        "":""
        },
    "tcl::mathfunc::tan":
        {
        "":""
        },
    "tcl::mathfunc::tanh":
        {
        "":""
        },
    "tcl::mathfunc::wide":
        {
        "":""
        },
    "tcl::mathop::!":
        {
        "":""
        },
    "tcl::mathop::!=":
        {
        "":""
        },
    "tcl::mathop::&":
        {
        "":""
        },
    "tcl::mathop::*":
        {
        "":""
        },
    "tcl::mathop::**":
        {
        "":""
        },
    "tcl::mathop::+":
        {
        "":""
        },
    "tcl::mathop::-":
        {
        "":""
        },
    "tcl::mathop::/":
        {
        "":""
        },
    "tcl::mathop::<":
        {
        "":""
        },
    "tcl::mathop::<<":
        {
        "":""
        },
    "tcl::mathop::<=":
        {
        "":""
        },
    "tcl::mathop::==":
        {
        "":""
        },
    "tcl::mathop::>":
        {
        "":""
        },
    "tcl::mathop::>=":
        {
        "":""
        },
    "tcl::mathop::>>":
        {
        "":""
        },
    "tcl::mathop::^":
        {
        "":""
        },
    "tcl::mathop::eq":
        {
        "":""
        },
    "tcl::mathop::in":
        {
        "":""
        },
    "tcl::mathop::ne":
        {
        "":""
        },
    "tcl::mathop::ni":
        {
        "":""
        },
    "tcl::mathop::|":
        {
        "":""
        },
    "tcl::mathop::~":
        {
        "":""
        },
    "tcl::namespace::children":
        {
        "":""
        },
    "tcl::namespace::code":
        {
        "":""
        },
    "tcl::namespace::current":
        {
        "":""
        },
    "tcl::namespace::delete":
        {
        "":""
        },
    "tcl::namespace::ensemble":
        {
        "":""
        },
    "tcl::namespace::eval":
        {
        "":""
        },
    "tcl::namespace::exists":
        {
        "":""
        },
    "tcl::namespace::export":
        {
        "":""
        },
    "tcl::namespace::forget":
        {
        "":""
        },
    "tcl::namespace::import":
        {
        "":""
        },
    "tcl::namespace::inscope":
        {
        "":""
        },
    "tcl::namespace::origin":
        {
        "":""
        },
    "tcl::namespace::parent":
        {
        "":""
        },
    "tcl::namespace::path":
        {
        "":""
        },
    "tcl::namespace::qualifiers":
        {
        "":""
        },
    "tcl::namespace::tail":
        {
        "":""
        },
    "tcl::namespace::unknown":
        {
        "":""
        },
    "tcl::namespace::upvar":
        {
        "":""
        },
    "tcl::namespace::which":
        {
        "":""
        },
    "tcl::pkgconfig":
        {
        "":""
        },
    "tcl::prefix":
        {
        "all":"",
        "longest":"",
        "match":""
        },
    "tcl::prefix::all":
        {
        "":""
        },
    "tcl::prefix::longest":
        {
        "":""
        },
    "tcl::prefix::match":
        {
        "":""
        },
    "tcl::string::bytelength":
        {
        "":""
        },
    "tcl::string::cat":
        {
        "":""
        },
    "tcl::string::compare":
        {
        "":""
        },
    "tcl::string::equal":
        {
        "":""
        },
    "tcl::string::first":
        {
        "":""
        },
    "tcl::string::index":
        {
        "":""
        },
    "tcl::string::is":
        {
        "":""
        },
    "tcl::string::last":
        {
        "":""
        },
    "tcl::string::length":
        {
        "":""
        },
    "tcl::string::map":
        {
        "":""
        },
    "tcl::string::match":
        {
        "":""
        },
    "tcl::string::range":
        {
        "":""
        },
    "tcl::string::repeat":
        {
        "":""
        },
    "tcl::string::replace":
        {
        "":""
        },
    "tcl::string::reverse":
        {
        "":""
        },
    "tcl::string::tolower":
        {
        "":""
        },
    "tcl::string::totitle":
        {
        "":""
        },
    "tcl::string::toupper":
        {
        "":""
        },
    "tcl::string::trim":
        {
        "":""
        },
    "tcl::string::trimleft":
        {
        "":""
        },
    "tcl::string::trimright":
        {
        "":""
        },
    "tcl::string::wordend":
        {
        "":""
        },
    "tcl::string::wordstart":
        {
        "":""
        },
    "tcl::tm::Defaults":
        {
        "":""
        },
    "tcl::tm::UnknownHandler":
        {
        "":""
        },
    "tcl::tm::add":
        {
        "":""
        },
    "tcl::tm::list":
        {
        "":""
        },
    "tcl::tm::path":
        {
        "add":"",
        "list":"",
        "remove":""
        },
    "tcl::tm::remove":
        {
        "":""
        },
    "tcl::tm::roots":
        {
        "":""
        },
    "tcl::unsupported::assemble":
        {
        "":""
        },
    "tcl::unsupported::disassemble":
        {
        "":""
        },
    "tcl::unsupported::getbytecode":
        {
        "":""
        },
    "tcl::unsupported::inject":
        {
        "":""
        },
    "tcl::unsupported::representation":
        {
        "":""
        },
    "tclLog":
        {
        "":""
        },
    "tell":
        {
        "":""
        },
    "throw":
        {
        "":""
        },
    "time":
        {
        "":""
        },
    "trace":
        {
        "add":"",
        "info":"",
        "remove":"",
        "variable":"",
        "vdelete":"",
        "vinfo":""
        },
    "trace add":
        {
        "command":"... name <rename|delete> commandPrefix",
        "execution":"... name <enter|leave|enterstep|leavestep> commandPrefix",
        "variable":"... name <array|read|write|unset> commandPrefix"
        },
    "trace info":
        {
        "command":"... name",
        "execution":"... name",
        "variable":"... name"
        },
    "trace remove":
        {
        "command":"... name opList commandPrefix",
        "execution":"... name opList commandPrefix",
        "variable":"... name opList commandPrefix"
        },
    "try":
        {
        "":""
        },
    "unknown":
        {
        "":""
        },
    "unload":
        {
        "":""
        },
    "unset":
        {
        "":""
        },
    "update":
        {
        "":""
        },
    "uplevel":
        {
        "":""
        },
    "upvar":
        {
        "":""
        },
    "variable":
        {
        "":""
        },
    "vwait":
        {
        "":""
        },
    "while":
        {
        "":""
        },
    "yield":
        {
        "":""
        },
    "yieldto":
        {
        "":""
        },
    "zlib":
        {
        "adler32":"",
        "compress":"",
        "crc32":"",
        "decompress":"",
        "deflate":"",
        "gunzip":"",
        "gzip":"",
        "inflate":"",
        "push":"",
        "stream":""
        },
    "zlib -header":
        {
        "comment":"",
        "crc":"",
        "filename":"",
        "os":"",
        "size":"",
        "time":"",
        "type":""
        },
    "zlib -headerVar":
        {
        "comment":"",
        "crc":"",
        "filename":"",
        "os":"",
        "size":"",
        "time":"",
        "type":""
        },
    "zlib gunzip":
        {
        "-headerVar":""
        },
    "zlib gzip":
        {
        "-level":"",
        "-header":""
        },
    "zlib push":
        {
        "compress":"",
        "decompress":"",
        "deflate":"",
        "gunzip":"",
        "gzip":"",
        "inflate":""
        },
    "zlib stream":
        {
        "compress":"",
        "decompress":"",
        "deflate":"",
        "gunzip":"",
        "gzip":"",
        "inflate":""
        },
    "zlib::pkgconfig":
        {
        "":""
        }
}
