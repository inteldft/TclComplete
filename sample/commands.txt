CmdSpec
LoadBLT
LoadLib
LoadLib_high
LoadNewFlowManagerBuilder
NBDumpControl
NBFileSelectionDialog
NBMiscControl
NBToolTip
NBZeroNetlist
NflTclFindTheFullPath
POST_all_steps
P_all_inputs_minus_clocks
P_apply_scon
P_astro_upsize_script -fix_ratio (Ratio)
P_astro_upsize_script -out (Output file name)
P_astro_upsize_script -vio_report (Violation report from PrimeTime )
P_back2back -out (Output file name)
P_cell_usage -out (Output file name)
P_connect_net_to_pin_of_cell -net (Name of net of the current design to be connected to pin of a cell)
P_connect_net_to_pin_of_cell -pin (Name of pin of a cell)
P_continue -scr (Name of procedure or absolute path & filename of script)
P_continue -snapshot (Take a snapshot of the calling script/procedure)
P_create_port
P_create_unique_object_name -basename (Base name of the object, this will be cat'ed with an integer to make the object name)
P_create_unique_object_name -max_integer (The integer will be incremented to this limit, if a unique object name is not found by then, an empty string will be returned (default: 1000000))
P_create_unique_object_name -no_warning (Suppress warning message if '-max_integer' limit was reached without creating a unique object name)
P_create_unique_object_name -object (Object for which the unique name will be used: 
P_create_unique_object_name -start_integer 
P_debug
P_drv_cell
P_echo
P_elapsed_time -end (End task tag)
P_elapsed_time -mesg (message)
P_elapsed_time -quiet (Do not echo any messages)
P_elapsed_time -start (Start task tag)
P_elapsed_time -timestamp (Execute P_timestamp before calculating time)
P_error
P_fatal
P_find_common_collection
P_find_file_ext -ext (List of extensions)
P_find_file_ext -only (Look for tag file only)
P_find_file_ext -tag (Tag for the file)
P_find_proc -only (Look for tag procedure only)
P_find_proc -tag (Tag for the procedure)
P_get_best_driver -load (load)
P_get_best_driver -ref (Reference name)
P_get_best_driver -ref_pin (Reference pin name)
P_get_cells
P_get_children
P_get_clock_pins
P_get_clockgate_clock_pins
P_get_clockgate_enable_pins
P_get_clockgate_output_pins
P_get_clocks
P_get_data_pins
P_get_design_name
P_get_enable_pins
P_get_hier_scon
P_get_lib
P_get_libcells
P_get_libpins
P_get_license
P_get_makevars
P_get_nets
P_get_object_pins
P_get_objects
P_get_output_pins
P_get_pins
P_get_ports
P_get_preset_pins
P_get_ref_name
P_get_reset_pins
P_get_scon_from_rtl -latest (To copy to latest tree also)
P_get_scon_from_rtl -rtlm (RTL Model Name)
P_get_scon_from_rtl -rtlp (Path to Local RTL)
P_get_scon_from_rtl -sdm (SD Model)
P_get_scr_proc_name
P_get_si_pins
P_get_so_pins
P_get_variable_val
P_hookup_port -no_hier (Dont connect ports to pins on sub designs of current design)
P_hookup_port -pin (Name of pin of the cell to be hooked up)
P_hookup_port -port (Name of port to be hooked up)
P_info
P_interrupt -scr (Script file to use)
P_is_DC
P_is_ENCOUNTER
P_is_FE
P_is_ICC
P_is_ICC2
P_is_MAGMA
P_is_MG
P_is_PC
P_is_PSYN
P_is_PT
P_is_SNPS
P_is_collection
P_is_synopsys_tool
P_lminus
P_process_high_fanout_signal
P_process_synchronizer_cells
P_proj_analyze -base (Base Name)
P_proj_analyze -design (Design Name)
P_proj_analyze -hier (Relace all occurences throughout hier)
P_proj_analyze -inc (Verilog include files)
P_proj_analyze -pkg (Package)
P_proj_analyze -prm (Param/file)
P_proj_analyze -src (Source code)
P_proj_analyze -type (Source format: 
P_proj_change_names -nohier (Apply rule only to this design, not hierarchical.)
P_proj_change_names -rule (Name of the rule, all rules are applied by default)
P_proj_change_names -verbose (Apply rule only to this design, not hierarchical.)
P_put_scan_attributes
P_read_lib_db
P_rename_soft_macro -prefix (Prefix to use when changing name, default is G_DESIGN_NAME)
P_report_logic_levels
P_rpt_unmapped -output (Name of output file)
P_run_cmd
P_save_tmp_db
P_seal_cmd
P_set_disable
P_set_fix_multiple_port_nets -nohier (Apply rule only to this design, not hierarchical.)
P_set_fp
P_set_maxdelay
P_set_mcp -edge (Apply to edge: 
P_set_mcp -fall_from (Apply to paths falling from only)
P_set_mcp -fall_through 
P_set_mcp -fall_to (Apply to paths falling to only)
P_set_mcp -from (Apply to paths from )
P_set_mcp -reference (Clock to move: 
P_set_mcp -rise_from (Apply to paths rising from only)
P_set_mcp -rise_through 
P_set_mcp -rise_to (Apply to paths rising to only)
P_set_mcp -through (Apply to paths through)
P_set_mcp -to (Apply to paths to)
P_set_mcp -type (Analysis type: 
P_set_mindelay
P_sid
P_sod
P_source_proj_setup -before (Works with 'default_setup'. Source 'default_setup' BEFORE project setup)
P_source_proj_setup -force (Works with 'default_setup'. Source it AFTER project setup)
P_split -char (Character at which to split at)
P_split -count (Split at what count)
P_split -l2r (Count left to right)
P_split -str (String to split)
P_store_syn_vars -group (Synopsys variable group (default: all))
P_store_syn_vars -proc (Name of the restore procedure (default: P_restore_syn_vars))
P_swap_srflop -lib (Library to look at for getting sr and nsr flops)
P_swap_srflop -log (File to write which contains a list of all cells which were swapped)
P_swap_srflop -srflop_list 
P_timestamp -prefix (String to print before the date)
P_timestamp -quiet (Do not echo the timestamp)
P_true
P_unloaded_regs
P_warning
T_absName
T_check_vars
T_chmod
T_closeLog
T_cp
T_debug
T_debugF
T_debugS
T_diff
T_dumpState
T_error
T_errorF
T_eval
T_existSet
T_fatal
T_fatalF
T_fileCheck
T_fileCheckP
T_fstring
T_fstring_add_index
T_fstring_det_range
T_getLineCount
T_getScrDir
T_getScrName
T_getSubName
T_gets
T_info
T_isNumber
T_lcommon
T_lminus
T_ln
T_lreverse
T_lsearch
T_lunique
T_mkdir
T_mputs
T_openLog
T_parseArgs
T_parseStatus
T_printUsage
T_printVar
T_printVarDebug
T_puts
T_readWriteStatus
T_remove_start_end_spaces
T_reset_T_Quiet
T_rm
T_sel2list
T_set_T_Quiet
T_setarr
T_singleList
T_spin
T_split
T_touch
T_true
T_unset
T_unsetIndex
T_warning
T_warningF
__h2t_create_shape_icc2
__h2t_create_trunk_snps
__h2t_get_pin_port_layer_width
__h2t_get_port_pin_layer_width
__h2t_process_layerless_pin_port
__h2t_set_custom_attr
_h2t_apply_nets_order
_h2t_format_bbox
_h2t_process_opts
_load_Oratcl
_load_tclreadline
_tixDeleteFlags
_tixRecordFlags
aH
aV
add_attachment -file_name (name of the file to be attached)
add_attachment -object (Object that will have this attachment)
add_attribute
add_buffer -inverter_pair (Add a pair of inverter cells instead of a buffer)
add_buffer -lib_cell 
add_buffer -new_cell_names 
add_buffer -new_net_names 
add_buffer -no_of_cells (no of buffer to add: 
add_buffer_on_route -allow_insertion_over_cell 
add_buffer_on_route -allow_physical_feedthrough_buffer 
add_buffer_on_route -bus_cell_prefix 
add_buffer_on_route -cell_prefix 
add_buffer_on_route -detect_layer (Auto detect the layer number)
add_buffer_on_route -dont_allow_insertion_over_cell 
add_buffer_on_route -first_distance 
add_buffer_on_route -first_distance_length_ratio 
add_buffer_on_route -lib_cell 
add_buffer_on_route -location (List of locations of new cells' in the form {X1 Y1 Layer X2 Y2 Layer ... })
add_buffer_on_route -max_distance_for_incomplete_route 
add_buffer_on_route -max_distance_route_to_gas_station 
add_buffer_on_route -max_distance_to_route 
add_buffer_on_route -max_distance_to_spare_cell 
add_buffer_on_route -net_prefix (Prefix for the new nets (default: eco_net))
add_buffer_on_route -not_spare_cell_aware 
add_buffer_on_route -on_top_hierarchy (Add buffer on highest hierarchical net of the given net)
add_buffer_on_route -only_global_routed_nets 
add_buffer_on_route -punch_port (punch port if necessary)
add_buffer_on_route -repeater_distance 
add_buffer_on_route -repeater_distance_length_ratio 
add_buffer_on_route -respect_blockages (whether respect blockages and macros)
add_buffer_on_route -respect_gas_station 
add_buffer_on_route -respect_voltage_areas 
add_buffer_on_route -scaled_by_layer 
add_buffer_on_route -scaled_by_width (Using width scaling)
add_buffer_on_route -snap_to_sites (Snap newly added buffers to the nearest sites)
add_buffer_on_route -user_specified_buffers 
add_buffer_on_route -user_specified_bus_buffers 
add_buffer_on_route -verbose (Verbose output)
add_buffer_on_route -voltage_area_specific_lib_cells 
add_eco_repeater -cell_name (name for the new cell)
add_eco_repeater -input_net_name (repeater input net name)
add_eco_repeater -lib_cell 
add_eco_repeater -load (List of load ports or pins)
add_eco_repeater -output_net_name (repeater output net name)
add_exception_clm_from_fifoentry
add_exception_on_gasket_flops
add_exception_on_lane_in_flops
add_exception_on_stepdown_flops
add_feedthrough_buffers -buffer_side (add buffer on input side or output side or both, default is output)
add_feedthrough_buffers -logical (eliminate logical feedthroughs (that can lead to assign statement) on all blocks default false)
add_feedthrough_buffers -nets (collection of nets)
add_feedthrough_buffers -type 
add_feedthrough_buffers -user_buffer (buffer specified for feedthroughs, default nil)
add_feedthrough_buffers -verbose (verbose messages - not supported yet)
add_pins_to_virtual_connection -object 
add_pins_to_virtual_connection -pins (Specify pins/ports to be connected to the virtual connection)
add_port_protection_diodes -diode_lib_cell 
add_port_protection_diodes -ignore_dont_touch (ignore dont_touch net)
add_port_protection_diodes -port (list of ports)
add_port_protection_diodes -prefix (prefix name of the inserted diode)
add_port_state -state 
add_post_stage
add_post_step
add_power_state
add_pre_stage
add_pre_step
add_pst_state -pst (Name of the pst)
add_pst_state -state (List of supply net or port states)
add_redundant_vias -effort (redundant via effort, default is medium : 
add_redundant_vias -list_only (false|true)]
add_redundant_vias -nets (the nets for redundant via insertion (default all))
add_redundant_vias -timing_preserve_hold_slack_threshold 
add_redundant_vias -timing_preserve_nets 
add_redundant_vias -timing_preserve_setup_slack_threshold 
add_set_sense_to_bypass_mux
add_shield_association -nets (Shielded nets to add to shield association)
add_shield_association -objects 
add_spare_cells -boundary (boundary)
add_spare_cells -cell_name (prefix name of spare cell)
add_spare_cells -density_aware_ratio 
add_spare_cells -hier_cell 
add_spare_cells -ignore_blockage_types 
add_spare_cells -input_pin_connect_type 
add_spare_cells -lib_cell (Library cell or design)
add_spare_cells -num_cells 
add_spare_cells -num_instances 
add_spare_cells -voltage_areas 
add_tie_cells -objects (Ports, pins, cells or lib_cells for tie-cell insertion)
add_tie_cells -tie_high_lib_cells 
add_tie_cells -tie_low_lib_cells 
add_to_bound
add_to_bundle -before_object 
add_to_bundle -bundle 
add_to_bundle -prepend (Add object as the first object in the bundle, default is to append)
add_to_collection -unique (Remove duplicates from the result)
add_to_edit_group
add_to_group
add_to_io_guide -before (Add pad cells before this cell)
add_to_io_ring
add_to_matching_type
add_to_multisource_clock_sink_group -name (group name of a set of sinks)
add_to_multisource_clock_sink_group -sinks (list of clock sinks to be added)
add_to_must_join_ports
add_to_net
add_to_net_bus
add_to_pin_blockage
add_to_pin_guide
add_to_port_bus
add_to_routing_corridor
add_to_rp_group -allow_overlap (allow RP blockage to be overlapped with other fixed objects)
add_to_rp_group -blockage 
add_to_rp_group -cells (Cells to be added in RP Group)
add_to_rp_group -column 
add_to_rp_group -free_placement (No RP structure wll be maintained for the cells)
add_to_rp_group -height 
add_to_rp_group -num_columns 
add_to_rp_group -num_rows 
add_to_rp_group -orientation 
add_to_rp_group -override_alignment 
add_to_rp_group -pin_name 
add_to_rp_group -row (RP row where element will be added: 
add_to_rp_group -rp_group 
add_to_rp_group -width 
add_via_mapping -force (overwrite existing via mapping in the via mapping table)
add_via_mapping -from (From via pattern)
add_via_mapping -from_icc_file 
add_via_mapping -to (To via pattern)
add_via_mapping -transform 
add_via_mapping -weight (Weight of the mapping, 30 is the highest priority: 
alias
align_objects -anchor (names or collection of anchor objects)
align_objects -anchor_side 
align_objects -group (align as group)
align_objects -margin (consider keepout margins or guard bands)
align_objects -offset (align offset)
align_objects -parent (align to parent)
align_objects -side (align side (default is left): 
align_objects -to (align to point)
align_objects -to_box (align to box)
align_pins -change_layer_height (match pins' height and layers with reference pins)
align_pins -change_layer_width (match pins' width and layers with reference pins)
all_clocks -design (Top design for finding objects)
all_clocks -mode (Mode for finding objects)
all_connected -leaf (Get leaf/global pins of nets)
all_connected -physical_context (Search physically; default is logically)
all_corners -design (Top design for finding objects)
all_exceptions -design (Top design for finding objects)
all_exceptions -mode (Mode for finding objects)
all_fanin -flat (Hierarchy is ignored)
all_fanin -levels (Maximumum number of cell levels to traverse: 
all_fanin -only_cells (Return cells rather than pins)
all_fanin -pin_levels 
all_fanin -startpoints_only (Find only the timing startpoints)
all_fanin -step_into_hierarchy (Count levels inside sub-hierarchies)
all_fanin -to (List of sink ports, pins and/or nets)
all_fanin -trace_arcs 
all_fanout -clock_tree (Return list of clock tree components)
all_fanout -endpoints_only (Find only the timing endpoints)
all_fanout -flat (Hierarchy is ignored)
all_fanout -from (List of source ports, pins and/or nets)
all_fanout -levels (Maximumum number of cell levels to traverse: 
all_fanout -only_cells (Return cells rather than pins)
all_fanout -pin_levels 
all_fanout -step_into_hierarchy (Count levels inside sub-hierarchies)
all_fanout -trace_arcs 
all_high_transitive_fanout -nets (high fanout nets)
all_high_transitive_fanout -threshold (high fanout threshold)
all_high_transitive_fanout -through_buf_inv (treat buffers and inverters as transparent - check for transitive fanout)
all_inputs -clock (Get ports with input delay relative to this clock)
all_inputs -edge_triggered (Get ports with edge-triggered input delay)
all_inputs -level_sensitive (Get ports with level-sensitive input delay)
all_modes -design (Top design for finding objects)
all_outputs -clock (Get ports with output delay relative to this clock)
all_outputs -edge_triggered (Get ports with edge-triggered output delay)
all_outputs -level_sensitive (Get ports with level-sensitive output delay)
all_registers -async_pins (Return collection of register async pins)
all_registers -cells (Return collection of cells (default))
all_registers -clock (Consider registers of this clock)
all_registers -clock_pins (Return collection of register clock pins)
all_registers -data_pins (Return collection of register data pins)
all_registers -edge_triggered (Only consider edge-triggered flip-flops)
all_registers -fall_clock 
all_registers -level_sensitive (Only consider level-sensitive latches)
all_registers -master_slave (Only consider master/slave registers)
all_registers -no_hierarchy (Only search the current instance)
all_registers -output_pins (Return collection of register output pins)
all_registers -rise_clock 
all_registers -slave_clock_pins (Return collection of register slave clock pins)
all_scenarios -design (Top design for finding objects)
all_transitive_fanin -flat (Hierarchy is ignored)
all_transitive_fanin -levels (Maximumum number of cell levels to traverse: 
all_transitive_fanin -only_cells (Return cells rather than pins/ports)
all_transitive_fanin -startpoints_only (Find only the fanin startpoints)
all_transitive_fanin -to (list of sink pins, ports, and/or nets)
all_transitive_fanout -endpoints_only (Find only the timing endpoints)
all_transitive_fanout -flat (Hierarchy is ignored)
all_transitive_fanout -from (List of source ports, pins and/or nets)
all_transitive_fanout -levels (Maximumum number of cell levels to traverse: 
all_transitive_fanout -only_cells (Return cells rather than pins)
als_add_to_last_command
als_change_highlight -add (Add)
als_change_highlight -color (Color)
als_change_highlight -remove (Remove)
als_get_highlight -color (Color)
als_history_grep
als_list_attributes_grep
als_load_aliases
als_pop_from_cell
als_print_all_connected
als_print_collection -annotate (Annotate driver/receiver. Default: None)
als_print_collection -attribute (Name of attribute. Default: full_name)
als_print_list -range (Range list to print)
als_push_to_cell
als_stages
als_steps
analyze_design_violations -drc_nets (a list of nets with violations to be analyzed)
analyze_design_violations -endpoints (a list of endpoints with violations to be analyzed)
analyze_design_violations -fanout (the fanout threshold that the high-fanout is defined, default is 30)
analyze_design_violations -max_slack (only analyze the violation less than max slack: 
analyze_design_violations -min_slack (only analyze the violation greater than min slack: 
analyze_design_violations -output (the file to output the analysis result, default is analyze_design_violations.txt)
analyze_design_violations -slack (the up bound of the slack which is defined as small violation, default is 5 ps)
analyze_design_violations -stage (indicate the stage to do the analysis)
analyze_design_violations -type (indicate the violation type for analysis)
analyze_lib_cell_placement -gifs (produce gifs of legal and illegal sites)
analyze_lib_cell_placement -lib_cells (collection of lib cells)
analyze_lib_cell_placement -max_cells 
analyze_lib_cell_placement -no (disable PDC checking)
analyze_lib_cell_placement -no (disable advanced rule checking)
analyze_lib_cell_placement -region (target region)
analyze_lib_cell_placement -threshold 
analyze_lib_cell_placement -trials 
analyze_power_plan -nets (List of power or ground nets)
analyze_power_plan -pad_references 
analyze_power_plan -power_budget 
analyze_power_plan -read_power_file 
analyze_power_plan -report_track_utilization_only 
analyze_power_plan -use_terminals_as_pads 
analyze_power_plan -voltage (Supply voltage value; unit is Volt (V); default is 1.5V: 
analyze_subcircuit -apply_annotation (Source Tcl annotation files)
analyze_subcircuit -clock (Clock name)
analyze_subcircuit -configuration 
analyze_subcircuit -create_spice_deck (Create SPICE deck)
analyze_subcircuit -driver_subckt_files 
analyze_subcircuit -extraction (Do extraction)
analyze_subcircuit -from (From pin list)
analyze_subcircuit -name (Subcircuit name)
analyze_subcircuit -net (Net name list)
analyze_subcircuit -num_simulation_cycles 
analyze_subcircuit -rc_include_file_suffix 
analyze_subcircuit -run_simulation (Run SPICE)
analyze_subcircuit -simulator (SPICE simulator version: 
analyze_subcircuit -spef_input_file_suffix 
analyze_subcircuit -spice_header_files 
analyze_subcircuit -to (To pin list)
analyze_subcircuit -verbose (Verbose output)
analyze_subcircuit -write_annotation (Write Tcl annotation files)
analyze_timing_correlation -clear_work_dir (Overwrite existing work_dir on completion)
analyze_timing_correlation -delay_calculation_style 
analyze_timing_correlation -disable_compatibility_settings 
analyze_timing_correlation -enable_ccs_rcv_cap 
analyze_timing_correlation -enable_compatibility_settings 
analyze_timing_correlation -overwrite_work_dir (Initially overwrite existing work_dir)
analyze_timing_correlation -pass_rate_threshold 
analyze_timing_correlation -pt_exec_path 
analyze_timing_correlation -pt_post_link_script 
analyze_timing_correlation -pt_pre_link_script 
analyze_timing_correlation -pt_search_path 
analyze_timing_correlation -pt_user_script 
analyze_timing_correlation -save_pt_session (Save PrimeTime-Sessions for later use. Saved-directory will be named as <work_dir>/saved_session/<block>_<scenario>_<pt_version>_auto.save_session)
analyze_timing_correlation -scenarios 
analyze_timing_correlation -script_only (Write the auto-scripts files only.)
analyze_timing_correlation -si_enable_analysis 
analyze_timing_correlation -use_pt_save_session (Reuse existing PrimeTime-save-Sessions. Expects session to be named as <work_dir>/saved_session/<block>_<scenario>_<pt_version>_auto.save_session)
analyze_timing_correlation -verbose (Show more details about command execution)
analyze_timing_correlation -waveform_analysis_mode 
analyze_timing_correlation -work_dir (Directory for output files, Reuse existing data if directory already exists)
append_to_collection -unique (Remove duplicates from the result)
append_var
apr_define_user_attributes
apr_duplicate_slos_return_hfn
apr_gen_latest_nlib_manifest
apr_get_aocvm_voltage_for_corner
apr_icc_ctsizer_run_flow
apr_icc_lr_run_flow
apr_icc_lrdp_run_flow
apr_lr_check_env_vars
apr_lr_overrride_tool_versions
apr_lr_ovr_tools
apr_lr_restore_saved_vars_and_tool_versions
apr_lr_setup_run_dir
apr_netlist
apr_pt_ctsizer_run_flow
apr_pt_lr_run_flow
apr_pt_lrdp_run_flow
apr_read_aocvm -corner (Name of corner, usually max or min)
apr_read_aocvm -table (Pointer to AOCVM file)
apr_reports
apr_run_rumba_flow
apr_save_stage
apropos -symbols_only (Search command/option names only)
assign_3d_interchip_nets -bumps 
assign_3d_interchip_nets -matching_types 
assign_3d_interchip_nets -nets 
assign_track_in_bin
associate_mv_cells -all (associate isolation cells, level shifters, retention cells and power switch cells)
associate_mv_cells -isolation_cells (associate isolation cells)
associate_mv_cells -level_shifters (associate level shifter cells)
associate_mv_cells -power_switches (associate power switch cells)
associate_mv_cells -retention_registers (associate retention cells)
associate_supply_set -handle 
attach_drc_error_data -keep (Keep the original exported data)
attach_drc_error_data -name (Name of the attachment)
audit_scripts -input (location of scripts to be audited)
audit_scripts -skip_hidden (skip hidden app_options and tcl commands reporting)
auto_execok
auto_import
auto_load
auto_load_index
auto_mkindex
auto_mkindex_old
auto_proc
auto_qualify
auto_reset
bab_create_new_mw_cell
balance_clock_groups
bell
bind
bindtags
block_grid
bound_to_lego
build_trunking_bboxes_for_fivr_dt62_right_fp
button
cP
cPx
cPy
calc_area
calculate_tracks
canvas
cd
change_abstract -cells (Cells of physical hierarchy)
change_abstract -force (Change the reference even if the ports are different)
change_abstract -label (Block label or "")
change_abstract -lib (Block library)
change_abstract -promote_constraints (Promote constraints from new block to the top)
change_abstract -references 
change_abstract -reload (Reload blocks from disk)
change_abstract -view (New view: 
change_link -design (Top design for finding objects)
change_names -dont_touch 
change_names -hierarchy (Change the names hierarchically within current block only)
change_names -include_sub_blocks (Change names across all hierarchies including different physical hierarchies)
change_names -instance (Specifies the instance on which to apply the change_names command.)
change_names -log_changes (name of the logfile)
change_names -new_name (Specifies the new instance name when the -instance option is used.)
change_names -rules (name of the rule)
change_names -skip_physical_only_cells 
change_names -verbose (Print messages while executing the command.)
change_reference -design 
change_reference -module (Name for the new module)
change_reference -verbose (Show detailed information)
change_selection -add (Add to current selection)
change_selection -clock_trees 
change_selection -name (Name of selection bus to change)
change_selection -remove (Remove from current selection)
change_selection -replace (Replace current selection)
change_selection -toggle (Toggle in the current selection)
change_selection -type (Type to filter)
change_view -cells (Cells of physical hierarchy)
change_view -force (Change the reference even if the ports are different)
change_view -label (Block label or "")
change_view -lib (Block library)
change_view -references 
change_view -reload (Reload blocks from disk)
change_view -view (New view: 
characterize_block_pg -compile_pg_script 
characterize_block_pg -output_directory 
check_3d_design -bump_cluster (bool)
check_3d_design -chip_placement (bool)
check_3d_design -logical_physical_consistency 
check_3d_design -matching_type (bool)
check_3d_design -physical_contact (bool)
check_3d_design -physical_design_rule 
check_3d_design -verbose (bool)
check_boundary_cells -error_view (Error Browser output is written into this file)
check_bufferability -driver (driver pin or port)
check_bufferability -hierarchy 
check_bufferability -loads (load pins or ports)
check_bufferability -nets (hierarchical nets)
check_bufferability -nosplit (Don't split lines if column overflows)
check_bufferability -verbose (verbose mode)
check_bufferability -voltage_area 
check_busplan_constraints -check_ref (check referenced buses of source buses)
check_busplan_constraints -ref_buses (get referenced buses)
check_clock_trees -clocks (List of clocks)
check_clock_trees -message_limit (Enable user to set messge limit)
check_consistency_settings -output 
check_consistency_settings -tool 
check_consistency_settings -work_dir 
check_design -checks (Takes name of one or more checks as argument)
check_design -ems_database (Takes name of ems database file as argument)
check_design -open_message_browser 
check_duplicates -blocks 
check_duplicates -object_types 
check_duplicates -remove (Removes the duplicate)
check_duplicates -return_as_collection 
check_duplicates -verbose (Gives verbose messages)
check_feedthroughs -cells 
check_feedthroughs -close_to_edge (Checks for feedthrough ports that are all less than specified distance from the edge.)
check_feedthroughs -feedthrough_length 
check_feedthroughs -filter_by_length (Checks for feed-throughs with nets less than specified length.)
check_feedthroughs -include_buffered (Includes buffered feedthroughs for checking)
check_feedthroughs -include_original_feedthroughs 
check_feedthroughs -mixed (Reports and returns only the mixed feedthroughs in the design. Cannot be used with any other switch except for the -cells option.)
check_feedthroughs -net_constraints (Checks per net, per block feedthrough constraints)
check_feedthroughs -pure (Reports and returns only the pure feedthroughs in the design. Cannot be used with any other switch except for the -cells option.)
check_feedthroughs -redundant (Reports and returns those output ports that connect back to one or more input ports on the same physical block instance. Cannot be used with any options except for -include_original.)
check_feedthroughs -reused_feedthroughs (Checks the feedthroughs that are reused across MIB instances)
check_feedthroughs -self (Returns those top level ports that are feed-throughs. Cannot be used with any other switch.)
check_feedthroughs -shape (Reports feedthroughs by shape. This option cannot be used in conjunction with any other option except for the -cells switch.: 
check_feedthroughs -tolerance_distance 
check_feedthroughs -topo_constraints (Checks per net, topological constraints)
check_feedthroughs -unused_feedthroughs (Checks the feedthroughs that are unused (no top level connections))
check_finfet_grid -hierarchical (Check level-by-level in current design)
check_finfet_grid -objects (List of objects to check)
check_freeze_silicon
check_hier_design -references (Name of design to be checked)
check_hier_design -stage 
check_host_options -host_options 
check_host_options -work_dir 
check_io_placement -bump_assignment (Checks the bump to pin assignment)
check_io_placement -cells 
check_io_placement -error_view (Error Browser output is written into this file)
check_io_placement -filename (Pad Placement violations are written into this file)
check_io_placement -flipping (Check if I/O cells are consistent with the user set flip attribute)
check_io_placement -gap (Check if there's any gap between cells on I/O guides)
check_io_placement -io_guides 
check_io_placement -matching_types 
check_io_placement -min_pitch (Check if min pitch is honored on I/O guides)
check_io_placement -output_directory 
check_io_placement -overlap (Checks for overlap among specified elements)
check_io_placement -pad_assignment_file 
check_io_placement -pad_to_guide_assignment 
check_io_placement -power_constraints (Check if the power constraints are honoured)
check_io_placement -signal_constraints (Check if signal constraints are honoured)
check_io_placement -unplaced (Check for unplaced pads)
check_legality -cells (List of cells to be checked)
check_legality -check_distance 
check_legality -output_tcl (Write out a tcl file with all violated cells. This file can be customized and sourced later.)
check_legality -verbose (Print verbose messages.)
check_license
check_lvs -check_child_cells (false|true)]
check_lvs -check_top_level_blockages (true|false)]
check_lvs -check_zero_spacing_blockages (false|true)]
check_lvs -checks 
check_lvs -exclude_child_cell_types 
check_lvs -max_errors 
check_lvs -nets 
check_lvs -open_reporting 
check_lvs -report_floating_pins (false|true)]
check_mib_alignment -cell_row (Alignment of cell rows)
check_mib_alignment -layers (Check PG straps and/or wire tracks on the specified layers only)
check_mib_alignment -pg (Alignment of P/G straps)
check_mib_alignment -verbose (print error of checking)
check_mib_alignment -wire_tracks (Alignment of wire tracks)
check_mib_for_pin_placement -asymmetric_connections 
check_mib_for_pin_placement -cells 
check_mib_for_pin_placement -nets (Specifies the collection of nets for mib pin checking.)
check_mib_for_pin_placement -swapped_connections (Checks for MIB connections that are swapped.)
check_mib_for_pin_placement -top_level_terminal_locations 
check_mv_design -erc_mode (Electrical rule checking mode)
check_mv_design -max_message_count 
check_mv_design -power_connectivity (Check power and ground pin connectivity)
check_mv_design -voltage_threshold 
check_netlist -cells (Check the cells of design)
check_netlist -hierarchical (Report details of all cells and nets in the design)
check_netlist -nets (Check the nets of design)
check_netlist -ports (Check the ports of design)
check_objects_for_push_down -cells 
check_pg_connectivity -check_block_pins 
check_pg_connectivity -check_macro_pins 
check_pg_connectivity -check_pad_pins 
check_pg_connectivity -check_std_cell_pins 
check_pg_connectivity -error_view_name 
check_pg_connectivity -max_floating_cluster_size 
check_pg_connectivity -nets (List of power or ground nets)
check_pg_connectivity -write_connectivity_file 
check_pg_drc -bottom_layer (Name of bottom layer in a range where rules to be checked)
check_pg_drc -check_detail_route_shapes 
check_pg_drc -check_metal_on_track (false|true)]
check_pg_drc -check_min_metal_area_on_pins 
check_pg_drc -coordinates 
check_pg_drc -do_not_check_shapes_in_lib_cells 
check_pg_drc -ignore_clock_nets (false|true)]
check_pg_drc -ignore_keepout_margins 
check_pg_drc -ignore_std_cells (Wheather to ignore library cells )
check_pg_drc -load_routing_of_all_nets 
check_pg_drc -nets (Collection of nets to be checked)
check_pg_drc -no_gui (Send report to text-file only)
check_pg_drc -output (File for text-report)
check_pg_drc -top_layer (Name of top layer in a range where rules to be checked)
check_pg_missing_vias -honor_routing_blockage 
check_pg_missing_vias -ignore_shield_route (ignore shield route shapes)
check_pg_missing_vias -ignore_small_intersections 
check_pg_missing_vias -nets (List of power or ground nets)
check_pg_missing_vias -output_file 
check_pg_missing_vias -via_rule_file 
check_pg_missing_vias -write_default_via_rule_file 
check_physical_constraints
check_pin_placement -alignment (false|true)]
check_pin_placement -alignment_histogram (false|true)]
check_pin_placement -alignment_report_file 
check_pin_placement -alignment_tolerance_distance 
check_pin_placement -blocked_only (false|true)]
check_pin_placement -cell_type 
check_pin_placement -connection_type 
check_pin_placement -corner_keep_out (false|true)]
check_pin_placement -detour_tolerance 
check_pin_placement -error_view (Error Browser output is written into this file)
check_pin_placement -exclude_unplaced_objects (false|true)]
check_pin_placement -filename (Pin placement violation or alignment QoR reports are written into this file)
check_pin_placement -layer_mismatch_only (false|true)]
check_pin_placement -layers (false|true)] (Determines if pins are placed on legal metal layer constraints (default false))
check_pin_placement -missing (false|true)]
check_pin_placement -net_length 
check_pin_placement -nets (Specifies the collection of nets for pin placement checking.)
check_pin_placement -off_edge (false|true)]
check_pin_placement -offset (false|true)] (Determines if pins violate offset constraints (default false))
check_pin_placement -order (false|true)]  (Determines if pins violate order constraints (default false))
check_pin_placement -output_directory 
check_pin_placement -pin_blockage (false|true)]
check_pin_placement -pin_detour (false|true)]
check_pin_placement -pin_guide (false|true)]
check_pin_placement -pin_mask_constraint (false|true)]
check_pin_placement -pin_size (false|true)]
check_pin_placement -pin_spacing (false|true)]
check_pin_placement -pin_type 
check_pin_placement -pins (Specifies the collection of pins for pin placement checking.)
check_pin_placement -ports (Specifies the collection of ports (top level terminals) for pin placement checking.)
check_pin_placement -pre_route (false|true)]
check_pin_placement -report_net_details (false|true)]
check_pin_placement -routing_corridor (false|true)]
check_pin_placement -self (Specifies the pin placement checking is for current top design)
check_pin_placement -shorts (false|true)] (Checks for pin shorts (default true))
check_pin_placement -sides (false|true)]  (Determines if pins are placed on legal sides (default false))
check_pin_placement -single_pin 
check_pin_placement -stacking (false|true)]
check_pin_placement -synthesized_pins (false|true)]
check_pin_placement -technology_spacing_rules (false|true)]
check_pin_placement -wide_track (false|true)]
check_pin_placement -wire_track (false|true)]
check_placement_constraints
check_pre_pin_placement
check_routability -access_edge_whole_side (false|true)]
check_routability -allow_via_rotation (false|true)]
check_routability -blocked_range (Number of pitches for same-layer accessibility check of macro and top-level ports. Default is 10)
check_routability -blocked_range_via_side 
check_routability -check_frozen_net_blocked_ports (false|true)]
check_routability -check_lib_via_cut_blockage (false|true)]
check_routability -check_min_grid (false|true)]
check_routability -check_no_net_pins (false|true)]
check_routability -check_non_standard_cell_blocked_ports (false|true)]
check_routability -check_out_of_boundary (false|true)]
check_routability -check_pg_blocked_ports (false|true)]
check_routability -check_real_metal_blockage_overlap_pin (false|true)]
check_routability -check_redundant_pg_shapes (false|true)]
check_routability -check_routing_track_space (false|true)]
check_routability -check_shield (false|true)]
check_routability -check_standard_cell_blocked_ports (false|true)]
check_routability -check_via_cut_blockage (false|true)]
check_routability -connect_standard_cells_within_pins (false|true)]
check_routability -error_data (output error data name (default check_routability.err))
check_routability -honor_layer_constraints (false|true)]
check_routability -obey_access_edges (false|true)]
check_routability -obey_direction_preference (false|true)]
check_routability -report_no_access_edge (false|true)]
check_routability -standard_cell_search_range 
check_routes -antenna (false|true)]
check_routes -check_from_frozen_shapes (false|true)]
check_routes -check_from_user_shapes (false|true)]
check_routes -coordinates 
check_routes -drc (false|true)]    (check design rule violations (default true))
check_routes -nets (collection of nets to check for opens, antenna rules, voltage area violations)
check_routes -open_net (false|true)]
check_routes -report_all_open_nets (false|true)]
check_routes -voltage_area (false|true)]
check_routing_corridors
check_rp_constraints -analyze_placement (Perform placement analysis on RP Group)
check_rp_constraints -no_adv (Do not perform Adv Rules Checks)
check_rp_constraints -no_pdc (Do not perform PDC Checks)
check_rp_constraints -no_rp_constraints (Do not check the RP constraints while checking if RP Group is placed)
check_rp_constraints -region (Perform placement analysis within this region)
check_rp_constraints -threshold (Report RP Groups with pass rate below the threshold: 
check_rp_constraints -trials 
check_rp_constraints -verbose (Report failures in detail)
check_sadp_tracks
check_scan_chain -chain_name 
check_supply_equivalence -functional (functional equivalence)
check_supply_equivalence -pst (PST equivalence)
check_supply_equivalence -verbose (show detailed information)
check_tcd_cells -include_small_windows 
check_tcd_cells -lib_cells (collection of Tcd lib cells)
check_tcd_cells -window_size 
check_tcd_cells -window_step 
check_timing -all (Do all the checks)
check_timing -corners (check scenarios of these corners (default is all corners))
check_timing -exclude (checks)
check_timing -include (checks)
check_timing -modes (check scenarios of these modes (default is all modes))
check_timing -override_defaults 
check_timing -scenarios 
check_wires_for_pushdown -nets (Nets to run push-down on for testing)
checkbutton
checkerboard_horizontal
checkerboard_vertical
cips_source
clean_floorplan
clipboard
clock
clock_opt -from (Run subset of clock_opt flow starting with specified step)
clock_opt -list_only (List sub-steps of clock_opt flow [ build_clock route_clock final_opto ])
clock_opt -to (Run subset of clock_opt flow ending with specified step)
close_blocks -force (close block with un-saved data)
close_blocks -purge (purge block from memory)
close_blocks -save (Save block before closing it)
close_drc_error_data -force (Close the error data even if there are pending changes)
close_drc_error_data -save (Save any pending changes before closing the error data)
close_ems_databases -save (Saves the EMS database(s) onto disk, before closing them.)
close_lib -all (Purge all libraries from memory regardless of reference count)
close_lib -compress (Save modified data and designs in comperssed format)
close_lib -force (Force library closed regardless of un-saved data or designs)
close_lib -purge (Purge library from memory regardless of reference count)
close_lib -save_designs (Save modified data and designs)
clp
col_release_data
collection_to_list -brace_with_quotes (use " to enclose results, not {})
collection_to_list -name_only (do not display type of each object)
collection_to_list -newline (use newlines to separate names in output)
collection_to_list -no_braces (do not enclose results in {})
collection_to_list -no_sort (do not sort the data)
collection_to_list -objects (Collection of object(s) to display)
collection_to_list -truncate (Truncate display to n elements)
color_macro_pins
commit_blackbox_timing -convert_placement_abstract 
commit_block -library (Library in which the design is to be created)
commit_block -verbose (Show detailed information)
commit_upf -infer_supply_from_pg_net 
commit_upf -skip_resolve_pg_net (Skip resolving pg nets)
compare_checksum -icc2 (Path to ICC2 checksums)
compare_checksum -pt (Path to PT checksums)
compare_collections -order_dependent (Order of objects matters)
compare_floorplans -input (Directory for input files; default is ./floorplan)
compare_floorplans -top_level_only (Specify to compare top level only)
compare_floorplans -verbosity (Verbose level, default is minimum: 
compile_boundary_cells -add_placement_blockage 
compile_pg -ignore_drc (ignore DRCs)
compile_pg -ignore_via_drc (ignore via DRCs only)
compile_pg -strategies 
compile_pg -tag (tag for created vias/wires)
compile_pg -undo (remove the most recently created PG)
compile_pg -via_rule (via rule name for PG strategies)
compute_area -objects (Use as input geometry)
compute_budget_constraints -balance (Balance clock latencies during update: 
compute_budget_constraints -boundary (Compute boundary constraints)
compute_budget_constraints -busplans (Recalculate budget segment delays from busplan rules)
compute_budget_constraints -estimate_timing (Delay and boundary constraints are from vipo)
compute_budget_constraints -fanin_cone (Apply also to pins that fan in to the selected pins)
compute_budget_constraints -fanout_cone (Apply also to pins that fan out of the selected pins)
compute_budget_constraints -feedthrough (Apply only to pins that participate in block feedthrough paths)
compute_budget_constraints -input (Apply only to specified block inputs)
compute_budget_constraints -latency_targets 
compute_budget_constraints -modes (Update budget only in these modes)
compute_budget_constraints -no_estimate_timing (Delay and boundary constraints are actual)
compute_budget_constraints -ocv_delay (Minimum delay assumed for early and late clock OCV)
compute_budget_constraints -ocv_percent (Minimum percent of latency assumed for early and late clock OCV)
compute_budget_constraints -output (Apply only to specified block outputs)
compute_budget_constraints -pins (Apply only to pins in the list)
compute_budget_constraints -setup_delay (Compute setup delay constraints)
compute_budget_constraints -slack (Apply only to budget pins with less than the given slack)
compute_budget_constraints -unspecified (Apply only where pin budgets that are not yet specified)
compute_clock_latency -verbose (Display latency information in verbose format)
compute_dff_connections -dont_include_abstracts 
compute_dff_connections -host_options 
compute_dff_connections -include_blocks 
compute_dff_connections -max_fanout (maximum fanout allowed to trace a net: 
compute_dff_connections -max_gate (maximum number of gates to trace through: 
compute_dff_connections -max_reg (maximum number of registers to trace through: 
compute_dff_connections -retrace_blocks 
compute_dff_connections -work_dir 
compute_polygons -objects1 
compute_polygons -objects2 
compute_polygons -operation 
connect_freeze_silicon_tie_cells -cells (List of cells)
connect_freeze_silicon_tie_cells -max_fanout (max fanout: 
connect_freeze_silicon_tie_cells -max_wire_length 
connect_freeze_silicon_tie_cells -tie_high_lib_cell 
connect_freeze_silicon_tie_cells -tie_low_lib_cell 
connect_logic_net -ports (list of logic ports to be connected)
connect_logic_net -reconnect (reconnect the logic ports)
connect_net -design (Top design for finding objects)
connect_net -net (Net/net_bus to connect object(s) to)
connect_pg_net -all_blocks (Traverse all physical blocks during auto PG mode)
connect_pg_net -automatic (Automatic PG connection based on power constraints)
connect_pg_net -block (List of blocks to traverse during auto PG mode)
connect_pg_net -design (Top design for finding objects)
connect_pg_net -net (Net to connect object(s) to)
connect_pg_net -verbose (Verbose output)
connect_pins -design (Top design for finding objects)
connect_pins -driver (Driving pin (conn))
connect_pins -incremental (Incremental hierConnect)
connect_pins -port_name (Name of the new ports)
connect_power_switch -ack_out (ack pin or port)
connect_power_switch -ack_port_name 
connect_power_switch -direction 
connect_power_switch -keep_order (keep connection order for the given object list)
connect_power_switch -lib_pin 
connect_power_switch -mode (high-fanout, daisy-chained or fishbone connection)
connect_power_switch -object_list 
connect_power_switch -port_name (name of new port(s) that might be created for switch pin connections)
connect_power_switch -ring_direction 
connect_power_switch -source (driver pin or port)
connect_power_switch -start_point 
connect_power_switch -voltage_area 
connect_supply_net -ports 
connect_supply_net -vct (vct name: 
convert_aocv_pocv -corners (List of corners)
convert_aocv_pocv -depth 
convert_nets_for_swizzle
copy_block -force (override a modified destination block)
copy_block -from_block (Source block object or name)
copy_block -to_block (Destination block name [libName:]blockName[/labelName][.viewName])
copy_collection
copy_lib -force (Override the destination library even if it is modified)
copy_lib -from_lib (Name of source library)
copy_lib -merge (Merge the source library into the destination)
copy_lib -no_designs (Do not copy any of the designs)
copy_lib -to_lib (Name of destination library)
copy_objects -delta (delta by which the objects are to be moved)
copy_objects -from (move from point)
copy_objects -group (rotate as group)
copy_objects -net (set net for the new objects)
copy_objects -rotate_by (amount to rotate by: 
copy_objects -to (move to point)
copy_objects -x_pitch (delta or gap in x direction)
copy_objects -x_pitch_type 
copy_objects -x_times (number of copied in x direction)
copy_objects -y_pitch (delta or gap in y direction)
copy_objects -y_pitch_type 
copy_objects -y_times (number of copied in y direction)
copy_relative_placement -from 
copy_relative_placement -to (list of edit groups to copy the pattern to)
copy_relative_placement -to_cells 
copy_to_layer -geo_masks (Use as input geometry)
copy_to_layer -layer (Layer on which to copy the shapes)
copy_to_layer -net (Net of the shape)
copy_to_layer -shape_use (Usage of the shape: 
cp_block
cputime -all (Get cpu time for this process and children)
cputime -format (Format for returned value)
cputime -verbose (Report cpu and elapsed time)
cr_align_repeaters_to_trunks -layer (layer name of trunks)
cr_align_repeaters_to_trunks -move_repeater_routing 
cr_align_repeaters_to_trunks -nets (list of nets to extract shapes)
cr_align_repeaters_to_trunks -repeater_name (repeater cell name pattern)
cr_boolean
cr_check_ports
cr_check_terminals
cr_checkerboard_repeaters -nets (nets to drop repeaters)
cr_checkerboard_repeaters -preview (do not create shapes, just annotate)
cr_checkerboard_repeaters -repeater_collection 
cr_checkerboard_repeaters -repeater_name_pattern 
cr_checkerboard_repeaters -spread_mult (multiplier to spread checkerboarding out.  if 2 is passed, spreading will be 2x width or height of rptcell)
cr_complete_nets_detail -max_layer (maximum layer for zroute to use for routing, default derived from trunks)
cr_complete_nets_detail -min_layer (minimum layer for zroute to use for routing, default derived from trunks)
cr_complete_nets_detail -nets (nets to complete)
cr_complete_nets_detail -shield (shield net)
cr_complete_nets_detail -shield_name (shield name)
cr_complete_track_region -fill_trunk_name (net name assigned to fill trunk)
cr_complete_track_region -pattern (track pattern name/s)
cr_complete_track_region -track_region (track region)
cr_create_boundary_route_guide
cr_create_cover_routing_blockage
cr_create_finish_metal -backoff (backoff)
cr_create_finish_metal -backoff_multiplier (need more than winWidth backoff, pass multiplier like (2) to get 2x minWidth)
cr_create_finish_metal -backoff_override_value 
cr_create_finish_metal -bbox (bounding box to fill within)
cr_create_finish_metal -color (color of your annotation for preview)
cr_create_finish_metal -exclude_power (exclude power from checking obstructions)
cr_create_finish_metal -extra_min_width_shrink 
cr_create_finish_metal -get_rid_of_min_width 
cr_create_finish_metal -layer (layer name for pin trunks to be on)
cr_create_finish_metal -preview (do not create shapes, just annotate)
cr_create_finish_metal -width (width of the track for layer name for pin trunks to be on)
cr_create_ladders -add_routing_blockage 
cr_create_ladders -cells (collection of cells)
cr_create_ladders -do_not_add_vias (by default vias will be added to each rung, if this is passed, vias will not be inserted)
cr_create_ladders -layer_width_straps (list of , separated layer,width,number_of_straps, eg. m2,0.024,2 m3,0.024,5 m4,0.036,2 m5,0.040-0.042,2 m6,0.050,2 m7,0.056,2 )
cr_create_ladders -pin (either in or out)
cr_create_ladders -preview (do not create shapes, just draw annotations of shapes)
cr_create_ladders -use_full_cell_bbox (instead of using pin bbox to drive ladder rungs, use cell bbox entirely)
cr_create_terminals -add_metal (create a metal shape underneath the terminal)
cr_create_terminals -additional_attributes 
cr_create_terminals -bbox (bounding box to create terminal)
cr_create_terminals -center_coord (center-line coordinate, to be snapped to closest track)
cr_create_terminals -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
cr_create_terminals -do_not_check_shorts (do not check if track has obstructions)
cr_create_terminals -edge (Edge of boundary to create terminal on.  Edge is a number 1-to-#of edges starting from Y of lower left corner and moving clockwise)
cr_create_terminals -hi (If Edge and depth is not supplied, the terminal will be floating, lo and hi values must be supplied)
cr_create_terminals -layer (layer name)
cr_create_terminals -lo (If Edge and depth is not supplied, the terminal will be floating, lo and hi values must be supplied)
cr_create_terminals -of_cell (instances of cell to be used to place terms, cell_name_expr)
cr_create_terminals -port_names (LIST of port names to create terminal for)
cr_create_terminals -preview (do not create shapes, just annotate)
cr_create_terminals -shield (shield)
cr_create_terminals -shield_name (shield name)
cr_create_terminals -shield_type (type of shielding to preform)
cr_create_terminals -term_bbox (bounding box to create terminal)
cr_create_terminals -term_length (Micron value of lenght of the terminal)
cr_create_terminals -term_length_multiplier 
cr_create_terminals -terminal_names (LIST of port names to create terminal for)
cr_create_terminals -track_num (track)
cr_create_terminals -track_step (track_step)
cr_create_terminals -width (width to tracks to use, track numbers are according to this width)
cr_create_track_region -dont_delete_existing_tracks 
cr_create_track_region -pattern (track pattern name/s)
cr_create_track_region -track_region (track region to create tracks in)
cr_create_track_shared_trunks -complete_routing (finish routing of trunks with constrained zroute)
cr_create_track_shared_trunks -do_not_check_shorts (do not check if obstructions exist)
cr_create_track_shared_trunks -exclude_cells (instances of cells (and optioanl edges) to be excluded from calculation of net bbox, cell_name_expr:t|b|l|r)
cr_create_track_shared_trunks -find_free_tracks (finds free (un-obstructrd) tracks to trunk on)
cr_create_track_shared_trunks -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_track_shared_trunks -ignore_boundary_guide 
cr_create_track_shared_trunks -layer (layer name for pin trunks to be on)
cr_create_track_shared_trunks -nets (nets to track share)
cr_create_track_shared_trunks -of_cells (instances of cells (and optioanl edges) to be used to calculate net bbox, cell_name_expr:t|b|l|r)
cr_create_track_shared_trunks -preview (do not create shapes, just annotate)
cr_create_track_shared_trunks -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horx or the bottom side if vertical)
cr_create_track_shared_trunks -pullback_rt (takes micron value. will cut back trunk for the end on the left side if horx or the bottom side if vertical)
cr_create_track_shared_trunks -ref_net (the net to take the ref object from)
cr_create_track_shared_trunks -ref_obj (pin | port to be used to calculate track number, if track_num is supplied, ref_obj is ignored)
cr_create_track_shared_trunks -shield (shield net)
cr_create_track_shared_trunks -shield_name (shield name)
cr_create_track_shared_trunks -shield_type (type of shielding to preform)
cr_create_track_shared_trunks -to_trunk (specifies which net segments need to be connected to an existing trunk)
cr_create_track_shared_trunks -track_num (track number to put trunks on)
cr_create_track_shared_trunks -use_ref_obj_layer (take layer/width from the ref object, will override layer/width passed)
cr_create_track_shared_trunks -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_track_shared_trunks -width (width of the track for layer name for pin trunks to be on)
cr_create_tracks_region -anchor (bbox anchor, can be {X Y}-location in micron|patterns track number|Lego track number|Duplo track number)
cr_create_tracks_region -bbox (bounding box of the track region in microns. If -bbox is speified, -anchor -extend -of_track_width options are ignored)
cr_create_tracks_region -extend (bbox extend, can be {Width Heigh} in micron|number of patterns tracks|number of Legos|number of Duplos)
cr_create_tracks_region -layer (layer name)
cr_create_tracks_region -name (region name)
cr_create_tracks_region -of_track_width (consider tracks of theat width when specifying anchor and extend)
cr_create_tracks_region -pattern (track pattern tag)
cr_create_trunk -bbox (bounding box to create trunk within)
cr_create_trunk -do_not_check_shorts (do not check if track has obstructions)
cr_create_trunk -exclude_cells (instances of cells (and optioanl edges) to be excluded from calculation of net bbox, cell_name_expr:t|b|l|r)
cr_create_trunk -find_free_tracks (finds free (un-obstructrd) tracks to trunk on)
cr_create_trunk -gravity (trunk gravity: driver<,offset> | receiver<,offset> | cog<,offset> | '%-of-net_bbox'`<,offset>, optional offset value in micron)
cr_create_trunk -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk -ignore_boundary_guides 
cr_create_trunk -include_power_for_free_tracks 
cr_create_trunk -layer (layer name)
cr_create_trunk -net_bbox_override (use provided bbox as net bbox, ignore net bbox)
cr_create_trunk -nets (LIST of nets to create wire for)
cr_create_trunk -num_wires (number of wires to create per net)
cr_create_trunk -of_cells (instances of cells (and optioanl edges) to be used to calculate net bbox, cell_name_expr:t|b|l|r)
cr_create_trunk -preview (do not create shapes, just annotate)
cr_create_trunk -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunk -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunk -shield (shield)
cr_create_trunk -shield_name (shield name)
cr_create_trunk -shield_type (type of shielding to preform)
cr_create_trunk -track_num (track)
cr_create_trunk -track_step (track_step)
cr_create_trunk -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk -width (width to tracks to use, track numbers are according to this width)
cr_create_trunk_from_here_to_there -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
cr_create_trunk_from_here_to_there -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
cr_create_trunk_from_here_to_there -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
cr_create_trunk_from_here_to_there -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
cr_create_trunk_from_here_to_there -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
cr_create_trunk_from_here_to_there -clean_channel_tracks 
cr_create_trunk_from_here_to_there -clean_named_zone_tracks 
cr_create_trunk_from_here_to_there -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
cr_create_trunk_from_here_to_there -clear (remove any existing shapes prior creating them)
cr_create_trunk_from_here_to_there -clear_zone (remove zone annotations before re-displaying them)
cr_create_trunk_from_here_to_there -create_port (create port(s) from trunk(s))
cr_create_trunk_from_here_to_there -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
cr_create_trunk_from_here_to_there -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
cr_create_trunk_from_here_to_there -cutout_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to cutout trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk inside this area will be cutout)
cr_create_trunk_from_here_to_there -cutout_bloat (bloat cutout area in DR units, + to inflate, - to deflate)
cr_create_trunk_from_here_to_there -cutout_pullback (the list of 'start|end,layer,pullback', e.g. 'end,m10,100 start,m9,80 end,m8,-18'. pullback from cutout area as specified)
cr_create_trunk_from_here_to_there -display_channel (THIS GOT RETIRED, use -display_zone: will annotate channels/edges and track capacity based on list of layer/width comma seperated)
cr_create_trunk_from_here_to_there -display_zone (THIS IS REPLACING -display_channel: will annotate channels/edges and track capacity based on list of layer/width comma seperated)
cr_create_trunk_from_here_to_there -do_not_check_shorts (do not check if track has obstructions)
cr_create_trunk_from_here_to_there -do_not_cutout_nets (list of nets to be ignored while performing cutout)
cr_create_trunk_from_here_to_there -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
cr_create_trunk_from_here_to_there -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
cr_create_trunk_from_here_to_there -edge_pullback_custom 
cr_create_trunk_from_here_to_there -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunk_from_here_to_there -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk_from_here_to_there -ignore_boundary_guides 
cr_create_trunk_from_here_to_there -include_power_for_free_tracks 
cr_create_trunk_from_here_to_there -just_clear_zone (remove all zone annotations)
cr_create_trunk_from_here_to_there -log_track_number (reports track number that net was created on)
cr_create_trunk_from_here_to_there -nets (list of nets to create trunk(s) for)
cr_create_trunk_from_here_to_there -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
cr_create_trunk_from_here_to_there -num_wires (number of trunks to create per net)
cr_create_trunk_from_here_to_there -preview (do not create shapes, just draw annotations of shapes)
cr_create_trunk_from_here_to_there -remove (remove any existing shapes do not create (for clean-up))
cr_create_trunk_from_here_to_there -reuse_channel_tracks 
cr_create_trunk_from_here_to_there -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
cr_create_trunk_from_here_to_there -shield (shield)
cr_create_trunk_from_here_to_there -shield_name (shield name)
cr_create_trunk_from_here_to_there -shield_pullback (pullback shield trunk from edge half DR (per layer))
cr_create_trunk_from_here_to_there -shield_type (type of shielding to preform)
cr_create_trunk_from_here_to_there -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
cr_create_trunk_from_here_to_there -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
cr_create_trunk_from_here_to_there -stepping (list of steppings per layer/width pairs, make sure to accomodate for shielding, e.g full - 3, half - 2)
cr_create_trunk_from_here_to_there -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
cr_create_trunk_from_here_to_there -topology (topology description as a list of legs that reference trunking channels and their layers/width/track|micron|p values)
cr_create_trunk_from_here_to_there -track_overrides_pin (even if pin exists, use the track number passed)
cr_create_trunk_from_here_to_there -trim_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to trim trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk outside this area will be trimmed with 1/2 DR deflate)
cr_create_trunk_from_here_to_there -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
cr_create_trunk_from_here_to_there -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk_from_here_to_there -verbose (turn on printing of display_channel capacities)
cr_create_trunk_from_here_to_there -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
cr_create_trunk_from_here_to_there -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
cr_create_trunk_on_track -bbox (bounding box used to calculate relative track number relative to the bbox)
cr_create_trunk_on_track -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
cr_create_trunk_on_track -delete (clear before annotating the track)
cr_create_trunk_on_track -do_not_check_shorts (do not check if track has obstructions)
cr_create_trunk_on_track -exclude_cells (instances of cells (and optioanl edges) to be excluded from calculation of net bbox, cell_name_expr:t|b|l|r)
cr_create_trunk_on_track -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunk_on_track -group (group name for wire)
cr_create_trunk_on_track -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk_on_track -hi (override nets bounding box lo value: trunks will be cut/stratched to this value)
cr_create_trunk_on_track -ignore_boundary_guides 
cr_create_trunk_on_track -include_power_for_free_tracks 
cr_create_trunk_on_track -layer (layer name)
cr_create_trunk_on_track -lo (override nets bounding box lo value: trunks will be cut/stratched to this value)
cr_create_trunk_on_track -net_bbox_override (bounding box used to override nets bounding box: trunks will be cut/stratched to this bbox)
cr_create_trunk_on_track -net_path_area (similar to -bbox but trunks will be cut/stratched to the bbox only if net bbox is outside the area bbox)
cr_create_trunk_on_track -nets (list of nets to create trunks for)
cr_create_trunk_on_track -num_wires (number of shapes to be created per net)
cr_create_trunk_on_track -of_cells (instances of cells (and optioanl edges) to be used to calculate net bbox, cell_name_expr:t|b|l|r)
cr_create_trunk_on_track -preview (do not create shapes, just annotate)
cr_create_trunk_on_track -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunk_on_track -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunk_on_track -shield (shield)
cr_create_trunk_on_track -shield_name (shield name)
cr_create_trunk_on_track -shield_type (type of shielding to preform)
cr_create_trunk_on_track -track_num (track number(s) or x,y coordinate(s) that will be snapped to closest track of layer/width(s))
cr_create_trunk_on_track -track_step (track_step, if specified then the 1st element of tracks list is used as anchor and track list got re-calculated)
cr_create_trunk_on_track -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunk_on_track -width (width to tracks to use, can be a comma-separated list of widths)
cr_create_trunk_straps_for_pins -do_not_check_shorts (do not check if obstrutions exist)
cr_create_trunk_straps_for_pins -extension_direction 
cr_create_trunk_straps_for_pins -extension_distance (how far in microns to extend from ports)
cr_create_trunk_straps_for_pins -layer (layer name for pin trunks to be on)
cr_create_trunk_straps_for_pins -nets (nets to create trunk straps)
cr_create_trunk_straps_for_pins -of_cells (cells (instances of macros) and the side from which to extend pins, e.g. {cell1:r cell2:l cell3*:b})
cr_create_trunk_straps_for_pins -preview (do not create shapes, just annotate)
cr_create_trunk_straps_for_pins -route_type (route type to be set for resulting net shapes)
cr_create_trunk_straps_for_pins -shield (shield net)
cr_create_trunk_straps_for_pins -shield_name (shield name)
cr_create_trunk_straps_for_pins -snap_to_track (snap trunk centerline to track, if not specified trunk will be extended from pin bbox exactly)
cr_create_trunk_straps_for_pins -width (width of the track for layer name for pin trunks to be on)
cr_create_trunks_from_pin_to_pin -complete_routing (finish routing of trunks with constrained zroute)
cr_create_trunks_from_pin_to_pin -dir_follows_sign (direction of the leg travel defined by the sign of the leg, not net bbox. i.e. 0.25 goes to the right/up, -0.25 goes to left/down)
cr_create_trunks_from_pin_to_pin -do_not_check_shorts (do not check if obstructions exist)
cr_create_trunks_from_pin_to_pin -extensions (list of how far to extend pins in microns, net bbox fraction, lego, duplo.  list corresponds with list of layers -1)
cr_create_trunks_from_pin_to_pin -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunks_from_pin_to_pin -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_pin_to_pin -layer_legs (layers for which turns will be created on.  first layer will be drawn first, second is second etc.)
cr_create_trunks_from_pin_to_pin -nets (nets to create trunks for)
cr_create_trunks_from_pin_to_pin -preview (do not create shapes, just annotate)
cr_create_trunks_from_pin_to_pin -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunks_from_pin_to_pin -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunks_from_pin_to_pin -return_track_info (returns a list of lists with net_name, track_number per layer/width)
cr_create_trunks_from_pin_to_pin -shield (shield net)
cr_create_trunks_from_pin_to_pin -shield_name (shield name)
cr_create_trunks_from_pin_to_pin -shield_type (type of shielding to preform)
cr_create_trunks_from_pin_to_pin -start_from (which pin to start from, either Low pin to High pin, LoHi (lowest y will be first leg) or High pin to Low pin, HiLo)
cr_create_trunks_from_pin_to_pin -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_pins_to_point -complete_routing (finish routing of trunks with constrained zroute)
cr_create_trunks_from_pins_to_point -create_terminals (create terminals on boundary if extention distance is to_boundary)
cr_create_trunks_from_pins_to_point -do_not_check_shorts (do not check if obstrutions exist)
cr_create_trunks_from_pins_to_point -extension_direction (which direction to extend off pin, either RIGHT_or_TOP or Left_or_Bottom)
cr_create_trunks_from_pins_to_point -extension_distance (how far to extend pins in microns or 'to_cell:cell_name' to extend to a closest edge of cell_name oe 'to_boundary' to extend to boundary edge)
cr_create_trunks_from_pins_to_point -layer (layer name for pin trunks to be on)
cr_create_trunks_from_pins_to_point -min_layer (min layer name for pin trunks to be on, default is pin layer unless it is lower than min layer)
cr_create_trunks_from_pins_to_point -nets (nets to create trunk from port)
cr_create_trunks_from_pins_to_point -of_cells (cells (instances of macros) and the side from which to extend pins, e.g. {cell1:r cell2:l cell3*:b cell4*:0,0,10,10 bbox relative to cell origin})
cr_create_trunks_from_pins_to_point -pin_layer (layer pin should be on to extend off of)
cr_create_trunks_from_pins_to_point -preview (do not create shapes, just annotate)
cr_create_trunks_from_pins_to_point -push_pins (create pins where iccpp_trunks cross cells)
cr_create_trunks_from_pins_to_point -shield (shield net)
cr_create_trunks_from_pins_to_point -shield_name (shield name)
cr_create_trunks_from_pins_to_point -shield_type (type of shielding to preform)
cr_create_trunks_from_pins_to_point -snap_to_track (snap trunk centerline to track, if not specified trunk will be extended from pin bbox exactly)
cr_create_trunks_from_pins_to_point -use_routespec (read routespec, find closest track for given port that matches NDR and layer and )
cr_create_trunks_from_pins_to_point -width (width of the track for layer name for pin trunks to be on)
cr_create_trunks_from_pins_to_trunk -cluster_proximity (micron value used to cluster receiver pins together, 0 means use each pin by itself)
cr_create_trunks_from_pins_to_trunk -complete_routing (finish routing of trunks with constrained zroute)
cr_create_trunks_from_pins_to_trunk -do_not_check_shorts (do not check if obstructions exist)
cr_create_trunks_from_pins_to_trunk -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunks_from_pins_to_trunk -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_pins_to_trunk -include_power_for_free_tracks 
cr_create_trunks_from_pins_to_trunk -layer (layer name for trunks to be on)
cr_create_trunks_from_pins_to_trunk -min_layer (minimum layer for terminals to be considered (used to extend trunks from))
cr_create_trunks_from_pins_to_trunk -nets (nets to create trunk from pin(s))
cr_create_trunks_from_pins_to_trunk -of_cells (instances of macros and the side from which to extend pins)
cr_create_trunks_from_pins_to_trunk -offset_cell_pin (instances of macros and the side and the offset distance to modify pins bbox cella:b:-2)
cr_create_trunks_from_pins_to_trunk -pin_direction (use only pins of specified direction)
cr_create_trunks_from_pins_to_trunk -preview (do not create shapes, just annotate)
cr_create_trunks_from_pins_to_trunk -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunks_from_pins_to_trunk -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunks_from_pins_to_trunk -shield (shield net)
cr_create_trunks_from_pins_to_trunk -shield_name (shield name)
cr_create_trunks_from_pins_to_trunk -shield_type (type of shielding to preform)
cr_create_trunks_from_pins_to_trunk -track_offset (offset (in track numbers) for a resulting trunk(s) to be placed on)
cr_create_trunks_from_pins_to_trunk -use_existing_shape (format: layer[,min_length] (e.g m5,80) extend to existing net shape on layer 'layer' that is optionaly longer then 'min_length' if no trunks are found)
cr_create_trunks_from_pins_to_trunk -use_routespec (read routespec, find closest track for given port that matches NDR and layer and )
cr_create_trunks_from_pins_to_trunk -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_pins_to_trunk -width (width of the track for layer name for pin trunks to be on)
cr_create_trunks_from_ports -backoff_from_ports (amount to offset from ports, should be value,layer)
cr_create_trunks_from_ports -complete_routing (finish routing of trunks with constrained zroute)
cr_create_trunks_from_ports -do_not_check_shorts (do not check if obstrutions exist)
cr_create_trunks_from_ports -extension_direction 
cr_create_trunks_from_ports -extension_distance (how far in microns to extend from ports)
cr_create_trunks_from_ports -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunks_from_ports -h_layer_override (overrides the horizontal metal layer of port even if -layer is passed)
cr_create_trunks_from_ports -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_ports -ignore_boundary_guide 
cr_create_trunks_from_ports -include_power_for_free_tracks 
cr_create_trunks_from_ports -layer (use this layer for the trunk, not the port layer)
cr_create_trunks_from_ports -min_layer (minimum layer for terminals to be considered (used to extend trunks from))
cr_create_trunks_from_ports -nets (nets to create trunk from port)
cr_create_trunks_from_ports -preview (do not create shapes, just annotate)
cr_create_trunks_from_ports -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunks_from_ports -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunks_from_ports -shield (shield net)
cr_create_trunks_from_ports -shield_name (shield name)
cr_create_trunks_from_ports -shield_type (type of shielding to preform)
cr_create_trunks_from_ports -use_port_width (use port width, do not snap to track (assuming ports are on correct tracks))
cr_create_trunks_from_ports -use_routespec (read routespec, find closest track for given port that matches NDR and layer and )
cr_create_trunks_from_ports -v_layer_override (overrides the vertical metal layer of port even if -layer is passed)
cr_create_trunks_from_ports -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_ports -width (width of tracks to use)
cr_create_trunks_from_ports_to_trunk -backoff_from_ports (amount to offset from port)
cr_create_trunks_from_ports_to_trunk -complete_routing (finish routing of trunks with constrained zroute)
cr_create_trunks_from_ports_to_trunk -do_not_check_shorts (do not check if obstrutions exist)
cr_create_trunks_from_ports_to_trunk -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
cr_create_trunks_from_ports_to_trunk -h_layer_override (overrides the horizontal metal layer of port even if -layer is passed)
cr_create_trunks_from_ports_to_trunk -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_ports_to_trunk -layer (layer name for port trunks to be on)
cr_create_trunks_from_ports_to_trunk -min_layer (min layer name for port trunks to be on, default is port layer unless it is lower than min layer)
cr_create_trunks_from_ports_to_trunk -nets (nets to create trunk from port)
cr_create_trunks_from_ports_to_trunk -preview (do not create shapes, just annotate)
cr_create_trunks_from_ports_to_trunk -pullback_lb (takes micron value. will cut back trunk for the end on the left side if horizontal or the bottom side if vertical)
cr_create_trunks_from_ports_to_trunk -pullback_rt (takes micron value. will cut back trunk for the end on the right side if horizontal or the top side if vertical)
cr_create_trunks_from_ports_to_trunk -shield (shield net)
cr_create_trunks_from_ports_to_trunk -shield_name (shield name)
cr_create_trunks_from_ports_to_trunk -shield_type (type of shielding to preform)
cr_create_trunks_from_ports_to_trunk -use_routespec (read routespec, find closest track for given port that matches NDR and layer and )
cr_create_trunks_from_ports_to_trunk -v_layer_override (overrides the vertical metal layer of port even if -layer is passed)
cr_create_trunks_from_ports_to_trunk -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
cr_create_trunks_from_ports_to_trunk -width (width of the track for trunks to be on)
cr_create_vias_for_custom_shields -advanced_drc_off (turn off advanced drc checking, this will most likely create vias that have drcs)
cr_create_vias_for_custom_shields -delete (remove vias)
cr_create_vias_for_custom_shields -shield_layers (list of layers that you have custom shields on, OPTIONAL - if not pass layers will be derived from layout)
cr_create_vias_for_custom_shields -shield_nets (net names of custom shield nets)
cr_create_vias_for_custom_shields -tag (group name for vias, default is iccpp_preroute_sheild_vias)
cr_create_vias_for_preroutes -advanced_drc_off (turn off advanced drc checking, this will most likely create vias that have drcs)
cr_create_vias_for_preroutes -bbox (bounding box to drop vias in for nets)
cr_create_vias_for_preroutes -delete (remove vias)
cr_create_vias_for_preroutes -from_layer (from layer name)
cr_create_vias_for_preroutes -nets (nets to drop vias on)
cr_create_vias_for_preroutes -tag (group name for vias, default is iccpp_preroute_vias)
cr_create_vias_for_preroutes -to_layer (to layer name)
cr_create_wire_on_track -adjust_wire (change wire lenght etc.)
cr_create_wire_on_track -area_bbox (bounding box to create trunk within)
cr_create_wire_on_track -delete (clear before annotating the track)
cr_create_wire_on_track -do_not_check_shorts (do not check if track has obstructions)
cr_create_wire_on_track -group (group name for wire)
cr_create_wire_on_track -layer (layer name)
cr_create_wire_on_track -net_name (LIST of nets to create wire for)
cr_create_wire_on_track -num_wires (number of wires to create per net)
cr_create_wire_on_track -of_track_width (width to tracks to use, track numbers are according to this width)
cr_create_wire_on_track -preview (do not create shapes, just annotate)
cr_create_wire_on_track -shield (shield)
cr_create_wire_on_track -shield_name (shield name)
cr_create_wire_on_track -track_num (track)
cr_create_wire_on_track -track_step (track_step)
cr_delete_track_region -pattern (track pattern name/s)
cr_delete_track_region -reset_to_default (set track patterns back to default)
cr_delete_track_region -track_region (track region to create tracks in)
cr_extract_track_shared_trunks -layer_from (layer name to extract shapes)
cr_extract_track_shared_trunks -layer_to (layer name to generate shapes)
cr_extract_track_shared_trunks -min_length (min length of shape to be extracted, any shapes shorter will be skipped)
cr_extract_track_shared_trunks -nets (list of nets to extract shapes)
cr_extract_track_shared_trunks -output (file name that will contain iTAR commands to generate new trunks)
cr_extract_track_shared_trunks -preview (make iTAR commands to generate trunk previes not new trunks)
cr_extract_track_shared_trunks -start_track_num (specifies start track number to be used in iTAR command to generate new trunks)
cr_extract_track_shared_trunks -width_from (shape width to extract shapes)
cr_extract_track_shared_trunks -width_to (width to generate shapes)
cr_get_agressor_locations -backoff (backoff)
cr_get_agressor_locations -backoff_multiplier (need more than winWidth backoff, pass multiplier like (2) to get 2x minWidth)
cr_get_agressor_locations -backoff_override_value 
cr_get_agressor_locations -bbox (bounding box to fill within)
cr_get_agressor_locations -color (color of your annotation for preview)
cr_get_agressor_locations -exclude_power (exclude power from checking obstructions)
cr_get_agressor_locations -extra_min_width_shrink 
cr_get_agressor_locations -get_rid_of_min_width 
cr_get_agressor_locations -layer (layer name for pin trunks to be on)
cr_get_agressor_locations -preview (do not create shapes, just annotate)
cr_get_agressor_locations -width (width of the track for layer name for pin trunks to be on)
cr_is_odd
cr_place_repeaters -append_suffix (appends a unique suffix to the post-repeater nets in addition to the auto-generated suffix)
cr_place_repeaters -do_not_stagger (do not stagger or checkerboard placed repeaters)
cr_place_repeaters -exclude_cells (instances of cells to be excluded from calculation of repeater net connections, cell_name_expr)
cr_place_repeaters -layer (layer liat of trunk(s) to be repeated)
cr_place_repeaters -layer_weight (when -repeater_distance is specified define weight per layer to be applied to the distance value)
cr_place_repeaters -nets (nets to drop repeaters)
cr_place_repeaters -of_cells (instances of cells to be used to calculate repeater net connections, cell_name_expr)
cr_place_repeaters -preview (do not create shapes, just annotate)
cr_place_repeaters -remove (remove all repeaters on the net, reconnect net to the original state)
cr_place_repeaters -repeater_cutlines (list of cutlines to calculate exact locations {X Y} (cutline intersection with trunk) to drop repeaters )
cr_place_repeaters -repeater_distance (the distance to insert repeaters: insert a repeater every micron value specified)
cr_place_repeaters -repeater_locations (list of exact locations {X Y} to drop repeaters)
cr_place_repeaters -repeater_name (name of repeater cell to be inserted)
cr_place_repeaters -repeater_number (how many repeaters to place on path)
cr_place_repeaters -repeater_relative_cutlines 
cr_place_repeaters -repeater_suffix (syffix to repeater cell and repeated net)
cr_place_repeaters -repeater_type (type of repeater:buffer (bfr) or inverter pair (inv))
cr_place_repeaters -stagger_mult (spread repeaters in X direction by (repeater_width * st) when staggering or checkeboarding placed repeaters)
cr_report_failed_trunks -layer (layer name, ex. m9)
cr_report_failed_trunks -nets (List of nets to create trunks for)
cr_report_failed_trunks -width (width to tracks to use, track numbers are according to this width)
cr_restore_itar_attributes_on_nets -nets (nets to trim on)
cr_restore_itar_attributes_on_nets -user_attr (name of user attribute)
cr_trim_antennas -nets (nets to trim on)
cr_trim_antennas -user_attr (name of user attribute)
cr_trunk_flopped_nets_p2p -hlayer (horizontal layer name)
cr_trunk_flopped_nets_p2p -hwidth (horizontal layer width width)
cr_trunk_flopped_nets_p2p -main_trunk_layer (main trunk layer name)
cr_trunk_flopped_nets_p2p -main_trunk_loc (main trunk location in ref net bbox % with offset, e.g. 0.5,-10 50% of net's bbox - 10 micron)
cr_trunk_flopped_nets_p2p -main_trunk_ref_net (reference net, bbox of which is used to calculate main trunk location)
cr_trunk_flopped_nets_p2p -nets (List of nets to create trunks for)
cr_trunk_flopped_nets_p2p -position_sequentials (how to position sequentials (move them): 'spread' or a list of name-XY for each)
cr_trunk_flopped_nets_p2p -preview (do not create shapes, just annotate)
cr_trunk_flopped_nets_p2p -repeater_distance (the distance to insert repeaters: insert a repeater every micron value specified)
cr_trunk_flopped_nets_p2p -repeater_locations (list of exact locations {X Y} to drop repeaters)
cr_trunk_flopped_nets_p2p -repeater_name (name of repeater cell to be inserted)
cr_trunk_flopped_nets_p2p -repeater_number (how many repeaters to place on path)
cr_trunk_flopped_nets_p2p -repeater_type (type of repeater:buffer (bfr) or inverter pair (inv))
cr_trunk_flopped_nets_p2p -start_from (which pin/port to start from, either Low pin to High pin, LoHi or High pin to Low pin, HiLo)
cr_trunk_flopped_nets_p2p -track_step (track step to create trunks for nets passed, start track is calculated from -main_trunk_loc)
cr_trunk_flopped_nets_p2p -vlayer (vertical layer name)
cr_trunk_flopped_nets_p2p -vwidth (vertical layer width width)
create_3d_mirror_bumps -bumps 
create_3d_mirror_bumps -force (bool)
create_3d_mirror_bumps -from 
create_3d_mirror_bumps -prefix 
create_3d_mirror_bumps -ref_cell 
create_3d_mirror_bumps -to 
create_abstract -all_blocks (Create abstract view for all child blocks)
create_abstract -blocks 
create_abstract -estimate_timing (Run virtual timing optimization)
create_abstract -force_recreate (Force to re-create block abstract views from the top level)
create_abstract -host_options 
create_abstract -include_objects 
create_abstract -placement (Create abstract for non-timing applications)
create_abstract -read_only (Create read-only abstract)
create_abstract -timing_level (Control detail of timing abstract: 
create_abstract -work_dir (Directory to put scripts and log files for child block abstract creation)
create_abut_rules -hard_keepout (Sets hard keepout instead of default spacing rules)
create_abut_rules -keepout_width 
create_abut_rules -number_of_references 
create_abut_rules -output (Name of file)
create_abut_rules -soft_keepout (Sets soft keepout instead of default spacing rules)
create_abut_rules -use_lib (Use libraries as references)
create_backend_tcd_cells -avoid_route_guide 
create_backend_tcd_cells -bbox (rectangle for insertion)
create_backend_tcd_cells -check_only (check only)
create_backend_tcd_cells -combined_tcd_cells (combined FE+BE TCD cells)
create_backend_tcd_cells -density 
create_backend_tcd_cells -icovl_spacing 
create_backend_tcd_cells -include_small_windows 
create_backend_tcd_cells -lib_cells 
create_backend_tcd_cells -max_tcd_spacing 
create_backend_tcd_cells -min_tcd_count (minimum number of tcds)
create_backend_tcd_cells -orientation 
create_backend_tcd_cells -other_cell_spacing 
create_backend_tcd_cells -place_at_window_center 
create_backend_tcd_cells -snap_to_fin_grid (snap to fin grid)
create_backend_tcd_cells -stack_with_backend 
create_backend_tcd_cells -stack_with_frontend 
create_backend_tcd_cells -stack_with_macro 
create_backend_tcd_cells -tcd_spacing 
create_backend_tcd_cells -window_size 
create_blackbox -boundary (Boundary for the blackbox)
create_blackbox -library (Library in which the design is to be created)
create_blackbox -new_name (Name for the new design)
create_blackbox -target_boundary_area 
create_blackbox -type (Type of this blackbox: 
create_blackbox_clock_network_delay -corners (Specify the list of corner names this delay is for)
create_blackbox_clock_network_delay -max (Specify the value is for max delay only)
create_blackbox_clock_network_delay -min (Specify the value is for min delay only)
create_blackbox_clock_network_delay -modes (Specify the list of mode names this delay is for)
create_blackbox_clock_network_delay -value (Specify the clock network delay value)
create_blackbox_constraint -clock (Specify the clock whose period will be used to calculate the path delay)
create_blackbox_constraint -corners (Specify the list of corner names this delay is for)
create_blackbox_constraint -edge (Specify the clock triggering edge)
create_blackbox_constraint -fall_to (Specify the fall to ports of the paths)
create_blackbox_constraint -from (Specify the clock ports the paths start from)
create_blackbox_constraint -hold (Specify the value is for hold constraint only)
create_blackbox_constraint -modes (Specify the list of mode names this delay is for)
create_blackbox_constraint -rise_to (Specify the rise to ports of the paths)
create_blackbox_constraint -setup (Specify the value is for setup constraint only)
create_blackbox_constraint -to (Specify the to ports of the paths)
create_blackbox_constraint -value (Specify the constraint delay value)
create_blackbox_delay -clock (Specify the clock whose period will be used to calculate the path delay)
create_blackbox_delay -corners (Specify the list of corner names this delay is for)
create_blackbox_delay -fall_from (Specify the fall from ports of the paths)
create_blackbox_delay -fall_to (Specify the fall to ports of the paths)
create_blackbox_delay -from (Specify the from ports of the paths)
create_blackbox_delay -max (Specify the value is for max delay only)
create_blackbox_delay -min (Specify the value is for min delay only)
create_blackbox_delay -modes (Specify the list of mode names this delay is for)
create_blackbox_delay -rise_from (Specify the rise from ports of the paths)
create_blackbox_delay -rise_to (Specify the rise to ports of the paths)
create_blackbox_delay -to (Specify the to ports of the paths)
create_blackbox_delay -value (Specify the delay value)
create_blackbox_drive_type -input_transition_fall 
create_blackbox_drive_type -input_transition_rise 
create_blackbox_drive_type -lib_cell (Specify the buffer or inverter lib cell)
create_blackbox_load_type -lib_cell (Specify the buffer or inverter lib cell)
create_block -force (overwrite existing block in the target library)
create_bound -boundary (Move bound rectangles and polygons)
create_bound -cell (Specifies the physical cell where the bound is to be added)
create_bound -design_type 
create_bound -diamond 
create_bound -dimensions 
create_bound -effort (Group bound effort level (default is medium): 
create_bound -exclusive (Sets the move bound as exclusive)
create_bound -hierarchical_only (The move bound can contain only hierBoundary objects)
create_bound -name (Name of the bound)
create_bound -type (Type of the bound (default is soft): 
create_bound_shape -bound (Name or collection of the owning bound)
create_bound_shape -boundary (Bound shape rectangle or polygon)
create_boundary_cells -add_metal_cut_allowed 
create_boundary_cells -at_va_boundary (Specifies whether rows are cut on voltage areas)
create_boundary_cells -bottom_boundary_cells 
create_boundary_cells -bottom_left_inside_corner_cells 
create_boundary_cells -bottom_left_outside_corner_cell 
create_boundary_cells -bottom_right_inside_corner_cells 
create_boundary_cells -bottom_right_outside_corner_cell 
create_boundary_cells -bottom_tap_cell 
create_boundary_cells -do_not_swap_top_and_bottom_inside_corner_cell 
create_boundary_cells -enable_prerouted_net_check 
create_boundary_cells -insert_into_blocks (Specifies whether end cap cells are inserted into blocks)
create_boundary_cells -left_boundary_cell 
create_boundary_cells -min_row_width 
create_boundary_cells -mirror_left_boundary_cell 
create_boundary_cells -mirror_left_inside_corner_cell 
create_boundary_cells -mirror_left_outside_corner_cell 
create_boundary_cells -mirror_right_boundary_cell 
create_boundary_cells -mirror_right_inside_corner_cell 
create_boundary_cells -mirror_right_outside_corner_cell 
create_boundary_cells -no_1x (Specifies that the tool should not insert into a row where the row length equals two times the corner cell width plus one unit tile width.)
create_boundary_cells -prefix (end cap inst prefix)
create_boundary_cells -right_boundary_cell 
create_boundary_cells -separator (end cap seperator)
create_boundary_cells -tap_distance 
create_boundary_cells -top_boundary_cells 
create_boundary_cells -top_left_inside_corner_cells 
create_boundary_cells -top_left_outside_corner_cell 
create_boundary_cells -top_right_inside_corner_cells 
create_boundary_cells -top_right_outside_corner_cell 
create_boundary_cells -top_tap_cell 
create_boundary_cells -voltage_area 
create_bs_upf -blocks (blocks)
create_bs_upf -budget_shell_nlib 
create_bs_upf -budget_shell_nlib_dir 
create_bs_upf -debug (Enable Debug Output)
create_budget_busplan -force (Remove portion of old buses if the ovelap the a new bus)
create_budget_busplan -from (Create a bus staring at the given pins or ports)
create_budget_busplan -name (Name of created bus)
create_budget_busplan -nets (Create a bus that passes through the given nets)
create_budget_busplan -rule (Create the bus this net wire estimation)
create_buffer_trees -from (a list of driver pins or nets for which buffer trees are to be created)
create_buffer_trees -hfs_fanout_threshold 
create_buffer_trees -incremental (Scope is an individual net. Do not modify any pre-existing buffers or inverters)
create_buffer_trees -lib_cells (a list of library cells will be used for buffering)
create_buffer_trees -no_density_abort (no density abort)
create_buffer_trees -no_legalize (do not legalize placement after buffering)
create_buffer_trees -optimize_congestion (do congestion aware re-buffering)
create_buffer_trees -optimize_congestion_box 
create_buffer_trees -use_imrd (do IMRD enabled CARB)
create_buffer_trees -verbose (verbose)
create_bump_array -bbox 
create_bump_array -boundary (Specified the boundary polygon of the bump array)
create_bump_array -delta 
create_bump_array -lib_cell 
create_bump_array -name 
create_bump_array -orientation 
create_bump_array -origin 
create_bump_array -pattern 
create_bump_array -repeat 
create_bundle -name (Name of the bundle)
create_bundles_from_patterns -bundle_grouping (Enable bundle grouping in pattern matching)
create_bundles_from_patterns -maximum_nets 
create_bundles_from_patterns -minimum_nets 
create_bundles_from_patterns -net_name_prefix 
create_bundles_from_patterns -net_order (Net sorting order (Default is ascending): 
create_bundles_from_patterns -no_angle_brackets (Don't use angle brackets in pattern matching)
create_bundles_from_patterns -no_braces (Don't use braces in pattern matching)
create_bundles_from_patterns -no_brackets (Don't use brackets in pattern matching)
create_bundles_from_patterns -no_colons (Don't use colons in pattern matching)
create_bundles_from_patterns -no_parentheses (Don't use parentheses in pattern matching)
create_bundles_from_patterns -no_underlines (Don't use underlines in pattern matching)
create_bus_routing_style -corner_type 
create_bus_routing_style -for (Group of net, bundle, and topology_edge objects)
create_bus_routing_style -force (Overwrite existing constraint)
create_bus_routing_style -gap (Default gap)
create_bus_routing_style -layer_spacings (List of layer and spacing)
create_bus_routing_style -layer_widths (List of layer and width)
create_bus_routing_style -shield_placement 
create_bus_routing_style -valid_layers 
create_busplans -add_start_end_cells 
create_busplans -auto (Automatically create remaining buses)
create_busplans -force (Remove portion of old buses if they overlap the a new bus)
create_busplans -from (Create a bus starting at the given pins or ports)
create_busplans -name (Name of created bus)
create_busplans -nets (Create a bus that passes through the given nets)
create_busplans -reset (Remove all busplan information from the design)
create_busplans -rule (Create the bus or buses with this net wire estimation rule)
create_busplans -to (Create a bus ending at the given pins or ports)
create_busplans -verbose (Command outputs more information)
create_cell -design (Top design for finding objects)
create_cell_pin_fingers
create_channel_congestion_map -boundary (areas that users want to check for congestions)
create_channel_congestion_map -channel_width_threshold 
create_check_design_strategy -define_check (create an user-defined atomic-check)
create_check_design_strategy -define_group (create an user-defined mega-check)
create_clock -add (Add to the existing clocks on source_objects)
create_clock -comment (User specified comment)
create_clock -name (Clock name)
create_clock -period (Clock period: 
create_clock -waveform (Clock edge specification)
create_clock_balance_group -corner (corner for the offset)
create_clock_balance_group -name (Name of the group)
create_clock_balance_group -objects 
create_clock_balance_group -offset_latencies 
create_clock_buffer -clock (Clock)
create_clock_buffer -location (target location)
create_clock_buffer -new_cell_name 
create_clock_buffer -new_net_name (Net name prefix to use for newly-created nets.)
create_clock_buffer -replace (Existing cell to replace with a buffer.)
create_clock_buffer -sinks (Pins or ports which are the sinks of the new buffer.)
create_clock_buffer -snap (false|true)]   (Snap new buffer away from blocks.)
create_clock_buffer -source (Pins or ports which are the source of the new buffer.)
create_clock_drivers -boundary (Boundary of area to be sub-divided (using -boxes))
create_clock_drivers -boxes 
create_clock_drivers -configuration 
create_clock_drivers -hierarchy (Logical hierarchy level for the repeaters)
create_clock_drivers -input_pin (lib_cell_pin name of the template cell's clock input)
create_clock_drivers -keepouts 
create_clock_drivers -lib_cells 
create_clock_drivers -loads (A net or a list of pins)
create_clock_drivers -locations 
create_clock_drivers -max_displacement 
create_clock_drivers -output_net_name 
create_clock_drivers -prefix (Prefix for created instances and nets)
create_clock_drivers -short_outputs (Short the outputs of the inserted cells)
create_clock_drivers -template (Use clones of the existing driver template cell)
create_clock_drivers -transfer_wires_from 
create_clock_rp_groups -auto_shape (Decide shape of RP groups automatically)
create_clock_rp_groups -cells (Cells to be clustered)
create_clock_rp_groups -distance 
create_clock_rp_groups -max_rp_rows 
create_clock_rp_groups -max_sinks (maximum sinks in one RP group: 
create_clock_rp_groups -min_sinks (minimum sinks in one RP group: 
create_clock_rp_groups -timing_driven (Timing aware clustering)
create_clock_skew_group -mode (Mode for this skew group; default is current mode)
create_clock_skew_group -name (Name of skew group)
create_clock_skew_group -objects (List of balance point objects)
create_clock_straps -allow_floating (false|true)]
create_clock_straps -allow_splitting (false|true)]
create_clock_straps -backoff (Backoff distance)
create_clock_straps -bias (Bias to existing shields)
create_clock_straps -bias_margins 
create_clock_straps -bias_to_nets 
create_clock_straps -boundary (Boundary area where straps should be created)
create_clock_straps -clear (Remove straps created earlier by this command for the given net(s))
create_clock_straps -create_ends (Create straps at ends)
create_clock_straps -detect_length 
create_clock_straps -grids 
create_clock_straps -keepouts 
create_clock_straps -layers (List of layers)
create_clock_straps -length (Maximum stripe length)
create_clock_straps -margins 
create_clock_straps -nets (List of nets)
create_clock_straps -spine_direction 
create_clock_straps -types 
create_clock_straps -widths 
create_command_group -info (Help string for the group)
create_constraint_file_header
create_corner -copy (Corner to copy from)
create_ctp_block_constraints
create_custom_shields -keep_session (false|true)]
create_custom_shields -nets (collection of nets)
create_density_rule -layer (The layer name with which this density rule is associated with)
create_density_rule -library (Library for finding objects, default is current library's tech)
create_density_rule -max_density 
create_density_rule -max_gradient_density 
create_density_rule -min_density 
create_density_rule -tech (Tech for finding objects, default is current library's tech)
create_density_rule -window_size 
create_dff_trace_filters -blocks (List of block names to use for this filter set)
create_dff_trace_filters -filename (Read patterns from this file)
create_dff_trace_filters -patterns (List of patterns to add)
create_dff_trace_filters -type (type of filter: net or pin: 
create_differential_group -for (Group of net objects)
create_differential_group -force (Overwrite existing constraint)
create_differential_group -gap (Default gap)
create_differential_group -layer_spacings (List of layer and spacing)
create_differential_group -layer_widths (List of layer and width)
create_differential_group -shield_placement 
create_differential_group -twist_interval 
create_differential_group -twist_offset 
create_differential_group -twist_style 
create_differential_group -valid_layers 
create_diodes -options (<{{port_name cell_instance_name diode_fram_view_name number_of_diodes max_routing_layer max_routing_distance} ...}>)
create_drc_error -actual_spacing 
create_drc_error -direction (The direction of a spacing violation: 
create_drc_error -endpoints 
create_drc_error -error_data 
create_drc_error -error_type 
create_drc_error -height_required 
create_drc_error -information 
create_drc_error -layers (List of layers associated with the shapes or coordinates)
create_drc_error -must_fix (Sets the must fix flag)
create_drc_error -objects (List of required objects to be associated with the error)
create_drc_error -pin_edge (The violating pin edge)
create_drc_error -points 
create_drc_error -polygons 
create_drc_error -polylines 
create_drc_error -required_spacing 
create_drc_error -shape_uses 
create_drc_error -status (Status of this error: 
create_drc_error -width_required 
create_drc_error_data -checker_name 
create_drc_error_data -checker_version 
create_drc_error_data -file_name (Error data XML file to create, unattached to current block)
create_drc_error_data -information 
create_drc_error_data -name (Error data to create, attached to current block)
create_drc_error_shapes -endpoints 
create_drc_error_shapes -error_data 
create_drc_error_shapes -layers (List of layers associated with the shapes)
create_drc_error_shapes -points 
create_drc_error_shapes -polygons 
create_drc_error_shapes -polylines 
create_drc_error_type -brief_format 
create_drc_error_type -brief_info 
create_drc_error_type -error_class 
create_drc_error_type -error_data 
create_drc_error_type -name (Name of the type)
create_drc_error_type -num_detected_errors 
create_drc_error_type -required_objects 
create_drc_error_type -severity 
create_drc_error_type -verbose_format 
create_drc_error_type -verbose_info 
create_eco_bus_buffer_pattern -distance (Distance between reference sides of two adjacent buffers)
create_eco_bus_buffer_pattern -first_buffer 
create_eco_bus_buffer_pattern -measure_from 
create_eco_bus_buffer_pattern -name (Name of bus buffer pattern)
create_eco_bus_buffer_pattern -repeat_after 
create_eco_bus_buffer_pattern -user_specified_distance 
create_edit_group -cell (Specifies the physical cell where the edit group is to be added)
create_edit_group -group_use (Specifies the usage context of the edit group: 
create_edit_group -name 
create_edit_group -ungroup_on_remove 
create_ems_database
create_ems_message -parameters (Sequence of parameter name and value pairs)
create_ems_message -rule (Rule name for which message needs to be created)
create_ems_rule -message (Message template text)
create_ems_rule -name (Name of the rule)
create_ems_rule -parameters (Definition of parameters)
create_ems_rule -severity (Type of the rule - Error, Warning or Information)
create_fib_con_vias
create_frame -block_all (auto|true|false|used_layers|topBlockedLayerName)]
create_frame -block_core_margin 
create_frame -color_based_dpt_flow (auto|true|false)]
create_frame -connect_within_pin (true|false)]
create_frame -convert_metal_blockage_to_zero_spacing (mode: touch_pin, no_touch_pin, all)]
create_frame -create_zero_spacing_blockages_around_pins 
create_frame -design_rule_via_blockage_layers 
create_frame -drc_distances 
create_frame -enable_via_regions_for_all_design_types (true|false)]
create_frame -hierarchical (true|false)]
create_frame -include_nondefault_via 
create_frame -include_routing_pg_ports 
create_frame -keepout_spacing_for_non_pin_shapes 
create_frame -merge_metal_blockage (true|false)]
create_frame -pin_channel_distances 
create_frame -pin_must_connect_area_layers 
create_frame -pin_must_connect_area_thresholds 
create_frame -port_contact_selections 
create_frame -preserve_metal_blockage (auto|true|false)]
create_frame -remove_non_pin_shapes 
create_frame -source_drain_annotation 
create_frame -trim_metal_blockage_around_pin 
create_freeze_silicon_leq_change_list -cells (List of targeted & sorted ECO cells)
create_freeze_silicon_leq_change_list -output (netlist change list for given LEQ cells)
create_frontend_tcd_cells -bbox (rectangle for insertion)
create_frontend_tcd_cells -check_only (check only)
create_frontend_tcd_cells -density (density)
create_frontend_tcd_cells -icovl_spacing (icovl spacing)
create_frontend_tcd_cells -include_small_windows 
create_frontend_tcd_cells -lib_cells (collection of frontend Tcd lib cells)
create_frontend_tcd_cells -max_tcd_spacing 
create_frontend_tcd_cells -min_tcd_count (minimum number of tcds)
create_frontend_tcd_cells -orientation (tcd orientation: 
create_frontend_tcd_cells -other_cell_spacing 
create_frontend_tcd_cells -place_at_window_center 
create_frontend_tcd_cells -respect_blockage 
create_frontend_tcd_cells -snap_to_fin_grid (snap to fin grid)
create_frontend_tcd_cells -tcd_spacing (tcd spacing)
create_frontend_tcd_cells -window_size 
create_generated_clock -add (Add to the existing clocks on source_objects)
create_generated_clock -combinational (Divide_by 1 clock through combinational logic)
create_generated_clock -comment (User specified comment)
create_generated_clock -divide_by 
create_generated_clock -duty_cycle (Duty cycle for frequency multiplication: 
create_generated_clock -edge_shift 
create_generated_clock -edges (Edge specification)
create_generated_clock -invert (Invert the signal)
create_generated_clock -master_clock (Use this clock if multiple clocks present at master pin)
create_generated_clock -multiply_by 
create_generated_clock -name (Generated clock name)
create_generated_clock -source (Master clock source object pin/port)
create_geo_mask -merge (Merge resulting geo_mask)
create_geo_mask -objects (Objects to use as input geometry)
create_gigfig_from_ply
create_grid -layers (Specify the routing layers to consider within the PG strategy)
create_grid -orientations 
create_grid -pg_strategy 
create_grid -site_arrays 
create_grid -site_rows (Specify the site rows to be considered in creating the grid)
create_grid -type (Type of the grid to create: 
create_grid -x_offset (Specify the grid's offset to the owner design's origin in the X direction)
create_grid -x_step (Specify the grid pitch in the X direction)
create_grid -y_offset (Specify the grid's offset to the owner design's origin in the Y direction)
create_grid -y_step (Specify the grid pitch in the Y direction)
create_group -allow_duplicate_names 
create_group -name (The name of the group)
create_group -remove_when 
create_group -type (Specifies the type of the group: 
create_icovl_cells -bbox (insertion bounding box)
create_icovl_cells -check_only (check only)
create_icovl_cells -icovl_spacing (icovl spacing)
create_icovl_cells -lib_cells (collection of icovl lib cells)
create_icovl_cells -orientation (icovl orientation: 
create_icovl_cells -other_cell_spacing 
create_icovl_cells -over_icovl_routing_guide_extension 
create_icovl_cells -over_icovl_routing_guide_layers 
create_icovl_cells -partitions 
create_icovl_cells -placement_blockage_extension 
create_icovl_cells -routing_blockage_extension 
create_icovl_cells -routing_blockage_layers 
create_icovl_cells -tcd_spacing (tcd spacing)
create_icovl_cells -type 
create_io_break_cells -cells 
create_io_break_cells -location 
create_io_break_cells -reference_cells 
create_io_corner_cell -cell 
create_io_corner_cell -reference_cell 
create_io_filler_cells -extension_bbox 
create_io_filler_cells -io_guides 
create_io_filler_cells -overlap_cells 
create_io_filler_cells -prefix (Specifies a prefix to the cells added)
create_io_filler_cells -reference_cells 
create_io_guide -line 
create_io_guide -min_pitch (Specifies the minimum pitch between two neighboring pads)
create_io_guide -name (The name of the io_guide)
create_io_guide -offset 
create_io_guide -pad_cells 
create_io_guide -side 
create_io_ring -bbox (Bounding box for the io_ring)
create_io_ring -corner_height (height of io_guides in the io_ring)
create_io_ring -guides 
create_io_ring -inside 
create_io_ring -name (Name of the io_ring)
create_io_ring -offset (Offset from the boundary or the interior edge of outer ring)
create_io_ring -pad_cell_list 
create_keepout_margin -inner 
create_keepout_margin -layers 
create_keepout_margin -max_padding_per_macro 
create_keepout_margin -min_padding_per_macro 
create_keepout_margin -outer 
create_keepout_margin -tracks_per_macro_pin 
create_keepout_margin -type (Keepout type (default is hard): 
create_layer -after 
create_layer -before 
create_layer -layer_type 
create_layer -mask_name (Mask name)
create_layer -name (Layer name)
create_layer -number (Layer number)
create_layer -purpose 
create_layer -tech (tech)
create_left_right_filler_cells -boundaries (insertion area list)
create_left_right_filler_cells -follow_stdcell_orientation 
create_left_right_filler_cells -lib_cells (list of {{center cell} {left filler cell list} {right filler cell list}} pair)
create_left_right_filler_cells -prefix (filler cell prefix)
create_left_right_filler_cells -rules (filler insertion special rules: 
create_left_right_filler_cells -voltage_areas 
create_length_limit -for (Group of net, bundle, and topology_edge objects)
create_length_limit -force (Overwrite existing constraint)
create_length_limit -min_value (Min value: 
create_lib -base_lib (Base library path)
create_lib -convert_sites 
create_lib -ref_libs (Reference library paths)
create_lib -scale_factor 
create_lib -technology 
create_lib -use_technology_lib 
create_logic_net
create_logic_port -direction (direction of the logic port; default is 'in': 
create_macro_array -align 
create_macro_array -create_group 
create_macro_array -fill_pattern 
create_macro_array -flip_alternate_cols (Flip macros in alternate cols)
create_macro_array -flip_alternate_rows (Flip macros in alternate rows)
create_macro_array -horizontal_channel_height 
create_macro_array -name 
create_macro_array -num_cols (Specify number of cols)
create_macro_array -num_rows (Specify number of rows)
create_macro_array -orientation 
create_macro_array -vertical_channel_width 
create_macro_relative_location_placement -hierarchical (Place macros level-by-level in current design)
create_macro_relative_location_placement -snap_to_grid (Hard macros will be snapped in relative location placement)
create_marker_around -micron (marker depth, default value is ZERO)
create_marker_around -objects (Create markers around)
create_marker_layers -cells (cells)
create_marker_layers -design (Top design for finding objects)
create_marker_layers -horizontal_extension 
create_marker_layers -references 
create_marker_layers -vertical_extension 
create_mask_constraint_routing_blockages -cells (Create double pattern routing blockages on selected blocks.)
create_mask_constraint_routing_blockages -create_placement_blockages 
create_mask_constraint_routing_blockages -self (Create double pattern routing blockages on top level.)
create_matching_type -name 
create_matching_type -uniquify (Specifies how cells are assigned to pins: 
create_mim_capacitor_array -boundary (polygon for insertion)
create_mim_capacitor_array -lib_cell (Library cell or design to create)
create_mim_capacitor_array -orientation (Specifies the orient of mim capacitors: 
create_mim_capacitor_array -prefix (prefix to be used for names of new cells)
create_mim_capacitor_array -x_increment (x increment)
create_mim_capacitor_array -y_increment (y increment)
create_mismatch_config -ref_config 
create_mode
create_module -design (Top design for finding objects)
create_multibit -lib_cell (library cell name)
create_multibit -name (multibit cell name)
create_multisource_clock_sink_group -driver_object 
create_multisource_clock_sink_group -name (group name of a set of sinks)
create_multisource_clock_sink_group -sinks (list of clock sinks)
create_multisource_clock_sink_group -type 
create_mv_cells -all (create both isolation and level shifter cells)
create_mv_cells -generate_strategy 
create_mv_cells -isolation (create isolation cells)
create_mv_cells -level_shifter (create level shifter cells)
create_mv_cells -strategy_output 
create_mv_cells -verbose (print verbose messages for level-shifter insertion)
create_net -cell (Specifies the cell where the net is to be added)
create_net -design (Top design for finding objects)
create_net -ground (Create net of type Ground)
create_net -power (Create net of type Power)
create_net -tie_high (Create net of type Tie High)
create_net -tie_low (Create net of type Tie Low)
create_net_bus -block (Specifies the block where the net bus is to be added)
create_net_bus -cell (Specifies the cell where the net bus is to be added)
create_net_bus -create_nets (Specifies whether to create net bus members)
create_net_bus -design (Top design for finding objects)
create_net_priority -for (Group of net, bundle, and topology_edge objects)
create_net_priority -force (Overwrite existing constraint)
create_net_priority -priority (Priority: 
create_net_shielding -disabled_layers 
create_net_shielding -enclose_pins (Whether pins are enclosed: 
create_net_shielding -enclose_vias (Whether vias are enclosed: 
create_net_shielding -for (Group of net, bundle, and topology_edge objects)
create_net_shielding -force (Overwrite existing constraint)
create_net_shielding -gap (Default gap)
create_net_shielding -layer_gaps (List of layer and gap)
create_net_shielding -layer_max_gaps (List of layer and max gap)
create_net_shielding -layer_widths (List of layer and width)
create_net_shielding -max_gap (Default max gap)
create_net_shielding -min_segment 
create_net_shielding -sharing (Whether sharing is allowed: 
create_net_shielding -shield_net (First shield net)
create_net_shielding -shield_net_2 (Second shield net)
create_net_shielding -via_defs (Vias to be used)
create_net_shielding -width (Default width)
create_offgrid_tracks_for_hip_pin
create_pad_rings -create 
create_pad_rings -drc (DRC option of the PG strap: 
create_pad_rings -max_shrink_routing_boundaries_for_all_boundary_pads 
create_pad_rings -max_target_layer 
create_pad_rings -min_shrink_routing_boundaries_for_all_boundary_pads 
create_pad_rings -min_target_layer 
create_pad_rings -nets (Nets to create pad rings; required for -create_specified_net)
create_pad_rings -route_pins_on_layer 
create_pad_rings -sides 
create_pad_rings -undo (remove the most recently created PG)
create_partition_tcon
create_pg_composite_pattern -add_patterns 
create_pg_composite_pattern -nets (net name list of the PG composite pattern)
create_pg_composite_pattern -parameters 
create_pg_composite_pattern -via_rule (via rule between low-level patterns in this PG composite pattern)
create_pg_macro_conn_pattern -direction (macro connection direction in this pattern)
create_pg_macro_conn_pattern -excluded_pins 
create_pg_macro_conn_pattern -layers (macro connection strap layers)
create_pg_macro_conn_pattern -nets (macro connection nets in this pattern)
create_pg_macro_conn_pattern -number (number of macro connection straps)
create_pg_macro_conn_pattern -parameters 
create_pg_macro_conn_pattern -pin_conn_type 
create_pg_macro_conn_pattern -pin_layers 
create_pg_macro_conn_pattern -pitch (pitch between macro connection straps)
create_pg_macro_conn_pattern -spacing (spacing between macro connection straps)
create_pg_macro_conn_pattern -via_rule (via rule between macro connection straps and pins)
create_pg_macro_conn_pattern -width (macro connection strap width)
create_pg_mesh_pattern -layers 
create_pg_mesh_pattern -parameters 
create_pg_mesh_pattern -via_rule (via rule between straps in this PG mesh pattern)
create_pg_region -block (use block to create region)
create_pg_region -core (use core area to create region)
create_pg_region -design_boundary (use design boundary to create region)
create_pg_region -exclude_macros 
create_pg_region -exclude_regions 
create_pg_region -expand (expand the PG region horizontally and vertically)
create_pg_region -expand_by_edge 
create_pg_region -group_of_ios (use group of IOs to create region)
create_pg_region -group_of_macros 
create_pg_region -io_offset (offset from IOs)
create_pg_region -join_regions 
create_pg_region -macro_offset 
create_pg_region -polygon (use polygon to create region)
create_pg_region -remove_jog (remove jogging edges from the region)
create_pg_region -remove_notch 
create_pg_region -update (use existing PG region to create region)
create_pg_region -voltage_area 
create_pg_ring_pattern -corner_bridge 
create_pg_ring_pattern -horizontal_layer 
create_pg_ring_pattern -horizontal_spacing 
create_pg_ring_pattern -horizontal_width 
create_pg_ring_pattern -nets (symbolic net names of the PG ring pattern)
create_pg_ring_pattern -parameters 
create_pg_ring_pattern -side_layer 
create_pg_ring_pattern -side_spacing 
create_pg_ring_pattern -side_width 
create_pg_ring_pattern -vertical_layer 
create_pg_ring_pattern -vertical_spacing 
create_pg_ring_pattern -vertical_width 
create_pg_ring_pattern -via_rule (via rule within this PG ring pattern)
create_pg_special_pattern -honor_max_stdcell_strap_distance 
create_pg_special_pattern -insert_channel_straps 
create_pg_special_pattern -insert_physical_cell_alignment_straps 
create_pg_special_pattern -insert_power_switch_alignment_straps 
create_pg_special_pattern -insert_terminal_alignment_straps 
create_pg_special_pattern -parameters 
create_pg_special_pattern -terminal_alignment_via_rule 
create_pg_stapling_vias -align_track 
create_pg_stapling_vias -contact_code 
create_pg_stapling_vias -from_layer (Object layer for via creation)
create_pg_stapling_vias -from_shapes 
create_pg_stapling_vias -ignore_drc (ignore drc checking)
create_pg_stapling_vias -mark_as (use type of the PG vias: 
create_pg_stapling_vias -mask (cut mask: 
create_pg_stapling_vias -max_array_size 
create_pg_stapling_vias -nets (PG nets for via creation)
create_pg_stapling_vias -offset (via creation offset)
create_pg_stapling_vias -pitch (via creation pitch)
create_pg_stapling_vias -regions (Bboxes for via creation)
create_pg_stapling_vias -tag (tag for created vias)
create_pg_stapling_vias -to_layer (Object layer for via creation)
create_pg_stapling_vias -to_shapes (Object shapes for via creation)
create_pg_stapling_vias -via_masters 
create_pg_std_cell_conn_pattern -check_std_cell_drc 
create_pg_std_cell_conn_pattern -layers (layers of the PG standard cell rail pattern)
create_pg_std_cell_conn_pattern -mark_as_follow_pin 
create_pg_std_cell_conn_pattern -parameters 
create_pg_std_cell_conn_pattern -rail_mask (top and bottom rail mask in this pattern)
create_pg_std_cell_conn_pattern -rail_shift 
create_pg_std_cell_conn_pattern -rail_width 
create_pg_strap -direction (direction of the PG strap: 
create_pg_strap -drc (DRC option of the PG strap: 
create_pg_strap -extend_high 
create_pg_strap -extend_low 
create_pg_strap -high_end (high end of the PG strap)
create_pg_strap -layer (layer of the PG strap)
create_pg_strap -low_end (low end of the PG strap)
create_pg_strap -mark_as (use type of the PG strap: 
create_pg_strap -mask (mask of the PG strap: 
create_pg_strap -mask_constraint 
create_pg_strap -net (net name of the PG strap)
create_pg_strap -pitch (pitch value of the PG strap)
create_pg_strap -start (start value of the PG strap)
create_pg_strap -stop (stop value of the PG strap)
create_pg_strap -tag (tag for created vias/wires)
create_pg_strap -via_rule (via rule of the PG strap)
create_pg_strap -width (width value of the PG strap)
create_pg_vias -allow_parallel_objects 
create_pg_vias -drc (DRC option of the PG via creation: 
create_pg_vias -from_layers 
create_pg_vias -from_types (Object types for via creation)
create_pg_vias -insert_additional_vias 
create_pg_vias -mark_as (use type of the PG vias: 
create_pg_vias -nets (PG nets for via creation)
create_pg_vias -shapes (Object shapes for via creation)
create_pg_vias -tag (tag for created vias/wires)
create_pg_vias -to_layers 
create_pg_vias -to_types (Object types for via creation)
create_pg_vias -via_masters 
create_pg_vias -within_bbox 
create_pg_wire_pattern -center (center of the first PG wire)
create_pg_wire_pattern -direction (direction of the PG wire pattern)
create_pg_wire_pattern -extend_high 
create_pg_wire_pattern -extend_low 
create_pg_wire_pattern -high_end_reference_point 
create_pg_wire_pattern -layer (layer of the PG wire pattern)
create_pg_wire_pattern -low_end_reference_point 
create_pg_wire_pattern -mask (wire pattern mask)
create_pg_wire_pattern -mask_constraint 
create_pg_wire_pattern -parameters 
create_pg_wire_pattern -pitch (pitch of the PG wire pattern)
create_pg_wire_pattern -spacing (spacing between PG wires in this pattern)
create_pg_wire_pattern -track_alignment 
create_pg_wire_pattern -trim (trimming option of the PG wire pattern)
create_pg_wire_pattern -width (width list of the PG wire pattern)
create_pin -design (Top design for finding objects)
create_pin -direction (Pin direction; default is 'in': 
create_pin_blockage -boundary (Rectilinear boundary of the pin blockage)
create_pin_blockage -cell (Specifies the physical cell where the pin blockage is to be added)
create_pin_blockage -feedthrough_only (To set the pin blockage as feedthrough)
create_pin_blockage -layers (Layers on which the pin blockage exists)
create_pin_blockage -name 
create_pin_guide -boundary (Rectilinear boundary of the pin guide)
create_pin_guide -cell (Specifies the physical cell where the pin guide is to be added)
create_pin_guide -exclusive (Set the pin guide to be exclusive)
create_pin_guide -layers (Layers on which the pin guide exists)
create_pin_guide -name (Name of the pin guide)
create_pin_guide -parents (Macro and partition cells to which this pin guide applies)
create_pin_guide -pin_spacing 
create_placement -congestion (Run congestion driven placement)
create_placement -congestion_driven_restructuring 
create_placement -congestion_effort 
create_placement -effort (Placement effort: 
create_placement -floorplan (Run design planning styled placement)
create_placement -host_options 
create_placement -incremental (Run incremental placement)
create_placement -timing_driven (Run timing-driven placement)
create_placement -use_seed_locs (Use current cell locations as a seed for placement)
create_placement_blockage -blocked_percentage 
create_placement_blockage -boundary (Polygon boundary points)
create_placement_blockage -category 
create_placement_blockage -cell (Specifies the physical cell where the placement blockage is to be added)
create_placement_blockage -name (Blockage name)
create_placement_blockage -purpose 
create_placement_blockage -type (Blockage type (default is hard): 
create_poly_rect -boundary (Convert this boundary to poly_rects)
create_poly_rect -layers (Target layers for poly_rects)
create_port -cell (Specifies the cell where the port is to be added)
create_port -design (Top design for finding objects)
create_port -direction (Port direction; default is 'in': 
create_port -port_type (Port type; default is 'unset': 
create_port_bus -block (Specifies the block where the port bus is to be added)
create_port_bus -cell (Specifies the cell where the port bus is to be added)
create_port_bus -create_ports (Specifies whether to create port bus members)
create_port_bus -design (Top design for finding objects)
create_power_domain -available_supplies 
create_power_domain -elements (Cells to associate with domain)
create_power_domain -include_scope (Include the scope of domain in the extent)
create_power_domain -scope (Create the power domain within this logic hierarchy)
create_power_domain -supply 
create_power_domain -update (Update the previously defined power domain)
create_power_state_group
create_power_switch -ack_delay 
create_power_switch -ack_port 
create_power_switch -control_port 
create_power_switch -domain (Specify which power domain this power switch is defined for)
create_power_switch -error_state 
create_power_switch -input_supply_port 
create_power_switch -off_state 
create_power_switch -on_partial_state 
create_power_switch -on_state 
create_power_switch -output_supply_port 
create_power_switch -supply_set 
create_power_switch_array -align_marker 
create_power_switch_array -boundary (Specifies the sub-region to place power switches)
create_power_switch_array -checkerboard (Specifies if the cells should be inserted in a checker board pattern: 
create_power_switch_array -lib_cell 
create_power_switch_array -offset_start 
create_power_switch_array -orient (Specifies the orient of power switches: 
create_power_switch_array -pattern (Specifies the pattern name to be placed)
create_power_switch_array -pg_straps 
create_power_switch_array -pg_strategy 
create_power_switch_array -power_switch 
create_power_switch_array -prefix (Prefix for power switch cell name)
create_power_switch_array -siterow_offset 
create_power_switch_array -siterow_pitch 
create_power_switch_array -snap_to_site_row 
create_power_switch_array -switch_number 
create_power_switch_array -voltage_area 
create_power_switch_array -voltage_area_shape 
create_power_switch_array -x_offset (Specifies the horizontal offset of the first power switch)
create_power_switch_array -x_pitch (Specifies the horizontal distance between power switches)
create_power_switch_array -y_offset (Specifies the vertical offset of the first power switch)
create_power_switch_array -y_pitch (Specifies the vertical distance between power switches)
create_power_switch_ring -boundary (Insert power switch to the polygon)
create_power_switch_ring -continue_pattern (Specifies if the pattern should be continued among edges)
create_power_switch_ring -end_point 
create_power_switch_ring -filler_cells 
create_power_switch_ring -inner_corner_cell 
create_power_switch_ring -inner_corner_cell_orient 
create_power_switch_ring -lib_cell (Specify the library cell name of power switch)
create_power_switch_ring -orient (Specifies the orient of power switches: 
create_power_switch_ring -outer_corner_cell 
create_power_switch_ring -outer_corner_cell_orient 
create_power_switch_ring -pattern (Specifies the pattern name to be placed)
create_power_switch_ring -power_switch 
create_power_switch_ring -prefix (Prefix for power switch cell name)
create_power_switch_ring -snap_to_site_row 
create_power_switch_ring -start_point 
create_power_switch_ring -switch_number 
create_power_switch_ring -through_points 
create_power_switch_ring -vertical_filler_cells 
create_power_switch_ring -vertical_lib_cell 
create_power_switch_ring -vertical_lib_cell_orient 
create_power_switch_ring -voltage_area 
create_power_switch_ring -voltage_area_shape 
create_power_switch_ring -x_offset (Specifies the horizontal offset of the first power switch)
create_power_switch_ring -x_pitch (Specifies the horizontal distance between power switches)
create_power_switch_ring -y_offset (Specifies the vertical offset of the first power switch)
create_power_switch_ring -y_pitch (Specifies the vertical distance between power switches)
create_pr_rule -abut_table (abut table top_top top_bot bot_bot: 
create_pr_rule -library (Library for finding objects, default is current library's tech)
create_pr_rule -row_spacing 
create_pr_rule -tech (Tech for finding objects, default is current library's tech)
create_pst -supplies (List of supply nets or ports)
create_purpose -force (Overwrite an existing tech_purpose of the same name)
create_purpose -name 
create_purpose -number 
create_purpose -tech (Tech)
create_qor_snapshot -corners (create qor snapshot for scenarios of these corners (default is all corners))
create_qor_snapshot -max_paths (report timing report max path number for each timing group)
create_qor_snapshot -modes (create qor snapshot for scenarios of these modes (default is all modes))
create_qor_snapshot -name (snapshot name)
create_qor_snapshot -nosplit (Don't split lines if column overflows)
create_qor_snapshot -nworst (report timing report max path number for each endpoint)
create_qor_snapshot -power (snapshot report power)
create_qor_snapshot -scenarios 
create_qor_snapshot -significant_digits 
create_qor_snapshot -zero_wire_load (report violated endpoints with zero wire load violation)
create_rdl_power_extension -bbox 
create_rdl_power_extension -from_previous_extension (false|true)]
create_rdl_power_extension -ground_net (ground net name)
create_rdl_power_extension -layer 
create_rdl_power_extension -mode (new|remove)]   (specifies the mode of creating shields (default new): 
create_rdl_power_extension -power_net (power net name)
create_rdl_power_extension -remove_nets 
create_rdl_power_extension -width_variation 
create_rdl_shields -layers 
create_rdl_shields -mode (new|unshield|reshield)]
create_rdl_shields -nets 
create_rdl_shields -nets_in_file 
create_rdl_shields -shield_on_bump (false|true)]
create_rdl_shields -shield_routing_tie (false|true)]
create_rdl_shields -shield_via_tie (false|true)]
create_rdl_shields -trim_floating (false|true)]
create_routing_blockage -allow_metal_fill_only 
create_routing_blockage -allow_via_ladder (To allow overlap with via_ladders)
create_routing_blockage -blockage_group_id 
create_routing_blockage -boundary (rectangle or polygon boundary of the blockage)
create_routing_blockage -boundary_external (Creates an external boundary blockage)
create_routing_blockage -boundary_internal (Creates an internal boundary blockage)
create_routing_blockage -cell (Specifies the physical cell where the routing blockage is to be added)
create_routing_blockage -layers (Layers on which to create routing blockage)
create_routing_blockage -name_prefix 
create_routing_blockage -net_types 
create_routing_blockage -reserve_for_top_level_routing 
create_routing_blockage -zero_spacing (Creates a zero-spacing blockage)
create_routing_corridor -boundary (Corridor boundary)
create_routing_corridor -cell (Specifies the physical cell where the routing corridor is to be added)
create_routing_corridor -end_endcap 
create_routing_corridor -max_layer_name 
create_routing_corridor -min_layer_name 
create_routing_corridor -name (Name of the routing corridor)
create_routing_corridor -object (Objects associated with this routing corridor)
create_routing_corridor -path (Corridor path)
create_routing_corridor -start_endcap 
create_routing_corridor -width (Corridor path width)
create_routing_corridor_shape -boundary (Routing corridor shape in rectangle or polygon)
create_routing_corridor_shape -end_endcap 
create_routing_corridor_shape -max_layer_name 
create_routing_corridor_shape -min_layer_name 
create_routing_corridor_shape -path (Routing corridor shape in path)
create_routing_corridor_shape -routing_corridor 
create_routing_corridor_shape -start_endcap 
create_routing_corridor_shape -width (path width)
create_routing_guide -access_preference 
create_routing_guide -boundary (Routing guide bounding box)
create_routing_guide -cell (Specifies the physical cell where the routing guide is to be added)
create_routing_guide -design_boundary_blockage 
create_routing_guide -forbidden_preferred_grid_extension 
create_routing_guide -horizontal_track_utilization 
create_routing_guide -layers 
create_routing_guide -max_patterns 
create_routing_guide -metal_cut_allowed (Route Guide type is metal_cut_allowed)
create_routing_guide -name 
create_routing_guide -pin_access (Route Guide type is pin_access)
create_routing_guide -preferred_direction_only 
create_routing_guide -river_routing (Route Guide type is river_routing)
create_routing_guide -single_row_via_ladder_pattern_must_join_allowed 
create_routing_guide -standard_cell_region 
create_routing_guide -switch_preferred_direction 
create_routing_guide -switched_direction_only 
create_routing_guide -vertical_track_utilization 
create_routing_rule -cuts 
create_routing_rule -default_reference_rule 
create_routing_rule -driver_taper_distance 
create_routing_rule -ignore_spacing_to_blockage 
create_routing_rule -ignore_spacing_to_pg 
create_routing_rule -ignore_spacing_to_shield 
create_routing_rule -mask_constraints 
create_routing_rule -multiplier_spacing 
create_routing_rule -multiplier_width 
create_routing_rule -rdl_taper_distances 
create_routing_rule -rdl_taper_widths 
create_routing_rule -reference_rule_name 
create_routing_rule -shield (Define shielding with default width and spacing)
create_routing_rule -shield_spacings 
create_routing_rule -shield_widths 
create_routing_rule -snap_to_track (Snap shielding wires to the nearest routing track)
create_routing_rule -spacing_length_thresholds 
create_routing_rule -spacing_weight_levels 
create_routing_rule -spacings 
create_routing_rule -taper_distance 
create_routing_rule -taper_over_pin_layers 
create_routing_rule -taper_under_pin_layers 
create_routing_rule -via_spacings 
create_routing_rule -vias 
create_routing_rule -widths 
create_rp_group -columns (number of columns of RP group: 
create_rp_group -design (Top design for finding objects)
create_rp_group -name (name of the RP group)
create_rp_group -rows (number of rows of RP group: 
create_sadp_track_rule -name 
create_sadp_track_rule -pattern (pattern of the track_rule)
create_sadp_track_rule -sadp_spacing 
create_scenario -corner (Corner of scenario; default is current corner)
create_scenario -init_from (corner or scenario)
create_scenario -mode (Mode of scenario; default is current mode)
create_scenario -name (Scenario name)
create_shape -boundary (Rect or polygon boundary)
create_shape -end_endcap (Path end endcap: 
create_shape -end_extension 
create_shape -fill_cell (Fill cell to own the shape)
create_shape -height (Text height)
create_shape -justification 
create_shape -layer (Layer on which to create the shape)
create_shape -net (Net of the shape)
create_shape -orientation 
create_shape -origin (Text origin)
create_shape -path (Path centerline points)
create_shape -port (Port of the shape)
create_shape -shape_type (Type of the shape: 
create_shape -shape_use (Usage of the shape: 
create_shape -start_endcap (Path start endcap: 
create_shape -start_extension 
create_shape -text (Text string)
create_shape -width (Path width)
create_shaping_blockage -boundary (Polygon boundary points)
create_shaping_blockage -cell (Specifies the physical cell where the shaping blockage is to be added)
create_shaping_blockage -name (Blockage name)
create_shaping_blockage -purpose 
create_shields -align_to_shape_end (false|true)]
create_shields -coaxial_above (false|true)]
create_shields -coaxial_above_skip_tracks 
create_shields -coaxial_above_user_spacing 
create_shields -coaxial_below (false|true)]
create_shields -coaxial_below_skip_tracks 
create_shields -coaxial_below_user_spacing 
create_shields -coaxial_skip_tracks_on_layers 
create_shields -ignore_shielding_net_pins (false|true)]
create_shields -ignore_shielding_net_rails (false|true)]
create_shields -include_adjacent_layers (false|true)]
create_shields -nets (list of nets to shield; (default is nets with shielding rules are only shielded))
create_shields -pg_via_tie_effort_level 
create_shields -preferred_direction_only (false|true)]
create_shields -shield_via_tie_effort_level 
create_shields -shielding_mode 
create_shields -with_ground 
create_site_array -above (Name or collection of a site array)
create_site_array -aligned (Align site rows to virtual site grid: 
create_site_array -below (Name or collection of a site array)
create_site_array -bottom (at the bottom of the stack)
create_site_array -boundary (Rect or polygon boundary)
create_site_array -core_offset 
create_site_array -default (create a default site array)
create_site_array -direction 
create_site_array -flip_alternate_row 
create_site_array -flip_first_row 
create_site_array -inner_margin 
create_site_array -name 
create_site_array -site (Site definition name)
create_site_array -top (at the top of the stack)
create_site_array -transparent 
create_site_array -voltage_area 
create_site_array -x_margin (x offset between sites of a site row)
create_site_array -y_margin (y offset between site rows of the array)
create_site_def -height (Height of the site definition)
create_site_def -is_default (This is a default site_def)
create_site_def -library (Library for finding objects, default is current library's tech)
create_site_def -name (Name of the site definition)
create_site_def -symmetry (Specifies if the site definition is symmetrical about X and/or Y and/or 90 degree rotation, there is no default symmetry)
create_site_def -tech (Tech for finding objects, default is current library's tech)
create_site_def -type (Type of the site definition as core/pad, default is core: 
create_site_def -width (Width of the site definition)
create_site_row -name (Site row name)
create_site_row -orientation 
create_site_row -origin (Origin of site row)
create_site_row -site (Site definition name)
create_site_row -site_count (Number of sites in the site row: 
create_site_row -site_orientation 
create_site_row -x_margin (x offset between sites of a site row)
create_stdcell_fillers -bboxes (area insertion bounding box list)
create_stdcell_fillers -continue_on_error (continue on error)
create_stdcell_fillers -ignore_hard_blockages 
create_stdcell_fillers -lib_cells (collection of filler lib cells)
create_stdcell_fillers -post_eco (mark filler post eco)
create_stdcell_fillers -prefix ( fillers prefix)
create_stdcell_fillers -rules (filler insertion special rules: 
create_stdcell_fillers -smallest_cell_size 
create_stdcell_fillers -utilization 
create_stdcell_fillers -voltage_area 
create_supernet -design (Top design for finding objects)
create_supernet -name (Name of supernet)
create_supply_net -domain (The domain in whose scope the supply net is to be created)
create_supply_net -resolve (The behavior for supply net resolution)
create_supply_net -reuse (Extend the supply net name as a supply net within the power domain)
create_supply_port -direction (Port direction; default is 'in': 
create_supply_port -domain (Domain in which to create supply port)
create_supply_set -function 
create_supply_set -update (Update an existing supply set)
create_tap_cells -at_distance_only (Specifies whether density adjustment should be used)
create_tap_cells -distance (tap distance)
create_tap_cells -insert_into_blocks (Specifies whether tap cells are inserted into blocks)
create_tap_cells -lib_cell (library cell for tap cell)
create_tap_cells -mirrored_row_lib_cell 
create_tap_cells -offset (offset)
create_tap_cells -pattern 
create_tap_cells -prefix (tap cell inst prefix)
create_tap_cells -preserve_distance_continuity 
create_tap_cells -row_end_tap_bypass (No tap placed within rule distance from row ends)
create_tap_cells -separator (tap cell seperator)
create_tap_cells -skip_fixed_cells (Specifies whether existing fixed cells are treated as blockages)
create_tap_cells -voltage_area 
create_taps -import (Tap file to be read in)
create_taps -layer (Layer number)
create_taps -name (Name to be assigned to the tap)
create_taps -nocheck (Don't check whether the tap touches a geometry)
create_taps -of_objects (Create taps by cell instances or masters)
create_taps -point (XY coordinates of the tap to be created)
create_taps -snap_distance 
create_taps -supply_net 
create_taps -top_pg (Create taps by top-level pins)
create_tech -force (creates a new tech and re-binds the lib)
create_tech -library (Library)
create_terminal -direction 
create_terminal -eeq_class (Provide value for eeq_class attribute on terminal: 
create_terminal -name (Name of the terminal)
create_terminal -object (Name or collection of the terminal shape or via)
create_terminal -of_objects 
create_terminal -port (Name or collection of a port)
create_topological_constraint -cell (Specifies the physical cell where the topological feedthrough constraint is to be added)
create_topological_constraint -end_layers (Layers on which pins may be created)
create_topological_constraint -end_object (Object at the end of the connection)
create_topological_constraint -end_offset (Offset distance from the edge's starting point in clockwise direction)
create_topological_constraint -end_offset_range 
create_topological_constraint -end_sides 
create_topological_constraint -start_layers (Layers on which pins may be created)
create_topological_constraint -start_object (Object at the start of the connection)
create_topological_constraint -start_offset (Offset distance from the edge's starting point in clockwise direction)
create_topological_constraint -start_offset_range 
create_topological_constraint -start_sides 
create_topology_edge -constraint_groups 
create_topology_edge -endpoint0 (The object to connect to the topology edge's first endpoint)
create_topology_edge -endpoint1 (The object to connect to the topology edge's second endpoint)
create_topology_edge -name 
create_topology_edge -net (Net of the topology edge)
create_topology_node -boundary (The rectangular physical constraint boundary on the topology node)
create_topology_node -centroid (Set as virtual centroid pin)
create_topology_node -driver (Set as virtual driver pin)
create_topology_node -name 
create_topology_node -net (Net of the topology node)
create_track -bbox (Boundary of the tracks)
create_track -cell (Specifies the physical cell where the tracks are to be added)
create_track -coord 
create_track -count 
create_track -dir (Direction of the track: 
create_track -end_grid_high_offset 
create_track -end_grid_high_steps 
create_track -end_grid_low_offset 
create_track -end_grid_low_steps 
create_track -layer (Routing layer used for the tracks)
create_track -mask_pattern 
create_track -reserved_for_width (Indicates if the track is reserved)
create_track -space (Space between tracks)
create_track -width (Wire width associated with this track)
create_undo_marker
create_utilization_configuration -as_user_default (Creates user defined default configuration for utilization reporting)
create_utilization_configuration -capacity 
create_utilization_configuration -exclude 
create_utilization_configuration -force (Overwrite the existing configuration)
create_utilization_configuration -include 
create_utilization_configuration -scope (Scope of the configuration: 
create_via -cut_mask_constraint 
create_via -cut_pattern 
create_via -lower_mask_constraint 
create_via -net (Net of the via)
create_via -orientation 
create_via -origin (Placement location of the via's center)
create_via -pitch 
create_via -port (Port of the via)
create_via -shape_use (Usage of the via: 
create_via -size (Number of rows and columns in a simple array via)
create_via -upper_mask_constraint 
create_via -via_def 
create_via_def -cut_layer (Cut layer of a simple via_def)
create_via_def -cut_pattern 
create_via_def -cut_size 
create_via_def -design (Top design for finding objects)
create_via_def -force (Overwrite an existing via_def of the same name)
create_via_def -is_default (This is a default via_def)
create_via_def -is_excluded_for_signal_route 
create_via_def -library (Library for finding objects)
create_via_def -lower_enclosure 
create_via_def -lower_mask_pattern 
create_via_def -mask_pattern 
create_via_def -min_columns 
create_via_def -min_cut_spacing 
create_via_def -min_rows 
create_via_def -redundant_via_insertion_only 
create_via_def -shapes (Shapes of a custom via_def)
create_via_def -source_type 
create_via_def -tech (Tech for finding object)
create_via_def -upper_enclosure 
create_via_def -upper_mask_pattern 
create_via_region -boundary (Polygon boundary points)
create_via_region -design (Top design for finding objects)
create_via_region -force (Overwrite an existing via_region associated with the pin)
create_via_region -rotate (Specifies whether the router must rotate the vias 90 degrees for placement in the via region)
create_via_region -terminal (The terminal associated with the via region)
create_via_region -via_def (Via definition associated with the via region)
create_via_rule -cut_layer_names 
create_via_rule -cut_names (Specifies the cut names)
create_via_rule -cut_rows (Specifies the cut rows)
create_via_rule -cuts_per_row 
create_via_rule -design (Top design for finding objects)
create_via_rule -library (Library for finding objects)
create_via_rule -name (The name of via rule)
create_via_rule -tech (Tech for finding object)
create_virtual_connection -name (Specify the name of the new virtual connection)
create_virtual_connection -pins (Specify pins or ports to be connected to the newly created virtual connection)
create_virtual_connection -weight (Specify the weight of virtual connection: 
create_voltage_area -cell (Specifies the physical cell where the voltage area is to be added)
create_voltage_area -cells (Cells to be included in the voltage_area)
create_voltage_area -ground (ground supply_net of this voltage_area)
create_voltage_area -guard_band (guard_band widths in horizontal and vertical directions)
create_voltage_area -is_fixed (Set the voltage_area location as fixed)
create_voltage_area -merge_regions (Merge abutted and overlapping regions)
create_voltage_area -name 
create_voltage_area -power (power supply_net of this voltage_area)
create_voltage_area -power_domains 
create_voltage_area -region (rectangles and polygons for this voltage_area)
create_voltage_area -target_utilization 
create_voltage_area_rule -allow_pass_through 
create_voltage_area_rule -allow_physical_feedthrough 
create_voltage_area_rule -default_rule (Create the default rule)
create_voltage_area_rule -name (Name of the voltage area rule)
create_voltage_area_rule -voltage_areas 
create_voltage_area_shape -above 
create_voltage_area_shape -below 
create_voltage_area_shape -bottom (at the bottom of the stack)
create_voltage_area_shape -cells (Cells to be included in this voltage_area_shape)
create_voltage_area_shape -exclusive (Set the voltage_area_shape as exclusive)
create_voltage_area_shape -guard_band (guard_band widths in horizontal and vertical directions)
create_voltage_area_shape -merge_regions (Merge with existing abutted and overlapping regions)
create_voltage_area_shape -region (rectangle or polygon boundary of this voltage_area_shape)
create_voltage_area_shape -target_utilization 
create_voltage_area_shape -top (at the top of the stack)
create_voltage_area_shape -voltage_area 
create_vtcell_fillers -boundary 
create_vtcell_fillers -clear_vt_information 
create_vtcell_fillers -prefix (end cap inst prefix)
create_vtcell_fillers -region (rectangles and polygons for the insertion area)
create_vtcell_fillers -separator (end cap seperator)
create_vtcell_fillers -voltage_area 
create_wire_matching -for (Group of net, bundle, and topology_edge objects)
create_wire_matching -force (Overwrite existing constraint)
create_wire_matching -match_type 
create_wire_matching -relative (Tolerance is percentage or absolute)
create_wire_matching -tolerance (Tolerance value: 
crfm
cs
cul
current_block -quiet (Suppress all messages)
current_corner
current_design -quiet (Suppress all messages)
current_instance
current_lib -quiet (Suppress all messages)
current_mode
current_scenario
cut_rows -all (To remove all site rows)
cut_rows -within (Coordinates of the boundary of the rectilinear shape)
date
decode_snps_version
define_antenna_accumulation_mode -cut_to_metal (Accumulation cut to metal mode)
define_antenna_accumulation_mode -metal_to_cut (Accumulation metal to cut mode)
define_antenna_area_rule -diode_distance 
define_antenna_area_rule -max_area (Maximum allowable metal area for the antenna area rule: 
define_antenna_area_rule -mode (The way antenna areas are computed)
define_antenna_layer_ratio_scale -accumulate_scale 
define_antenna_layer_ratio_scale -layer (Name of the layer)
define_antenna_layer_ratio_scale -layer_scale 
define_antenna_layer_rule -diode_ratio 
define_antenna_layer_rule -layer (Name of the valid metal layer or cut layer in the library)
define_antenna_layer_rule -mode (The way antenna areas are computed: 
define_antenna_layer_rule -name (An antenna rule's name that this antenna layer rule associates with)
define_antenna_layer_rule -nratio (The maximum allowable ratio of the antenna area to the n-gate area)
define_antenna_layer_rule -pratio (The maximum allowable ratio of the antenna area to the p-gate area)
define_antenna_layer_rule -ratio (The maximum allowable ratio of the antenna area to the gate area)
define_antenna_layer_rule -scale_factor 
define_antenna_rule -area_threshold (threshold for accumulated area of floating metal or via)
define_antenna_rule -cut_nratio 
define_antenna_rule -cut_pratio 
define_antenna_rule -cut_ratio 
define_antenna_rule -diode_mode 
define_antenna_rule -metal_nratio 
define_antenna_rule -metal_pratio 
define_antenna_rule -metal_ratio 
define_antenna_rule -mode (The way antenna areas are computed: 
define_antenna_rule -name (The name to be associated with the antenna rule)
define_antenna_rule -protected_cut_scale 
define_antenna_rule -protected_metal_scale 
define_name_rules -add_dummy_nets (Adds dummy nets for unconnected pins.)
define_name_rules -allowed (Specifies the set of characters allowed in names, which must be 10 or more characters.)
define_name_rules -case_insensitive (Specifies that the case of characters is not significant when comparing names.)
define_name_rules -check_bus_indexing (Rule to check bus indexing.)
define_name_rules -check_internal_net_name 
define_name_rules -collapse_name_space (Rule to collapse name buses.)
define_name_rules -dont_change_bus_members 
define_name_rules -dont_change_ports (Specifies not to change ports.)
define_name_rules -dummy_net_prefix 
define_name_rules -equal_ports_nets (Rule for equal port and net names)
define_name_rules -first_restricted 
define_name_rules -inout_ports_equal_nets 
define_name_rules -last_restricted 
define_name_rules -map (Rule to map objects name from existing pattern to specified one.)
define_name_rules -max_length 
define_name_rules -prefix (Specifies a prefix used when changing a name.)
define_name_rules -remove_chars (Specifies that characters not allowed in names, as specified by character restriction rules, are removed rather than replaced.)
define_name_rules -remove_irregular_port_bus 
define_name_rules -remove_port_bus (Bit-blasts all port buses.)
define_name_rules -replacement_char 
define_name_rules -reserved_words 
define_name_rules -reset (Resets all the rules in this name rules set)
define_name_rules -restricted 
define_name_rules -special (Option to specify special rules for the given output format.)
define_name_rules -target_bus_naming_style 
define_name_rules -type (Type on which these rules can be applied)
define_proc_attributes -command_group 
define_proc_attributes -define_arg_groups 
define_proc_attributes -define_args 
define_proc_attributes -dont_abbrev (Procedure can never be abbreviated)
define_proc_attributes -hidden (Procedure does not show up in help or info)
define_proc_attributes -hide_body (Body cannot be viewed with 'info body')
define_proc_attributes -info (Help string for the procedure)
define_proc_attributes -permanent (Procedure cannot be overwritten)
define_proc_attributes -return (Return type for the procedure)
define_user_attribute -classes (Define attributes for these classes: 
define_user_attribute -name (Attribute name)
define_user_attribute -one_of (List of allowable strings)
define_user_attribute -persistent (Make this attribute persistent)
define_user_attribute -quiet (Do not print any messages)
define_user_attribute -range_max (Max value for numeric ranges)
define_user_attribute -range_min (Min value for numeric ranges)
define_user_attribute -type (Data type of the attribute: 
delete_all_tables
delete_dice_diff_record_iter
delete_dice_key_iter
delite_save_stage
derive_cell_snap_data -force ()
derive_clock_balance_constraints -slack_less_than 
derive_clock_balance_points -clocks (List of clocks)
derive_clock_balance_points -corners (List of corners)
derive_clock_balance_points -output (Output file name)
derive_clock_balance_points -reference_latency 
derive_clock_cell_references -output (Write derived references to specified file instead of applying to design)
derive_hier_antenna_property -design_name (name of the design)
derive_macro_relative_location -anchor_corner 
derive_macro_relative_location -anchor_object 
derive_macro_relative_location -cells (Cell list of macro cells that need derivation)
derive_macro_relative_location -cluster_spacing 
derive_macro_relative_location -hierarchical (Derive macro relative location constraints in hierarchical design)
derive_macro_relative_location -offset_type 
derive_macro_relative_location -output_file (Specifies the output file name)
derive_macro_relative_location -use_bbox (Indicates that BBoxes would be used when encountering rectlinear block shape)
derive_mask_constraint
derive_pg_mask_constraint -derive_cut_mask (derive cut masks)
derive_pg_mask_constraint -nets (List of power or ground nets)
derive_pg_mask_constraint -overwrite (overwrite)
derive_pg_mask_constraint -verbose (show error message)
derive_placement_blockages -force (create of blockages even if utilization may be high)
derive_placement_blockages -hierarchical ( level-by-level in current design)
derive_preferred_macro_locations -file (write the constraints to the given file)
derive_route_connection
destroy
diceTclLoadHelper
dice_annotation_get_allowed_values
dice_annotation_get_category
dice_annotation_get_changed_time_from_file
dice_annotation_get_choice_info
dice_annotation_get_choice_label
dice_annotation_get_default_sub_value
dice_annotation_get_default_value
dice_annotation_get_description
dice_annotation_get_html_description
dice_annotation_get_keys
dice_annotation_get_keys_with_value
dice_annotation_get_label
dice_annotation_get_last_changed_time
dice_annotation_get_name
dice_annotation_get_previous_value
dice_annotation_get_sub_value
dice_annotation_get_sub_value_allowed_values
dice_annotation_get_sub_value_data_type
dice_annotation_get_sub_value_info
dice_annotation_get_sub_value_label
dice_annotation_get_sub_value_tags
dice_annotation_get_type
dice_annotation_get_value
dice_annotation_get_value_from_file
dice_annotation_get_value_source
dice_annotation_get_value_source_from_file
dice_annotation_has_restricted_values
dice_annotation_has_strict_value_enforcement
dice_annotation_has_value
dice_annotation_has_value_from_file
dice_annotation_last_result_was_local
dice_annotation_remove_data
dice_annotation_revert_to_file
dice_annotation_set_default_value
dice_annotation_set_sub_value
dice_annotation_set_value
dice_clone_key
dice_constraint_get_allowed_values
dice_constraint_get_category
dice_constraint_get_changed_time_from_file
dice_constraint_get_choice_info
dice_constraint_get_choice_label
dice_constraint_get_default_sub_value
dice_constraint_get_default_value
dice_constraint_get_description
dice_constraint_get_html_description
dice_constraint_get_keys
dice_constraint_get_keys_with_value
dice_constraint_get_label
dice_constraint_get_last_changed_time
dice_constraint_get_name
dice_constraint_get_previous_value
dice_constraint_get_sub_value
dice_constraint_get_sub_value_allowed_values
dice_constraint_get_sub_value_data_type
dice_constraint_get_sub_value_info
dice_constraint_get_sub_value_label
dice_constraint_get_sub_value_tags
dice_constraint_get_type
dice_constraint_get_value
dice_constraint_get_value_from_file
dice_constraint_get_value_source
dice_constraint_get_value_source_from_file
dice_constraint_has_restricted_values
dice_constraint_has_strict_value_enforcement
dice_constraint_has_value
dice_constraint_has_value_from_file
dice_constraint_last_result_was_local
dice_constraint_remove_data
dice_constraint_revert_to_file
dice_constraint_set_default_value
dice_constraint_set_sub_value
dice_constraint_set_value
dice_data_type_get
dice_data_type_get_compressed_value
dice_data_type_get_name
dice_data_type_get_uncompressed_value
dice_data_type_is_valid_format
dice_data_type_is_valid_value
dice_diff_record_accept_candidate_info
dice_diff_record_accept_file_info
dice_diff_record_do_comparison
dice_diff_record_finish_comparison
dice_diff_record_get_annotation
dice_diff_record_get_constraint
dice_diff_record_get_diff_records
dice_diff_record_get_diff_records_iter
dice_diff_record_get_key
dice_diff_record_get_new_change_time
dice_diff_record_get_new_user_name
dice_diff_record_get_new_value
dice_diff_record_get_new_value_source
dice_diff_record_get_old_change_time
dice_diff_record_get_old_user_name
dice_diff_record_get_old_value
dice_diff_record_get_old_value_source
dice_diff_record_get_type
dice_diff_record_iter_add_filter_to_include_record
dice_diff_record_iter_clear_filters
dice_diff_record_iter_count
dice_diff_record_iter_empty
dice_diff_record_iter_get_next
dice_diff_record_iter_reset
dice_discard_cell
dice_get_annotation
dice_get_annotations
dice_get_configuration
dice_get_configurations
dice_get_constraint
dice_get_constraints
dice_get_data_type
dice_get_key
dice_get_key_types
dice_get_records
dice_key_add_key
dice_key_add_to_group
dice_key_attach_configuration
dice_key_clear_configuration
dice_key_get_alias
dice_key_get_all_keys
dice_key_get_attached_configuration
dice_key_get_attached_configuration_from_file
dice_key_get_cell_name
dice_key_get_configuration_name
dice_key_get_description
dice_key_get_file_keys_in_group
dice_key_get_groups
dice_key_get_keys_in_group
dice_key_get_keys_in_group_iter
dice_key_get_name
dice_key_get_type
dice_key_group_get_keys
dice_key_group_get_keys_of_type
dice_key_group_get_types
dice_key_group_has_type
dice_key_isa_key_group
dice_key_iter_count
dice_key_iter_empty
dice_key_iter_get_next
dice_key_iter_reset
dice_key_remove_all_keys
dice_key_remove_from_group
dice_key_remove_key
dice_key_set_alias
dice_key_set_configuration
dice_key_set_description
dice_key_set_name
dice_needs_to_save
dice_read_file
dice_record_get_allowed_values
dice_record_get_category
dice_record_get_changed_time_from_file
dice_record_get_choice_info
dice_record_get_choice_label
dice_record_get_default_sub_value
dice_record_get_default_value
dice_record_get_description
dice_record_get_html_description
dice_record_get_keys
dice_record_get_keys_with_value
dice_record_get_label
dice_record_get_last_changed_time
dice_record_get_name
dice_record_get_previous_value
dice_record_get_sub_value
dice_record_get_sub_value_allowed_values
dice_record_get_sub_value_data_type
dice_record_get_sub_value_info
dice_record_get_sub_value_label
dice_record_get_sub_value_tags
dice_record_get_type
dice_record_get_value
dice_record_get_value_from_file
dice_record_get_value_source
dice_record_get_value_source_from_file
dice_record_has_restricted_values
dice_record_has_strict_value_enforcement
dice_record_has_value
dice_record_has_value_from_file
dice_record_isa_annotation
dice_record_isa_constraint
dice_record_last_result_was_local
dice_record_remove_data
dice_record_revert_to_file
dice_record_set_default_value
dice_record_set_sub_value
dice_record_set_type
dice_record_set_value
dice_revert_to_file
dice_save_file
dice_write_copy_of_file
dice_write_file
dice_write_local_settings
disable_debug_msg
disconnect_3d_bumps -nets 
disconnect_net -all (Disconnect all objects from net)
disconnect_net -design (Top design for finding objects)
disconnect_net -net (Net/net_bus to disconnect object(s) from)
distribute_objects -anchor (names or collection of anchor objects)
distribute_objects -anchor_side 
distribute_objects -group (distribute as group)
distribute_objects -margin (consider keepout margins or guard bands)
distribute_objects -parent (distribute to parent)
distribute_objects -pitch (distribute pitch)
distribute_objects -side 
distribute_objects -spacing (distribute spacing)
distribute_objects -to (distribute to point)
distribute_objects -to_box (distribute to box)
does_it_collide
dp_fn_eco_create_net_shape
dp_fn_eco_create_rename_eco_file
dp_fn_eco_create_terminal
dp_reports
dp_save_stage
dump_floorplan
duplicate_blockages_from_hard_type_to_hard_macro_type
eB
eL
eR
eT
ebb_bbox_poly
echo -n (Suppress newline)
eco_netlist -by_block 
eco_netlist -by_verilog_file 
eco_netlist -compare_module_subsets 
eco_netlist -compare_pg (Include PG objects into comparison)
eco_netlist -compare_physical_only_cells 
eco_netlist -compare_target_modules 
eco_netlist -cross_physical_hierarchy 
eco_netlist -extract_timing_eco_changes 
eco_netlist -golden_lib 
eco_netlist -working_block 
eco_netlist -working_lib 
eco_netlist -write_changes 
eco_netlist -write_changes_per_module 
eco_netlist -write_summary 
eco_update_supply_net -cells (List of cells)
edit_block
edit_ems_rule -message (Message template text)
edit_ems_rule -name (Name of the rule)
edit_ems_rule -parameters (Definition of parameters)
edit_ems_rule -severity (Type of the rule - Error, Warning or Information)
edit_module
edm
enable_debug_msg
ensemble
entry
error_info
estimate_timing -force_user_corner (Use current corner delays for back-annotation)
estimate_timing -host_options 
estimate_timing -nets (List of nets for incremental timing estimation)
estimate_timing -optimized_blocks 
estimate_timing -pins (List of pins or ports for incremental timing estimation)
eval_with_undo -atomic (Name to assign to this set of commands)
eval_with_undo -disable (Disable undo for this set of commands)
even_or_odd
event
exec_cp
exit
expand_bus
expand_if_gvar_is_array
expand_objects -offset (expand offset)
expand_objects -side (expand side (default is all): 
expand_outline -design (Top design for finding objects)
expand_outline -force (Force read)
expand_outline -keep (Keep outline design open)
expand_outline -no_def (Prevent reading of DEF file)
expand_outline -strip (File path prefixes to remove)
explore_logic_hierarchy -cell (logic hierarchy)
explore_logic_hierarchy -collapse (Removes all module boundaries inside input's parent hierarchy and create the module boundary for the parent hierarchy)
explore_logic_hierarchy -create_module_boundary 
explore_logic_hierarchy -expand (Expands the sub-logical hierarchies of the input hierarchies)
explore_logic_hierarchy -force (Force to expand current hierarchy even if it has no connectivity.)
explore_logic_hierarchy -name (Name of the new virtual group)
explore_logic_hierarchy -organize (Origanizes cells outside the diearea)
explore_logic_hierarchy -output (File to output current module boundaries)
explore_logic_hierarchy -place (Places the hierarchy boundaries.)
explore_logic_hierarchy -rectangular (Places the hierarchy boundaries as rectangles.)
explore_logic_hierarchy -remove (Removes module boundaries related to the input hierarchies)
explore_logic_hierarchy -threshold 
explore_logic_hierarchy -use_existing_placement 
explore_logic_hierarchy -utilization 
explore_logic_hierarchy -virtual_group 
explore_logic_hierarchy -virtual_ungroup 
export_advanced_technology_rules -exclude_lib_cells 
exprs
extract_post
extract_pre
extract_star
fclego
fclego_hier
fcommand
filter_collection -nocase (Case insensitive string match)
filter_collection -regexp (Operators =~ and !~ use regular expressions)
find_clock_name_and_frequency
find_objects -direction (port direction: 
find_objects -exact (disable pattern match mode)
find_objects -leaf_only (only leaf elements)
find_objects -non_leaf (only non-leaf elements)
find_objects -object_type (object type: 
find_objects -pattern (pattern to search)
find_objects -transitive (applies to descendants of the elements)
fix_bs_nlib
fix_min_libraries
fix_module_name
fix_placement_color_mask
fix_signal_em -nets (List of nets)
flatLappend
flatLinsert
flip_objects -anchor (anchor point: 
flip_objects -flip (flip axis: 
flip_objects -x (x coordinate of vertical line to flip about)
flip_objects -y (y coordinate of horizontal line to flip about)
flow_checker
flow_lib_setup
focus
font
foreach_in_collection
frame
fs
fusion_reports
fusion_save_stage
ga
generate_net_pattern -apply (apply net pattern to the design)
generate_net_pattern -output (output net pattern to a file)
generate_net_pattern -route_mode (route mode)
generate_sadp_tracks -auto_fill 
generate_sadp_tracks -color (Specifies the mask pattern for the track pattern: 
generate_sadp_tracks -count 
generate_sadp_tracks -create_pg_route (Specifies whether to create pg_route if netname in the track_rule match pg_net)
generate_sadp_tracks -exact (Specifies whether to start track_pattern from given start_point or friendly location based on floorplan)
generate_sadp_tracks -layer (Specifies the layer to use the tracks created by the track_rule)
generate_sadp_tracks -pitch 
generate_sadp_tracks -rule_name 
generate_sadp_tracks -start (Specifies the location of the first track may start)
generate_sadp_tracks -stop (Specifies the location of the last track must stop)
generate_structural_raw_rpt
generate_structural_raw_rpt_for_unit
getTerminatedProcess
get_abstract_type
get_abutted_clock_nets
get_antenna_rule_names -library (The library to get the antenna rules from)
get_antenna_rule_names -mode (Get the antenna rules with the given mode set: 
get_app_option_value -block (Get options on this block)
get_app_option_value -details (Get detailed information about the option)
get_app_option_value -name (Option name)
get_app_option_value -system_default (Get the system-default value for the option)
get_app_option_value -user_default (Get the user-default value for the option)
get_app_options -block (Only include options explicitly set on the block)
get_app_options -global (Only include the global scoped options that are explicitly set)
get_app_options -non_default (Only include the options whose value is different from the default)
get_app_options -quiet (Suppress all messages)
get_app_var -default (Get the default value)
get_app_var -details (Get additional variable information)
get_app_var -list (Return list of variables matching pattern)
get_app_var -only_changed_vars (Only returned changed variables (ignored unless -list specified))
get_attribute -class (class name; for compatibility: 
get_attribute -name (Attribute name)
get_attribute -objects (List of collections of objects)
get_attribute -quiet (Suppress error messages)
get_attribute -value_list (Always return result as a list)
get_block_objects -block (Name or collection of the top block)
get_block_objects -filter (Filter collection with 'expression')
get_block_objects -quiet (Suppress all messages)
get_blocks -all (Match open and closed blocks)
get_blocks -exact (Wildcards are considered as plain characters)
get_blocks -expect (Expect exactly this many matching objects: 
get_blocks -expect_at_least 
get_blocks -expect_each_pattern_matches 
get_blocks -explicit (Only match explicitly opened blocks)
get_blocks -filter (Filter collection with 'expression')
get_blocks -hierarchical (Search level-by-level in current block)
get_blocks -implicit (Only match implicitly opened blocks)
get_blocks -lib_cells (Find lib cell blocks also)
get_blocks -nocase (Perform case-insensitive matching)
get_blocks -of_objects 
get_blocks -open (Only match open blocks)
get_blocks -quiet (Suppress all messages)
get_blocks -regexp (Patterns are full regular expressions)
get_bound_shapes -at (Search point)
get_bound_shapes -design (Top design for finding objects)
get_bound_shapes -exact (Wildcards are considered as plain characters)
get_bound_shapes -expect (Expect exactly this many matching objects: 
get_bound_shapes -expect_at_least 
get_bound_shapes -expect_each_pattern_matches 
get_bound_shapes -filter (Filter collection with 'expression')
get_bound_shapes -hierarchical (Get bound shapes in the full  	                   hierarchy below)
get_bound_shapes -intersect (Search intersecting Rect or 	          polygon)
get_bound_shapes -nocase (Perform case-insensitive matching)
get_bound_shapes -of_objects 
get_bound_shapes -quiet (Suppress all messages)
get_bound_shapes -regexp (Patterns are full regular expressions)
get_bound_shapes -touching (Search within and touching Rect or 	          polygon)
get_bound_shapes -within (Search within Rect or polygon)
get_bounds -at (Search point)
get_bounds -design (Top design for finding objects)
get_bounds -exact (Wildcards are considered as plain characters)
get_bounds -expect (Expect exactly this many matching objects: 
get_bounds -expect_at_least 
get_bounds -expect_each_pattern_matches 
get_bounds -filter (Filter collection with 'expression')
get_bounds -hierarchical (Get bounds in the full hierarchy 	                     below)
get_bounds -intersect (Search intersecting Rect or 	          polygon)
get_bounds -nocase (Perform case-insensitive matching)
get_bounds -of_objects 
get_bounds -quiet (Suppress all messages)
get_bounds -regexp (Patterns are full regular expressions)
get_bounds -touching (Search within and touching Rect or 	          polygon)
get_bounds -within (Search within Rect or polygon)
get_budgets -all_pin_constraints (Get all constraints for budgeted pins)
get_budgets -all_pin_data (Get all path data for budgeted pins)
get_budgets -all_pins (Get all budgeted pins)
get_budgets -all_segments (Get all segment names)
get_budgets -blocks (Get block cells being budgeted)
get_budgets -clocks (Get budget clocks)
get_budgets -fanin_cone 
get_budgets -fanin_segments 
get_budgets -fanout_cone 
get_budgets -fanout_segments 
get_budgets -filter (Filter collection with 'expression')
get_budgets -input (Apply only to specified input pins)
get_budgets -of_pin 
get_budgets -output (Apply only to specified output pins)
get_budgets -path_types (Get budget path types)
get_budgets -pin (Get budgeted pin)
get_budgets -pin_constraints (Get constraints for a budgeted pin)
get_budgets -pin_data (Get path data for a budgeted pin)
get_bundles -design (Top design for finding objects)
get_bundles -exact (Wildcards are considered as plain characters)
get_bundles -expect (Expect exactly this many matching objects: 
get_bundles -expect_at_least 
get_bundles -expect_each_pattern_matches 
get_bundles -filter (Filter collection with 'expression')
get_bundles -nocase (Perform case-insensitive matching)
get_bundles -of_objects 
get_bundles -quiet (Suppress all messages)
get_bundles -regexp (Patterns are full regular expressions)
get_busplans -filter (Filter collection with 'expression')
get_busplans -of_object 
get_busplans -quiet (Suppress all messages)
get_cell -at (Search point)
get_cell -design (Top design for finding objects)
get_cell -exact (Wildcards are considered as plain characters)
get_cell -expect (Expect exactly this many matching objects: 
get_cell -expect_at_least 
get_cell -expect_each_pattern_matches 
get_cell -filter (Filter collection with 'expression')
get_cell -hierarchical (Search level-by-level in current instance)
get_cell -hsc (Separator character (default is /): 
get_cell -intersect (Search intersecting Rect or 	          polygon)
get_cell -nocase (Perform case-insensitive matching)
get_cell -of_objects 
get_cell -physical_context (Search physically; default is logically)
get_cell -quiet (Suppress all messages)
get_cell -regexp (Patterns are full regular expressions)
get_cell -touching (Search within and touching Rect or 	          polygon)
get_cell -within (Search within Rect or polygon)
get_cells -at (Search point)
get_cells -design (Top design for finding objects)
get_cells -exact (Wildcards are considered as plain characters)
get_cells -expect (Expect exactly this many matching objects: 
get_cells -expect_at_least 
get_cells -expect_each_pattern_matches 
get_cells -filter (Filter collection with 'expression')
get_cells -hierarchical (Search level-by-level in current instance)
get_cells -hsc (Separator character (default is /): 
get_cells -intersect (Search intersecting Rect or 	          polygon)
get_cells -nocase (Perform case-insensitive matching)
get_cells -of_objects 
get_cells -physical_context (Search physically; default is logically)
get_cells -quiet (Suppress all messages)
get_cells -regexp (Patterns are full regular expressions)
get_cells -touching (Search within and touching Rect or 	          polygon)
get_cells -within (Search within Rect or polygon)
get_cells_of_scan_chain -chain (scan chain name)
get_clock_balance_groups -design (Top design for finding objects)
get_clock_balance_groups -exact (Wildcards are considered as plain characters)
get_clock_balance_groups -expect (Expect exactly this many matching objects: 
get_clock_balance_groups -expect_at_least 
get_clock_balance_groups -expect_each_pattern_matches 
get_clock_balance_groups -filter (Filter collection with 'expression')
get_clock_balance_groups -mode (Mode for finding objects)
get_clock_balance_groups -nocase (Perform case-insensitive matching)
get_clock_balance_groups -of_objects 
get_clock_balance_groups -quiet (Suppress all messages)
get_clock_balance_groups -regexp (Patterns are full regular expressions)
get_clock_boundary_cell
get_clock_driving_cell
get_clock_group_groups
get_clock_groups -design (Top design for finding objects)
get_clock_groups -exact (Wildcards are considered as plain characters)
get_clock_groups -expect (Expect exactly this many matching objects: 
get_clock_groups -expect_at_least 
get_clock_groups -expect_each_pattern_matches 
get_clock_groups -filter (Filter collection with 'expression')
get_clock_groups -mode (Mode for finding objects)
get_clock_groups -nocase (Perform case-insensitive matching)
get_clock_groups -of_objects 
get_clock_groups -quiet (Suppress all messages)
get_clock_groups -regexp (Patterns are full regular expressions)
get_clock_skew_groups -design (Top design for finding objects)
get_clock_skew_groups -exact (Wildcards are considered as plain characters)
get_clock_skew_groups -expect (Expect exactly this many matching objects: 
get_clock_skew_groups -expect_at_least 
get_clock_skew_groups -expect_each_pattern_matches 
get_clock_skew_groups -filter (Filter collection with 'expression')
get_clock_skew_groups -mode (Mode for finding objects)
get_clock_skew_groups -nocase (Perform case-insensitive matching)
get_clock_skew_groups -of_objects 
get_clock_skew_groups -quiet (Suppress all messages)
get_clock_skew_groups -regexp (Patterns are full regular expressions)
get_clock_tree_pins -assign_to_variable 
get_clock_tree_pins -clocks (List of clocks)
get_clock_tree_pins -corner 
get_clock_tree_pins -expect (Expect exactly this many matching objects: Value >= 0)
get_clock_tree_pins -expect_at_least 
get_clock_tree_pins -filter 
get_clock_tree_pins -from (include pins on paths starting from these pins)
get_clock_tree_pins -groups_from 
get_clock_tree_pins -index_range 
get_clock_tree_pins -metrics 
get_clock_tree_pins -mode (do not consider any scenario unless it incorporates one of the specified modes )
get_clock_tree_pins -of_objects 
get_clock_tree_pins -quiet (quiet mode)
get_clock_tree_pins -scan_all_hierarchical_pins 
get_clock_tree_pins -scenario 
get_clock_tree_pins -sort_by 
get_clock_tree_pins -through 
get_clock_tree_pins -to (include pins on paths ending at these pins)
get_clock_tree_pins -total (add up the known results and assign the result to this variable)
get_clock_tree_pins -unique_cells (if two or more pins are on the same cell, return only one of the pins)
get_clock_tree_pins -unique_nets (if two or more pins are on the same net, return only one of the pins)
get_clock_tree_pins -value_for_undefined_attributes 
get_clock_tree_pins -verbose (verbose mode. Report information about the pins returned.)
get_clocks -design (Top design for finding objects)
get_clocks -exact (Wildcards are considered as plain characters)
get_clocks -expect (Expect exactly this many matching objects: 
get_clocks -expect_at_least 
get_clocks -expect_each_pattern_matches 
get_clocks -filter (Filter collection with 'expression')
get_clocks -mode (Mode for finding objects)
get_clocks -nocase (Perform case-insensitive matching)
get_clocks -quiet (Suppress all messages)
get_clocks -regexp (Patterns are full regular expressions)
get_command_option_values -command (get option values for this command)
get_command_option_values -current (get current option values if available)
get_command_option_values -default (get default option values if available)
get_constraint_file_by_keyword
get_constraint_groups -design (Top design for finding objects)
get_constraint_groups -exact (Wildcards are considered as plain characters)
get_constraint_groups -expect (Expect exactly this many matching objects: 
get_constraint_groups -expect_at_least 
get_constraint_groups -expect_each_pattern_matches 
get_constraint_groups -filter (Filter collection with 'expression')
get_constraint_groups -hierarchical (Get constraint groups in full hierarchy below)
get_constraint_groups -nocase (Perform case-insensitive matching)
get_constraint_groups -of_objects 
get_constraint_groups -quiet (Suppress all messages)
get_constraint_groups -regexp (Patterns are full regular expressions)
get_constraint_groups -type (Constraint group type: 
get_core_area -design (Top design for finding objects)
get_corners -design (Top design for finding objects)
get_corners -exact (Wildcards are considered as plain characters)
get_corners -expect (Expect exactly this many matching objects: 
get_corners -expect_at_least 
get_corners -expect_each_pattern_matches 
get_corners -filter (Filter collection with 'expression')
get_corners -nocase (Perform case-insensitive matching)
get_corners -quiet (Suppress all messages)
get_corners -regexp (Patterns are full regular expressions)
get_cputime -all (Get cpu time for this process and children)
get_cputime -format (Format for returned value)
get_cputime -verbose (Report cpu and elapsed time)
get_current_ems_database
get_current_mismatch_config
get_date
get_defined_attributes -application (Only display application defined attributes)
get_defined_attributes -class (Get attributes for this class: 
get_defined_attributes -details (Get detailed information on a specific attribute)
get_defined_attributes -return_classes (Return valid class names)
get_defined_attributes -user (Only display user defined attributes)
get_defined_commands -details (Get detailed information on specific command or group)
get_defined_commands -groups (Search groups rather than commands)
get_density_rules -exact (Wildcards are considered as plain characters)
get_density_rules -expect (Expect exactly this many matching objects: 
get_density_rules -expect_at_least 
get_density_rules -expect_each_pattern_matches 
get_density_rules -filter (Filter collection with 'expression')
get_density_rules -library (Library for finding objects, default is current library's tech)
get_density_rules -nocase (Perform case-insensitive matching)
get_density_rules -of_objects 
get_density_rules -quiet (Suppress all messages)
get_density_rules -regexp (Patterns are full regular expressions)
get_density_rules -tech (Tech for finding objects, default is current library's tech)
get_description_from_help
get_design_checks -exact (Wildcards are considered as plain characters)
get_design_checks -expect (Expect exactly this many matching objects: 
get_design_checks -expect_at_least 
get_design_checks -expect_each_pattern_matches 
get_design_checks -filter (Filter collection with 'expression')
get_design_checks -nocase (Perform case-insensitive matching)
get_design_checks -of_objects 
get_design_checks -quiet (Suppress all messages)
get_design_checks -regexp (Patterns are full regular expressions)
get_design_rules -exact (Wildcards are considered as plain characters)
get_design_rules -expect (Expect exactly this many matching objects: 
get_design_rules -expect_at_least 
get_design_rules -expect_each_pattern_matches 
get_design_rules -filter (Filter collection with 'expression')
get_design_rules -library (Library for finding objects, default is current library's tech)
get_design_rules -nocase (Perform case-insensitive matching)
get_design_rules -of_objects 
get_design_rules -quiet (Suppress all messages)
get_design_rules -regexp (Patterns are full regular expressions)
get_design_rules -tech (Tech for finding objects, default is current library's tech)
get_designs -exact (Wildcards are considered as plain characters)
get_designs -expect (Expect exactly this many matching objects: 
get_designs -expect_at_least 
get_designs -expect_each_pattern_matches 
get_designs -filter (Filter collection with 'expression')
get_designs -hierarchical (Search level-by-level in current design)
get_designs -nocase (Perform case-insensitive matching)
get_designs -quiet (Suppress all messages)
get_designs -regexp (Patterns are full regular expressions)
get_die_area
get_die_area2
get_domain_elements
get_drc_error_data -all (Match open and closed error data)
get_drc_error_data -exact (Wildcards are considered as plain characters)
get_drc_error_data -expect (Expect exactly this many matching objects: 
get_drc_error_data -expect_at_least 
get_drc_error_data -expect_each_pattern_matches 
get_drc_error_data -filter (Filter collection with 'expression')
get_drc_error_data -nocase (Perform case-insensitive matching)
get_drc_error_data -of_objects 
get_drc_error_data -quiet (Suppress all messages)
get_drc_error_data -regexp (Patterns are full regular expressions)
get_drc_error_types -error_data 
get_drc_error_types -exact (Wildcards are considered as plain characters)
get_drc_error_types -expect (Expect exactly this many matching objects: 
get_drc_error_types -expect_at_least 
get_drc_error_types -expect_each_pattern_matches 
get_drc_error_types -filter (Filter collection with 'expression')
get_drc_error_types -nocase (Perform case-insensitive matching)
get_drc_error_types -of_objects 
get_drc_error_types -quiet (Suppress all messages)
get_drc_error_types -regexp (Patterns are full regular expressions)
get_drc_errors -boundary (Region boundary from which to get errors)
get_drc_errors -error_data 
get_drc_errors -exact (Wildcards are considered as plain characters)
get_drc_errors -expect (Expect exactly this many matching objects: 
get_drc_errors -expect_at_least 
get_drc_errors -expect_each_pattern_matches 
get_drc_errors -filter (Filter collection with 'expression')
get_drc_errors -nocase (Perform case-insensitive matching)
get_drc_errors -of_objects 
get_drc_errors -quiet (Suppress all messages)
get_drc_errors -regexp (Patterns are full regular expressions)
get_eco_bus_buffer_patterns
get_edit_groups -at (Search point)
get_edit_groups -design (Top design for finding objects)
get_edit_groups -exact (Wildcards are considered as plain characters)
get_edit_groups -expect (Expect exactly this many matching objects: 
get_edit_groups -expect_at_least 
get_edit_groups -expect_each_pattern_matches 
get_edit_groups -filter (Filter collection with 'expression')
get_edit_groups -hierarchical (Get edit groups in the full 	                   hierarchy below)
get_edit_groups -intersect (Search intersecting Rect or 	          polygon)
get_edit_groups -nocase (Perform case-insensitive matching)
get_edit_groups -of_objects 
get_edit_groups -quiet (Suppress all messages)
get_edit_groups -regexp (Patterns are full regular expressions)
get_edit_groups -touching (Search within and touching Rect or 	          polygon)
get_edit_groups -within (Search within Rect or polygon)
get_edit_setting -auto_display_hidden (automatically display hidden objects)
get_edit_setting -expand_hit_blockage (expand hit type blockage)
get_edit_setting -expand_hit_constraint 
get_edit_setting -expand_hit_macro_cell 
get_edit_setting -hierarchical_routing 
get_edit_setting -honor_ndr (honor non-default routing rules)
get_edit_setting -ignore_locked (ignore the locked flag and modify locked objects)
get_edit_setting -keep_pin_on_edge (keep pin on parent edge)
get_edit_setting -pin_layer_policy (layer policy while moving pins on the edge)
get_edit_setting -select_center_line (allow wire center line selection)
get_edit_setting -select_center_vertex 
get_edit_setting -select_edge (allow object edge selection)
get_edit_setting -select_partial_object 
get_edit_setting -select_vertex (allow object vertex selection)
get_edit_setting -self_intersection (allow shape self intersection)
get_edit_setting -specified_pin_layer (pin layer when layer policy is set to 'specified')
get_edit_setting -update_color_mask (update wires color mask to match associated tracks)
get_edit_setting -update_floorplan (update floorplan when cell boundary is changed)
get_edrc_setting -check_drc (check drc for editing)
get_edrc_setting -dpt_odd_cycle (check dpt odd cycle)
get_edrc_setting -dpt_precolor (check dpt color violation)
get_edrc_setting -enclosed_via_spacing_rule 
get_edrc_setting -end_of_line_spacing_rule 
get_edrc_setting -filter_same_net_spacing 
get_edrc_setting -general_via_spacing_rule 
get_edrc_setting -honor_ndr (honor non-default routing rules)
get_edrc_setting -max_error_limit (maximum numbers of error to report)
get_edrc_setting -max_processing_time (maximum time for drc checking (in sec))
get_edrc_setting -max_shape_limit (maximum number of shapes to check)
get_edrc_setting -metal_span_spacing_rule 
get_edrc_setting -metal_width_rule (check metal width rules)
get_edrc_setting -minimum_edge_rule (check minumum edge design rule)
get_edrc_setting -minimum_length_and_area_rule 
get_edrc_setting -rdl_acute_angle_rule 
get_edrc_setting -rdl_right_angle_rule 
get_edrc_setting -show_error_browser (show error browser when detecting errors)
get_edrc_setting -via_density_rule (check via density design rule)
get_edrc_setting -via_enclosure_rule (check via enclosure rules)
get_ems_databases -exact (Wildcards are considered as plain characters)
get_ems_databases -expect (Expect exactly this many matching objects: 
get_ems_databases -expect_at_least 
get_ems_databases -expect_each_pattern_matches 
get_ems_databases -filter (Filter collection with 'expression')
get_ems_databases -nocase (Perform case-insensitive matching)
get_ems_databases -of_objects 
get_ems_databases -quiet (Suppress all messages)
get_ems_databases -regexp (Patterns are full regular expressions)
get_ems_rules -exact (Wildcards are considered as plain characters)
get_ems_rules -expect (Expect exactly this many matching objects: 
get_ems_rules -expect_at_least 
get_ems_rules -expect_each_pattern_matches 
get_ems_rules -filter (Filter collection with 'expression')
get_ems_rules -nocase (Perform case-insensitive matching)
get_ems_rules -of_objects 
get_ems_rules -quiet (Suppress all messages)
get_ems_rules -regexp (Patterns are full regular expressions)
get_estimated_wirelength -nets (Specifies the collection of nets for wire length estimation.)
get_exception_groups -filter (Filter collection with 'expression')
get_exceptions -design (Top design for finding objects)
get_exceptions -expect (Expect exactly this many matching objects: 
get_exceptions -expect_at_least 
get_exceptions -fall_from 
get_exceptions -fall_through 
get_exceptions -fall_to 
get_exceptions -filter (Filter collection with 'expression')
get_exceptions -from (List of path startpoints or clocks)
get_exceptions -quiet (Suppress all messages)
get_exceptions -rise_from 
get_exceptions -rise_through 
get_exceptions -rise_to 
get_exceptions -through 
get_exceptions -to (List of path endpoints or clocks)
get_fill_cells -design (Top design for finding objects)
get_fill_cells -exact (Wildcards are considered as plain characters)
get_fill_cells -expect (Expect exactly this many matching objects: 
get_fill_cells -expect_at_least 
get_fill_cells -expect_each_pattern_matches 
get_fill_cells -filter (Filter collection with 'expression')
get_fill_cells -hierarchical (Get fillCells in the full hierarchy below)
get_fill_cells -nocase (Perform case-insensitive matching)
get_fill_cells -quiet (Suppress all messages)
get_fill_cells -regexp (Patterns are full regular expressions)
get_filler_cell_from_icv_def
get_flat_cells -all (Include physical only cells)
get_flat_cells -design (Top design for finding objects)
get_flat_cells -exact (Wildcards are considered as plain characters)
get_flat_cells -expect (Expect exactly this many matching objects: 
get_flat_cells -expect_at_least 
get_flat_cells -expect_each_pattern_matches 
get_flat_cells -filter (Filter collection with 'expression')
get_flat_cells -hierarchical ( Search in multiple levels of physical hierarchy)
get_flat_cells -hsc (Separator character (default is /): 
get_flat_cells -nocase (Perform case-insensitive matching)
get_flat_cells -of_objects 
get_flat_cells -quiet (Suppress all messages)
get_flat_cells -regexp (Patterns are full regular expressions)
get_flat_nets -all (Include power and ground Nets)
get_flat_nets -design (Top design for finding objects)
get_flat_nets -exact (Wildcards are considered as plain characters)
get_flat_nets -expect (Expect exactly this many matching objects: 
get_flat_nets -expect_at_least 
get_flat_nets -expect_each_pattern_matches 
get_flat_nets -filter (Filter collection with 'expression')
get_flat_nets -hierarchical ( Search in multiple levels of physical hierarchy)
get_flat_nets -hsc (Separator character (default is /): 
get_flat_nets -nocase (Perform case-insensitive matching)
get_flat_nets -of_objects 
get_flat_nets -quiet (Suppress all messages)
get_flat_nets -regexp (Patterns are full regular expressions)
get_flat_pins -all (Include power and ground pins)
get_flat_pins -design (Top design for finding objects)
get_flat_pins -exact (Wildcards are considered as plain characters)
get_flat_pins -expect (Expect exactly this many matching objects: 
get_flat_pins -expect_at_least 
get_flat_pins -expect_each_pattern_matches 
get_flat_pins -filter (Filter collection with 'expression')
get_flat_pins -hierarchical ( Search in multiple levels of physical hierarchy)
get_flat_pins -hsc (Separator character (default is /): 
get_flat_pins -nocase (Perform case-insensitive matching)
get_flat_pins -of_objects 
get_flat_pins -quiet (Suppress all messages)
get_flat_pins -regexp (Patterns are full regular expressions)
get_generated_clock -design (Top design for finding objects)
get_generated_clock -exact (Wildcards are considered as plain characters)
get_generated_clock -expect (Expect exactly this many matching objects: 
get_generated_clock -expect_at_least 
get_generated_clock -expect_each_pattern_matches 
get_generated_clock -filter (Filter collection with 'expression')
get_generated_clock -mode (Mode for finding objects)
get_generated_clock -nocase (Perform case-insensitive matching)
get_generated_clock -quiet (Suppress all messages)
get_generated_clock -regexp (Patterns are full regular expressions)
get_generated_clocks -design (Top design for finding objects)
get_generated_clocks -exact (Wildcards are considered as plain characters)
get_generated_clocks -expect (Expect exactly this many matching objects: 
get_generated_clocks -expect_at_least 
get_generated_clocks -expect_each_pattern_matches 
get_generated_clocks -filter (Filter collection with 'expression')
get_generated_clocks -mode (Mode for finding objects)
get_generated_clocks -nocase (Perform case-insensitive matching)
get_generated_clocks -quiet (Suppress all messages)
get_generated_clocks -regexp (Patterns are full regular expressions)
get_grids -design (Top design for finding objects)
get_grids -exact (Wildcards are considered as plain characters)
get_grids -expect (Expect exactly this many matching objects: 
get_grids -expect_at_least 
get_grids -expect_each_pattern_matches 
get_grids -filter (Filter collection with 'expression')
get_grids -nocase (Perform case-insensitive matching)
get_grids -quiet (Suppress all messages)
get_grids -regexp (Patterns are full regular expressions)
get_grids -type (Type of grid to return: 
get_groups -design (Top design for finding objects)
get_groups -exact (Wildcards are considered as plain characters)
get_groups -expect (Expect exactly this many matching objects: 
get_groups -expect_at_least 
get_groups -expect_each_pattern_matches 
get_groups -filter (Filter collection with 'expression')
get_groups -nocase (Perform case-insensitive matching)
get_groups -of_objects 
get_groups -quiet (Suppress all messages)
get_groups -regexp (Patterns are full regular expressions)
get_hier
get_info
get_input_delays -corners (get input delays for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
get_input_delays -expect (Expect exactly this many matching objects: 
get_input_delays -expect_at_least 
get_input_delays -filter (Filter collection with 'expression')
get_input_delays -modes (get input delays for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
get_input_delays -of_objects (Get input delays of these ports or pins)
get_input_delays -quiet (Suppress all messages)
get_input_delays -scenarios 
get_io_guides -at (Search point)
get_io_guides -design (Top design for finding objects)
get_io_guides -exact (Wildcards are considered as plain characters)
get_io_guides -expect (Expect exactly this many matching objects: 
get_io_guides -expect_at_least 
get_io_guides -expect_each_pattern_matches 
get_io_guides -filter (Filter collection with 'expression')
get_io_guides -hierarchical (Get io guides in the full hierarchy 	                     below)
get_io_guides -intersect (Search intersecting Rect or 	          polygon)
get_io_guides -nocase (Perform case-insensitive matching)
get_io_guides -of_objects 
get_io_guides -quiet (Suppress all messages)
get_io_guides -regexp (Patterns are full regular expressions)
get_io_guides -touching (Search within and touching Rect or 	          polygon)
get_io_guides -within (Search within Rect or polygon)
get_io_rings -at (Search point)
get_io_rings -design (Top design for finding objects)
get_io_rings -exact (Wildcards are considered as plain characters)
get_io_rings -expect (Expect exactly this many matching objects: 
get_io_rings -expect_at_least 
get_io_rings -expect_each_pattern_matches 
get_io_rings -filter (Filter collection with 'expression')
get_io_rings -hierarchical (Get io rings in the full hierarchy 	                     below)
get_io_rings -intersect (Search intersecting Rect or 	          polygon)
get_io_rings -nocase (Perform case-insensitive matching)
get_io_rings -of_objects 
get_io_rings -quiet (Suppress all messages)
get_io_rings -regexp (Patterns are full regular expressions)
get_io_rings -touching (Search within and touching Rect or 	          polygon)
get_io_rings -within (Search within Rect or polygon)
get_keepout_margins -design (Top design for finding objects)
get_keepout_margins -exact (Wildcards are considered as plain characters)
get_keepout_margins -expect (Expect exactly this many matching objects: 
get_keepout_margins -expect_at_least 
get_keepout_margins -expect_each_pattern_matches 
get_keepout_margins -filter (Filter collection with 'expression')
get_keepout_margins -hierarchical (Get keepout margins in the full hierarchy below)
get_keepout_margins -nocase (Perform case-insensitive matching)
get_keepout_margins -of_objects 
get_keepout_margins -quiet (Suppress all messages)
get_keepout_margins -regexp (Patterns are full regular expressions)
get_keepout_margins -type (Get keepout margins of type: 
get_latch_loop_groups -loop_breakers_only (only loop breakers will be reported)
get_latch_loop_groups -of_objects 
get_layers -all_purposes (all purposes)
get_layers -exact (Wildcards are considered as plain characters)
get_layers -expect (Expect exactly this many matching objects: 
get_layers -expect_at_least 
get_layers -expect_each_pattern_matches 
get_layers -filter (Filter collection with 'expression')
get_layers -nocase (Perform case-insensitive matching)
get_layers -of_objects 
get_layers -quiet (Suppress all messages)
get_layers -regexp (Patterns are full regular expressions)
get_leaf
get_lib -all (Get both implicitly and expliclty opened libraries)
get_lib -exact (Wildcards are considered as plain characters)
get_lib -expect (Expect exactly this many matching objects: 
get_lib -expect_at_least 
get_lib -expect_each_pattern_matches 
get_lib -explicit (Get explicitly opened libraries)
get_lib -filter (Filter collection with 'expression')
get_lib -implicit (Get implicitly opened libraries)
get_lib -nocase (Perform case-insensitive matching)
get_lib -of_objects 
get_lib -quiet (Suppress all messages)
get_lib -regexp (Patterns are full regular expressions)
get_lib_cell -exact (Wildcards are considered as plain characters)
get_lib_cell -expect (Expect exactly this many matching objects: 
get_lib_cell -expect_at_least 
get_lib_cell -expect_each_pattern_matches 
get_lib_cell -filter (Filter collection with 'expression')
get_lib_cell -hsc (Separator character (default is /): 
get_lib_cell -include_subcells (Include lib_cells from sub-level hierarchy)
get_lib_cell -nocase (Perform case-insensitive matching)
get_lib_cell -of_objects 
get_lib_cell -quiet (Suppress all messages)
get_lib_cell -regexp (Patterns are full regular expressions)
get_lib_cells -exact (Wildcards are considered as plain characters)
get_lib_cells -expect (Expect exactly this many matching objects: 
get_lib_cells -expect_at_least 
get_lib_cells -expect_each_pattern_matches 
get_lib_cells -filter (Filter collection with 'expression')
get_lib_cells -hsc (Separator character (default is /): 
get_lib_cells -include_subcells (Include lib_cells from sub-level hierarchy)
get_lib_cells -nocase (Perform case-insensitive matching)
get_lib_cells -of_objects 
get_lib_cells -quiet (Suppress all messages)
get_lib_cells -regexp (Patterns are full regular expressions)
get_lib_pin -all (Include all lib pins, such as power/ground)
get_lib_pin -at (Search point)
get_lib_pin -exact (Wildcards are considered as plain characters)
get_lib_pin -expect (Expect exactly this many matching objects: 
get_lib_pin -expect_at_least 
get_lib_pin -expect_each_pattern_matches 
get_lib_pin -filter (Filter collection with 'expression')
get_lib_pin -hsc (Separator character (default is /): 
get_lib_pin -intersect (Search intersecting Rect or 	          polygon)
get_lib_pin -nocase (Perform case-insensitive matching)
get_lib_pin -of_objects 
get_lib_pin -quiet (Suppress all messages)
get_lib_pin -regexp (Patterns are full regular expressions)
get_lib_pin -touching (Search within and touching Rect or 	          polygon)
get_lib_pin -within (Search within Rect or polygon)
get_lib_pins -all (Include all lib pins, such as power/ground)
get_lib_pins -at (Search point)
get_lib_pins -exact (Wildcards are considered as plain characters)
get_lib_pins -expect (Expect exactly this many matching objects: 
get_lib_pins -expect_at_least 
get_lib_pins -expect_each_pattern_matches 
get_lib_pins -filter (Filter collection with 'expression')
get_lib_pins -hsc (Separator character (default is /): 
get_lib_pins -intersect (Search intersecting Rect or 	          polygon)
get_lib_pins -nocase (Perform case-insensitive matching)
get_lib_pins -of_objects 
get_lib_pins -quiet (Suppress all messages)
get_lib_pins -regexp (Patterns are full regular expressions)
get_lib_pins -touching (Search within and touching Rect or 	          polygon)
get_lib_pins -within (Search within Rect or polygon)
get_lib_timing_arcs -expect (Expect exactly this many matching objects: 
get_lib_timing_arcs -expect_at_least 
get_lib_timing_arcs -filter (Filter collection with 'expression')
get_lib_timing_arcs -from (From lib pins)
get_lib_timing_arcs -of_objects 
get_lib_timing_arcs -quiet (Suppress all messages)
get_lib_timing_arcs -to (To lib pins)
get_libs -all (Get both implicitly and expliclty opened libraries)
get_libs -exact (Wildcards are considered as plain characters)
get_libs -expect (Expect exactly this many matching objects: 
get_libs -expect_at_least 
get_libs -expect_each_pattern_matches 
get_libs -explicit (Get explicitly opened libraries)
get_libs -filter (Filter collection with 'expression')
get_libs -implicit (Get implicitly opened libraries)
get_libs -nocase (Perform case-insensitive matching)
get_libs -of_objects 
get_libs -quiet (Suppress all messages)
get_libs -regexp (Patterns are full regular expressions)
get_license -quantity (Quantity)
get_licenses -quantity (Quantity)
get_matching_types -design (Top design for finding objects)
get_matching_types -exact (Wildcards are considered as plain characters)
get_matching_types -expect (Expect exactly this many matching objects: 
get_matching_types -expect_at_least 
get_matching_types -expect_each_pattern_matches 
get_matching_types -filter (Filter collection with 'expression')
get_matching_types -nocase (Perform case-insensitive matching)
get_matching_types -of_objects 
get_matching_types -quiet (Suppress all messages)
get_matching_types -regexp (Patterns are full regular expressions)
get_mem
get_message_ids -type (Filter ids based on type: 
get_message_info -error_count (Return error count)
get_message_info -id (Get information about a message in list format)
get_message_info -info_count (Return info count)
get_message_info -limit (Get limit for a message)
get_message_info -occurrences (Get occurrences of a message)
get_message_info -suppressed (Get count of suppressions for a message)
get_message_info -warning_count (Return warning count)
get_mib_objects -add (include original selected pins and/or cells in returned mib objects)
get_mib_objects -quiet (suppress all messages)
get_mismatch_objects -exact (Wildcards are considered as plain characters)
get_mismatch_objects -expect (Expect exactly this many matching objects: 
get_mismatch_objects -expect_at_least 
get_mismatch_objects -expect_each_pattern_matches 
get_mismatch_objects -filter (Filter collection with 'expression')
get_mismatch_objects -mismatch_type 
get_mismatch_objects -nocase (Perform case-insensitive matching)
get_mismatch_objects -of_objects 
get_mismatch_objects -quiet (Suppress all messages)
get_mismatch_objects -regexp (Patterns are full regular expressions)
get_mismatch_objects -repair_status (Shows mismatches with specified repaired state: 
get_mismatch_types -exact (Wildcards are considered as plain characters)
get_mismatch_types -expect (Expect exactly this many matching objects: 
get_mismatch_types -expect_at_least 
get_mismatch_types -expect_each_pattern_matches 
get_mismatch_types -filter (Filter collection with 'expression')
get_mismatch_types -nocase (Perform case-insensitive matching)
get_mismatch_types -quiet (Suppress all messages)
get_mismatch_types -regexp (Patterns are full regular expressions)
get_modes -design (Top design for finding objects)
get_modes -exact (Wildcards are considered as plain characters)
get_modes -expect (Expect exactly this many matching objects: 
get_modes -expect_at_least 
get_modes -expect_each_pattern_matches 
get_modes -filter (Filter collection with 'expression')
get_modes -nocase (Perform case-insensitive matching)
get_modes -quiet (Suppress all messages)
get_modes -regexp (Patterns are full regular expressions)
get_modules -design (Design object or name)
get_modules -exact (Wildcards are considered as plain characters)
get_modules -expect (Expect exactly this many matching objects: 
get_modules -expect_at_least 
get_modules -expect_each_pattern_matches 
get_modules -filter (Filter collection with 'expression')
get_modules -nocase (Perform case-insensitive matching)
get_modules -quiet (Suppress all messages)
get_modules -regexp (Patterns are full regular expressions)
get_multisource_clock_sink_groups -exact (Wildcards are considered as plain characters)
get_multisource_clock_sink_groups -expect (Expect exactly this many matching objects: 
get_multisource_clock_sink_groups -expect_at_least 
get_multisource_clock_sink_groups -expect_each_pattern_matches 
get_multisource_clock_sink_groups -filter (Filter collection with 'expression')
get_multisource_clock_sink_groups -nocase (Perform case-insensitive matching)
get_multisource_clock_sink_groups -of_objects 
get_multisource_clock_sink_groups -quiet (Suppress all messages)
get_multisource_clock_sink_groups -regexp (Patterns are full regular expressions)
get_net -boundary_type (Which nets of hierarchical pins: 
get_net -design (Top design for finding objects)
get_net -exact (Wildcards are considered as plain characters)
get_net -expect (Expect exactly this many matching objects: 
get_net -expect_at_least 
get_net -expect_each_pattern_matches 
get_net -filter (Filter collection with 'expression')
get_net -hierarchical (Search level-by-level in current instance)
get_net -hsc (Separator character (default is /): 
get_net -include_shielded (Include shielded nets in search with -of_object with shapes input)
get_net -nocase (Perform case-insensitive matching)
get_net -of_objects 
get_net -physical_context (Search physically; default is logically)
get_net -quiet (Suppress all messages)
get_net -regexp (Patterns are full regular expressions)
get_net -segments (Return all global segments for given nets)
get_net -shielded_only (Return shielded nets only in search with -of_object with shapes input)
get_net -top_net_of_hierarchical_group 
get_net_buses -design (Top design for finding objects)
get_net_buses -exact (Wildcards are considered as plain characters)
get_net_buses -expect (Expect exactly this many matching objects: 
get_net_buses -expect_at_least 
get_net_buses -expect_each_pattern_matches 
get_net_buses -filter (Filter collection with 'expression')
get_net_buses -hierarchical (Search level-by-level in current instance)
get_net_buses -nocase (Perform case-insensitive matching)
get_net_buses -of_objects 
get_net_buses -physical_context (Search physically; default is logically)
get_net_buses -quiet (Suppress all messages)
get_net_buses -regexp (Patterns are full regular expressions)
get_net_estimation_rules -filter (Filter collection with 'expression')
get_net_estimation_rules -quiet (Suppress all messages)
get_nets -boundary_type (Which nets of hierarchical pins: 
get_nets -design (Top design for finding objects)
get_nets -exact (Wildcards are considered as plain characters)
get_nets -expect (Expect exactly this many matching objects: 
get_nets -expect_at_least 
get_nets -expect_each_pattern_matches 
get_nets -filter (Filter collection with 'expression')
get_nets -hierarchical (Search level-by-level in current instance)
get_nets -hsc (Separator character (default is /): 
get_nets -include_shielded (Include shielded nets in search with -of_object with shapes input)
get_nets -nocase (Perform case-insensitive matching)
get_nets -of_objects 
get_nets -physical_context (Search physically; default is logically)
get_nets -quiet (Suppress all messages)
get_nets -regexp (Patterns are full regular expressions)
get_nets -segments (Return all global segments for given nets)
get_nets -shielded_only (Return shielded nets only in search with -of_object with shapes input)
get_nets -top_net_of_hierarchical_group 
get_non_abutted_clock_pins
get_object_name
get_object_occurrences -quiet (Suppress all messages)
get_objects_by_location -at (Search point)
get_objects_by_location -classes 
get_objects_by_location -design (Top design for finding objects)
get_objects_by_location -expect (Expect exactly this many matching objects: 
get_objects_by_location -expect_at_least 
get_objects_by_location -filter (Filter collection with 'expression')
get_objects_by_location -hierarchical (Search physical objects in the 	                             full hierarchy below)
get_objects_by_location -include_fill_shapes (Include fill shapes in search)
get_objects_by_location -intersect (Search intersecting Rect or 	          polygon)
get_objects_by_location -quiet (Suppress all messages)
get_objects_by_location -touching (Search within and touching Rect or 	          polygon)
get_objects_by_location -within (Search within Rect or polygon)
get_options_from_help
get_options_from_man
get_output_delays -corners (get output delays for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
get_output_delays -expect (Expect exactly this many matching objects: 
get_output_delays -expect_at_least 
get_output_delays -filter (Filter collection with 'expression')
get_output_delays -modes (get output delays for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
get_output_delays -of_objects (Get output delays of these ports or pins)
get_output_delays -quiet (Suppress all messages)
get_output_delays -scenarios 
get_overlap_blockages -design (Top design for finding objects)
get_overlap_blockages -exact (Wildcards are considered as plain characters)
get_overlap_blockages -expect (Expect exactly this many matching objects: 
get_overlap_blockages -expect_at_least 
get_overlap_blockages -expect_each_pattern_matches 
get_overlap_blockages -filter (Filter collection with 'expression')
get_overlap_blockages -hierarchical (Get overlap blockages in the full 	                     hierarchy below)
get_overlap_blockages -nocase (Perform case-insensitive matching)
get_overlap_blockages -of_objects 
get_overlap_blockages -quiet (Suppress all messages)
get_overlap_blockages -regexp (Patterns are full regular expressions)
get_parasitic_techs -exact (Wildcards are considered as plain characters)
get_parasitic_techs -expect (Expect exactly this many matching objects: 
get_parasitic_techs -expect_at_least 
get_parasitic_techs -expect_each_pattern_matches 
get_parasitic_techs -filter (Filter collection with 'expression')
get_parasitic_techs -library (Library)
get_parasitic_techs -nocase (Perform case-insensitive matching)
get_parasitic_techs -of_objects 
get_parasitic_techs -quiet (Suppress all messages)
get_parasitic_techs -regexp (Patterns are full regular expressions)
get_path_group -design (Top design for finding objects)
get_path_group -exact (Wildcards are considered as plain characters)
get_path_group -expect (Expect exactly this many matching objects: 
get_path_group -expect_at_least 
get_path_group -expect_each_pattern_matches 
get_path_group -filter (Filter collection with 'expression')
get_path_group -mode (Mode for finding objects)
get_path_group -nocase (Perform case-insensitive matching)
get_path_group -quiet (Suppress all messages)
get_path_group -regexp (Patterns are full regular expressions)
get_path_groups -design (Top design for finding objects)
get_path_groups -exact (Wildcards are considered as plain characters)
get_path_groups -expect (Expect exactly this many matching objects: 
get_path_groups -expect_at_least 
get_path_groups -expect_each_pattern_matches 
get_path_groups -filter (Filter collection with 'expression')
get_path_groups -mode (Mode for finding objects)
get_path_groups -nocase (Perform case-insensitive matching)
get_path_groups -quiet (Suppress all messages)
get_path_groups -regexp (Patterns are full regular expressions)
get_pg_regions -at (Search point)
get_pg_regions -design (Top design for finding objects)
get_pg_regions -exact (Wildcards are considered as plain characters)
get_pg_regions -expect (Expect exactly this many matching objects: 
get_pg_regions -expect_at_least 
get_pg_regions -expect_each_pattern_matches 
get_pg_regions -filter (Filter collection with 'expression')
get_pg_regions -intersect (Search intersecting Rect or 	          polygon)
get_pg_regions -nocase (Perform case-insensitive matching)
get_pg_regions -of_objects 
get_pg_regions -quiet (Suppress all messages)
get_pg_regions -regexp (Patterns are full regular expressions)
get_pg_regions -touching (Search within and touching Rect or 	          polygon)
get_pg_regions -within (Search within Rect or polygon)
get_pin -at (Search point)
get_pin -design (Top design for finding objects)
get_pin -exact (Wildcards are considered as plain characters)
get_pin -expect (Expect exactly this many matching objects: 
get_pin -expect_at_least 
get_pin -expect_each_pattern_matches 
get_pin -filter (Filter collection with 'expression')
get_pin -hierarchical (Search level-by-level in current instance)
get_pin -hsc (Separator character (default is /): 
get_pin -intersect (Search intersecting Rect or 	          polygon)
get_pin -leaf (Get leaf/global pins of nets with -of_objects)
get_pin -nocase (Perform case-insensitive matching)
get_pin -of_objects 
get_pin -physical_context (Search physically; default is logically)
get_pin -quiet (Suppress all messages)
get_pin -regexp (Patterns are full regular expressions)
get_pin -touching (Search within and touching Rect or 	          polygon)
get_pin -within (Search within Rect or polygon)
get_pin_blockages -at (Search point)
get_pin_blockages -design (Top design for finding objects)
get_pin_blockages -exact (Wildcards are considered as plain characters)
get_pin_blockages -expect (Expect exactly this many matching objects: 
get_pin_blockages -expect_at_least 
get_pin_blockages -expect_each_pattern_matches 
get_pin_blockages -filter (Filter collection with 'expression')
get_pin_blockages -hierarchical (Get pin blockages in the full 	                   hierarchy below)
get_pin_blockages -intersect (Search intersecting Rect or 	          polygon)
get_pin_blockages -nocase (Perform case-insensitive matching)
get_pin_blockages -of_objects 
get_pin_blockages -quiet (Suppress all messages)
get_pin_blockages -regexp (Patterns are full regular expressions)
get_pin_blockages -touching (Search within and touching Rect or 	          polygon)
get_pin_blockages -within (Search within Rect or polygon)
get_pin_guides -at (Search point)
get_pin_guides -design (Top design for finding objects)
get_pin_guides -exact (Wildcards are considered as plain characters)
get_pin_guides -expect (Expect exactly this many matching objects: 
get_pin_guides -expect_at_least 
get_pin_guides -expect_each_pattern_matches 
get_pin_guides -filter (Filter collection with 'expression')
get_pin_guides -hierarchical (Get pin guides in the full hierarchy 	                     below)
get_pin_guides -intersect (Search intersecting Rect or 	          polygon)
get_pin_guides -nocase (Perform case-insensitive matching)
get_pin_guides -of_objects 
get_pin_guides -quiet (Suppress all messages)
get_pin_guides -regexp (Patterns are full regular expressions)
get_pin_guides -touching (Search within and touching Rect or 	          polygon)
get_pin_guides -within (Search within Rect or polygon)
get_pins -at (Search point)
get_pins -design (Top design for finding objects)
get_pins -exact (Wildcards are considered as plain characters)
get_pins -expect (Expect exactly this many matching objects: 
get_pins -expect_at_least 
get_pins -expect_each_pattern_matches 
get_pins -filter (Filter collection with 'expression')
get_pins -hierarchical (Search level-by-level in current instance)
get_pins -hsc (Separator character (default is /): 
get_pins -intersect (Search intersecting Rect or 	          polygon)
get_pins -leaf (Get leaf/global pins of nets with -of_objects)
get_pins -nocase (Perform case-insensitive matching)
get_pins -of_objects 
get_pins -physical_context (Search physically; default is logically)
get_pins -quiet (Suppress all messages)
get_pins -regexp (Patterns are full regular expressions)
get_pins -touching (Search within and touching Rect or 	          polygon)
get_pins -within (Search within Rect or polygon)
get_placement_blockages -at (Search point)
get_placement_blockages -design (Top design for finding objects)
get_placement_blockages -exact (Wildcards are considered as plain characters)
get_placement_blockages -expect (Expect exactly this many matching objects: 
get_placement_blockages -expect_at_least 
get_placement_blockages -expect_each_pattern_matches 
get_placement_blockages -filter (Filter collection with 'expression')
get_placement_blockages -hierarchical (Get placement blockages in the 	                    full hierarchy below)
get_placement_blockages -intersect (Search intersecting Rect or 	          polygon)
get_placement_blockages -nocase (Perform case-insensitive matching)
get_placement_blockages -quiet (Suppress all messages)
get_placement_blockages -regexp (Patterns are full regular expressions)
get_placement_blockages -touching (Search within and touching Rect or 	          polygon)
get_placement_blockages -within (Search within Rect or polygon)
get_port -at (Search point)
get_port -design (Top design for finding objects)
get_port -exact (Wildcards are considered as plain characters)
get_port -expect (Expect exactly this many matching objects: 
get_port -expect_at_least 
get_port -expect_each_pattern_matches 
get_port -filter (Filter collection with 'expression')
get_port -intersect (Search intersecting Rect or 	          polygon)
get_port -nocase (Perform case-insensitive matching)
get_port -of_objects 
get_port -physical_context (Search physically; default is logically)
get_port -quiet (Suppress all messages)
get_port -regexp (Patterns are full regular expressions)
get_port -touching (Search within and touching Rect or 	          polygon)
get_port -within (Search within Rect or polygon)
get_port_antenna_property -layer (Layer name)
get_port_antenna_property -port (Port name)
get_port_buses -design (Top design for finding objects)
get_port_buses -exact (Wildcards are considered as plain characters)
get_port_buses -expect (Expect exactly this many matching objects: 
get_port_buses -expect_at_least 
get_port_buses -expect_each_pattern_matches 
get_port_buses -filter (Filter collection with 'expression')
get_port_buses -nocase (Perform case-insensitive matching)
get_port_buses -of_objects 
get_port_buses -physical_context (Search physically; default is logically)
get_port_buses -quiet (Suppress all messages)
get_port_buses -regexp (Patterns are full regular expressions)
get_ports -at (Search point)
get_ports -design (Top design for finding objects)
get_ports -exact (Wildcards are considered as plain characters)
get_ports -expect (Expect exactly this many matching objects: 
get_ports -expect_at_least 
get_ports -expect_each_pattern_matches 
get_ports -filter (Filter collection with 'expression')
get_ports -intersect (Search intersecting Rect or 	          polygon)
get_ports -nocase (Perform case-insensitive matching)
get_ports -of_objects 
get_ports -physical_context (Search physically; default is logically)
get_ports -quiet (Suppress all messages)
get_ports -regexp (Patterns are full regular expressions)
get_ports -touching (Search within and touching Rect or 	          polygon)
get_ports -within (Search within Rect or polygon)
get_power_clock_scaling -scenarios (Scenarios for which to get the clock scaling values)
get_power_derate -internal (Get derate for internal power)
get_power_derate -leakage (Get derate for leakage power)
get_power_derate -scenarios 
get_power_derate -switching (Get derate for switching power)
get_power_derate -user (Get explicitly set derates)
get_power_domain_elements
get_power_domains -exact (Wildcards are considered as plain characters)
get_power_domains -expect (Expect exactly this many matching objects: 
get_power_domains -expect_at_least 
get_power_domains -expect_each_pattern_matches 
get_power_domains -filter (Filter collection with 'expression')
get_power_domains -hierarchical (Search level-by-level in current instance)
get_power_domains -nocase (Perform case-insensitive matching)
get_power_domains -of_objects 
get_power_domains -quiet (Suppress all messages)
get_power_domains -regexp (Patterns are full regular expressions)
get_power_group -default (to query default power group)
get_power_group -user (to query user-specified power group)
get_power_group_objects
get_power_strategies -domain (Name of the power domain)
get_power_strategies -exact (Wildcards are considered as plain characters)
get_power_strategies -expect (Expect exactly this many matching objects: 
get_power_strategies -expect_at_least 
get_power_strategies -expect_each_pattern_matches 
get_power_strategies -filter (Filter collection with 'expression')
get_power_strategies -nocase (Perform case-insensitive matching)
get_power_strategies -quiet (Suppress all messages)
get_power_strategies -regexp (Patterns are full regular expressions)
get_power_switch_patterns -exact (Wildcards are considered as plain characters)
get_power_switch_patterns -expect (Expect exactly this many matching objects: 
get_power_switch_patterns -expect_at_least 
get_power_switch_patterns -expect_each_pattern_matches 
get_power_switch_patterns -filter (Filter collection with 'expression')
get_power_switch_patterns -nocase (Perform case-insensitive matching)
get_power_switch_patterns -quiet (Suppress all messages)
get_power_switch_patterns -regexp (Patterns are full regular expressions)
get_pr_rules -exact (Wildcards are considered as plain characters)
get_pr_rules -expect (Expect exactly this many matching objects: 
get_pr_rules -expect_at_least 
get_pr_rules -expect_each_pattern_matches 
get_pr_rules -filter (Filter collection with 'expression')
get_pr_rules -library (Library for finding objects, default is current library's tech)
get_pr_rules -nocase (Perform case-insensitive matching)
get_pr_rules -of_objects 
get_pr_rules -quiet (Suppress all messages)
get_pr_rules -regexp (Patterns are full regular expressions)
get_pr_rules -tech (Tech for finding objects, default is current library's tech)
get_proc_source
get_proc_source_history
get_purposes -exact (Wildcards are considered as plain characters)
get_purposes -expect (Expect exactly this many matching objects: 
get_purposes -expect_at_least 
get_purposes -expect_each_pattern_matches 
get_purposes -filter (Filter collection with 'expression')
get_purposes -nocase (Perform case-insensitive matching)
get_purposes -of_objects 
get_purposes -quiet (Suppress all messages)
get_purposes -regexp (Patterns are full regular expressions)
get_related_supply_nets -expand (Do not merge and combine duplicated related supply nets)
get_related_supply_nets -expect (Expect exactly this many matching objects: 
get_related_supply_nets -expect_at_least 
get_related_supply_nets -filter (Filter collection with 'expression')
get_related_supply_nets -ground (Query related ground supply net)
get_related_supply_nets -in_block_upf (Query related supply net defined in block UPF)
get_related_supply_nets -quiet (Suppress all messages)
get_routes_between_objects -quiet (suppress all messages)
get_routing_blockages -at (Search point)
get_routing_blockages -design (Top design for finding objects)
get_routing_blockages -exact (Wildcards are considered as plain characters)
get_routing_blockages -expect (Expect exactly this many matching objects: 
get_routing_blockages -expect_at_least 
get_routing_blockages -expect_each_pattern_matches 
get_routing_blockages -filter (Filter collection with 'expression')
get_routing_blockages -hierarchical (Get routing blockages in the full 	                     hierarchy below)
get_routing_blockages -include_lib_cell (Include lib_cell shapes in search)
get_routing_blockages -intersect (Search intersecting Rect or 	          polygon)
get_routing_blockages -nocase (Perform case-insensitive matching)
get_routing_blockages -of_objects 
get_routing_blockages -quiet (Suppress all messages)
get_routing_blockages -regexp (Patterns are full regular expressions)
get_routing_blockages -touching (Search within and touching Rect or 	          polygon)
get_routing_blockages -within (Search within Rect or polygon)
get_routing_corridor_shapes -at (Search point)
get_routing_corridor_shapes -design (Top design for finding objects)
get_routing_corridor_shapes -exact (Wildcards are considered as plain characters)
get_routing_corridor_shapes -expect (Expect exactly this many matching objects: 
get_routing_corridor_shapes -expect_at_least 
get_routing_corridor_shapes -expect_each_pattern_matches 
get_routing_corridor_shapes -filter (Filter collection with 'expression')
get_routing_corridor_shapes -hierarchical (Get routing corridor shapes in the 	                     full hierarchy below)
get_routing_corridor_shapes -intersect (Search intersecting Rect or 	          polygon)
get_routing_corridor_shapes -nocase (Perform case-insensitive matching)
get_routing_corridor_shapes -of_objects 
get_routing_corridor_shapes -quiet (Suppress all messages)
get_routing_corridor_shapes -regexp (Patterns are full regular expressions)
get_routing_corridor_shapes -touching (Search within and touching Rect or 	          polygon)
get_routing_corridor_shapes -within (Search within Rect or polygon)
get_routing_corridors -at (Search point)
get_routing_corridors -design (Top design for finding objects)
get_routing_corridors -exact (Wildcards are considered as plain characters)
get_routing_corridors -expect (Expect exactly this many matching objects: 
get_routing_corridors -expect_at_least 
get_routing_corridors -expect_each_pattern_matches 
get_routing_corridors -filter (Filter collection with 'expression')
get_routing_corridors -hierarchical (Get routing corridors in the full 	                    hierarchy below)
get_routing_corridors -intersect (Search intersecting Rect or 	          polygon)
get_routing_corridors -nocase (Perform case-insensitive matching)
get_routing_corridors -of_objects 
get_routing_corridors -quiet (Suppress all messages)
get_routing_corridors -regexp (Patterns are full regular expressions)
get_routing_corridors -touching (Search within and touching Rect or 	          polygon)
get_routing_corridors -within (Search within Rect or polygon)
get_routing_guides -at (Search point)
get_routing_guides -design (Top design for finding objects)
get_routing_guides -exact (Wildcards are considered as plain characters)
get_routing_guides -expect (Expect exactly this many matching objects: 
get_routing_guides -expect_at_least 
get_routing_guides -expect_each_pattern_matches 
get_routing_guides -filter (Filter collection with 'expression')
get_routing_guides -hierarchical (Get routing guides in the full hierarchy below)
get_routing_guides -intersect (Search intersecting Rect or 	          polygon)
get_routing_guides -nocase (Perform case-insensitive matching)
get_routing_guides -quiet (Suppress all messages)
get_routing_guides -regexp (Patterns are full regular expressions)
get_routing_guides -touching (Search within and touching Rect or 	          polygon)
get_routing_guides -within (Search within Rect or polygon)
get_routing_rules -design (Top design for finding objects)
get_routing_rules -exact (Wildcards are considered as plain characters)
get_routing_rules -expect (Expect exactly this many matching objects: 
get_routing_rules -expect_at_least 
get_routing_rules -expect_each_pattern_matches 
get_routing_rules -filter (Filter collection with 'expression')
get_routing_rules -nocase (Perform case-insensitive matching)
get_routing_rules -of_objects 
get_routing_rules -quiet (Suppress all messages)
get_routing_rules -regexp (Patterns are full regular expressions)
get_rp_blockages -design (Top design for finding objects)
get_rp_blockages -exact (Wildcards are considered as plain characters)
get_rp_blockages -expect (Expect exactly this many matching objects: 
get_rp_blockages -expect_at_least 
get_rp_blockages -expect_each_pattern_matches 
get_rp_blockages -filter (Filter collection with 'expression')
get_rp_blockages -hierarchical (Get hierarchical relative placement groups's blockages)
get_rp_blockages -nocase (Perform case-insensitive matching)
get_rp_blockages -of_objects 
get_rp_blockages -quiet (Suppress all messages)
get_rp_blockages -regexp (Patterns are full regular expressions)
get_rp_group_objects -blockage (Get rp_blockages of given RP groups)
get_rp_group_objects -cell (Get cells of given RP groups)
get_rp_group_objects -column 
get_rp_group_objects -hierarchical (Get RP Objects(cells/rp_groups/rp_blockages recursively too.)
get_rp_group_objects -row (Get object of this RP row: 
get_rp_group_objects -rp_group (Get rp_groups of given RP groups)
get_rp_groups -design (Top design for finding objects)
get_rp_groups -exact (Wildcards are considered as plain characters)
get_rp_groups -expect (Expect exactly this many matching objects: 
get_rp_groups -expect_at_least 
get_rp_groups -expect_each_pattern_matches 
get_rp_groups -filter (Filter collection with 'expression')
get_rp_groups -hierarchical (Get hierarchical relative placement groups)
get_rp_groups -nocase (Perform case-insensitive matching)
get_rp_groups -of_objects 
get_rp_groups -quiet (Suppress all messages)
get_rp_groups -regexp (Patterns are full regular expressions)
get_rp_groups -top (Get top Level RP Group Only)
get_scan_chain_count
get_scenarios -corners (Get scenarios of these corners)
get_scenarios -exact (Wildcards are considered as plain characters)
get_scenarios -expect (Expect exactly this many matching objects: 
get_scenarios -expect_at_least 
get_scenarios -expect_each_pattern_matches 
get_scenarios -filter (Filter collection with 'expression')
get_scenarios -modes (Get scenarios of these modes)
get_scenarios -nocase (Perform case-insensitive matching)
get_scenarios -of_objects 
get_scenarios -quiet (Suppress all messages)
get_scenarios -regexp (Patterns are full regular expressions)
get_selection -count (Count objects that would be returned)
get_selection -create_slct_buses (Create selection buses instead of collections to return objects)
get_selection -design (Design to filter selection)
get_selection -fewer_than (Fewer objects would be returned)
get_selection -more_than (More objects would be returned)
get_selection -name (Name of selection bus)
get_selection -num (Return not more than this number of objects)
get_selection -slct_targets 
get_selection -slct_targets_operation 
get_selection -type (Types to filter selection)
get_selection -type_list (Count objects for each type of object that would be returned)
get_shapes -at (Search point)
get_shapes -design (Top design for finding objects)
get_shapes -exact (Wildcards are considered as plain characters)
get_shapes -expect (Expect exactly this many matching objects: 
get_shapes -expect_at_least 
get_shapes -expect_each_pattern_matches 
get_shapes -filter (Filter collection with 'expression')
get_shapes -hierarchical (Get shapes in the full hierarchy 	                     below)
get_shapes -include_fill (Include fill shapes in search)
get_shapes -include_lib_cell (Include lib_cell shapes in search)
get_shapes -include_shield (Include shielding shapes in search with -of_object with nets input)
get_shapes -intersect (Search intersecting Rect or 	          polygon)
get_shapes -nocase (Perform case-insensitive matching)
get_shapes -of_objects 
get_shapes -quiet (Suppress all messages)
get_shapes -regexp (Patterns are full regular expressions)
get_shapes -shield_only (Return shielding shapes only in search with -of_object with nets input)
get_shapes -touching (Search within and touching Rect or 	          polygon)
get_shapes -within (Search within Rect or polygon)
get_shaping_blockages -design (Top design for finding objects)
get_shaping_blockages -exact (Wildcards are considered as plain characters)
get_shaping_blockages -expect (Expect exactly this many matching objects: 
get_shaping_blockages -expect_at_least 
get_shaping_blockages -expect_each_pattern_matches 
get_shaping_blockages -filter (Filter collection with 'expression')
get_shaping_blockages -hierarchical (Get shaping blockages in the full 	                     hierarchy below)
get_shaping_blockages -nocase (Perform case-insensitive matching)
get_shaping_blockages -of_objects 
get_shaping_blockages -quiet (Suppress all messages)
get_shaping_blockages -regexp (Patterns are full regular expressions)
get_site_arrays -at (Search point)
get_site_arrays -design (Top design for finding objects)
get_site_arrays -exact (Wildcards are considered as plain characters)
get_site_arrays -expect (Expect exactly this many matching objects: 
get_site_arrays -expect_at_least 
get_site_arrays -expect_each_pattern_matches 
get_site_arrays -filter (Filter collection with 'expression')
get_site_arrays -hierarchical (Get site arrays in the full 	                     hierarchy below)
get_site_arrays -intersect (Search intersecting Rect or 	          polygon)
get_site_arrays -nocase (Perform case-insensitive matching)
get_site_arrays -of_objects 
get_site_arrays -quiet (Suppress all messages)
get_site_arrays -regexp (Patterns are full regular expressions)
get_site_arrays -touching (Search within and touching Rect or 	          polygon)
get_site_arrays -within (Search within Rect or polygon)
get_site_defs -exact (Wildcards are considered as plain characters)
get_site_defs -expect (Expect exactly this many matching objects: 
get_site_defs -expect_at_least 
get_site_defs -expect_each_pattern_matches 
get_site_defs -filter (Filter collection with 'expression')
get_site_defs -library (Library for finding objects, default is current library's tech)
get_site_defs -nocase (Perform case-insensitive matching)
get_site_defs -of_objects 
get_site_defs -quiet (Suppress all messages)
get_site_defs -regexp (Patterns are full regular expressions)
get_site_defs -tech (Tech for finding objects, default is current library's tech)
get_site_rows -at (Search point)
get_site_rows -design (Top design for finding objects)
get_site_rows -exact (Wildcards are considered as plain characters)
get_site_rows -expect (Expect exactly this many matching objects: 
get_site_rows -expect_at_least 
get_site_rows -expect_each_pattern_matches 
get_site_rows -filter (Filter collection with 'expression')
get_site_rows -hierarchical (Get site rows in the full hierarchy 	                     below)
get_site_rows -intersect (Search intersecting Rect or 	          polygon)
get_site_rows -nocase (Perform case-insensitive matching)
get_site_rows -of_objects 
get_site_rows -quiet (Suppress all messages)
get_site_rows -regexp (Patterns are full regular expressions)
get_site_rows -touching (Search within and touching Rect or 	          polygon)
get_site_rows -within (Search within Rect or polygon)
get_snap_setting -class (snap object class: 
get_snap_setting -cursor_edge (snap cursor to object edges)
get_snap_setting -edge_radius (edge search radius)
get_snap_setting -enabled (snapping state)
get_snap_setting -fix_orientation (fix cell orientation)
get_snap_setting -macro_by_color (snap macro by track coloring)
get_snap_setting -object_edge (snap object to object edges)
get_snap_setting -preferred_track (snap to preferred track only)
get_snap_setting -user_grid (current user grid)
get_supernets -design (Top design for finding objects)
get_supernets -exact (Wildcards are considered as plain characters)
get_supernets -expect (Expect exactly this many matching objects: 
get_supernets -expect_at_least 
get_supernets -expect_each_pattern_matches 
get_supernets -filter (Filter collection with 'expression')
get_supernets -hierarchical (Search level-by-level in current instance)
get_supernets -hsc (Separator character (default is /): 
get_supernets -nocase (Perform case-insensitive matching)
get_supernets -of_objects 
get_supernets -quiet (Suppress all messages)
get_supernets -regexp (Patterns are full regular expressions)
get_supply_nets -exact (Wildcards are considered as plain characters)
get_supply_nets -expect (Expect exactly this many matching objects: 
get_supply_nets -expect_at_least 
get_supply_nets -expect_each_pattern_matches 
get_supply_nets -filter (Filter collection with 'expression')
get_supply_nets -hierarchical (Search level-by-level in current instance)
get_supply_nets -nocase (Perform case-insensitive matching)
get_supply_nets -of_objects 
get_supply_nets -quiet (Suppress all messages)
get_supply_nets -regexp (Patterns are full regular expressions)
get_supply_nets -segments (Include all equivalent supply nets)
get_supply_nets -top_net_of_hierarchical_group 
get_supply_ports -exact (Wildcards are considered as plain characters)
get_supply_ports -exclude_power_switch 
get_supply_ports -expect (Expect exactly this many matching objects: 
get_supply_ports -expect_at_least 
get_supply_ports -expect_each_pattern_matches 
get_supply_ports -filter (Filter collection with 'expression')
get_supply_ports -hierarchical (Search level-by-level in current instance)
get_supply_ports -nocase (Perform case-insensitive matching)
get_supply_ports -of_objects 
get_supply_ports -quiet (Suppress all messages)
get_supply_ports -regexp (Patterns are full regular expressions)
get_supply_sets -exact (Wildcards are considered as plain characters)
get_supply_sets -expect (Expect exactly this many matching objects: 
get_supply_sets -expect_at_least 
get_supply_sets -expect_each_pattern_matches 
get_supply_sets -filter (Filter collection with 'expression')
get_supply_sets -nocase (Perform case-insensitive matching)
get_supply_sets -of_objects 
get_supply_sets -quiet (Suppress all messages)
get_supply_sets -regexp (Patterns are full regular expressions)
get_svf
get_switching_activity -corners (Get activity for specified corners)
get_switching_activity -fall (Fall toggle rate)
get_switching_activity -modes (Get activity for specified modes)
get_switching_activity -path_sources 
get_switching_activity -related_clock (Get related_clock for given object)
get_switching_activity -rise (Rise toggle rate)
get_switching_activity -scenarios (Get activity for specified scenarios)
get_switching_activity -state_condition 
get_techs -all (Get Tech objects from both implicitly and expliclty opened libraries)
get_techs -exact (Wildcards are considered as plain characters)
get_techs -expect (Expect exactly this many matching objects: 
get_techs -expect_at_least 
get_techs -expect_each_pattern_matches 
get_techs -filter (Filter collection with 'expression')
get_techs -nocase (Perform case-insensitive matching)
get_techs -of_objects 
get_techs -quiet (Suppress all messages)
get_techs -regexp (Patterns are full regular expressions)
get_terminals -at (Search point)
get_terminals -design (Top design for finding objects)
get_terminals -exact (Wildcards are considered as plain characters)
get_terminals -expect (Expect exactly this many matching objects: 
get_terminals -expect_at_least 
get_terminals -expect_each_pattern_matches 
get_terminals -filter (Filter collection with 'expression')
get_terminals -hierarchical (Get terminals in the full hierarchy 	                     below)
get_terminals -include_lib_cell (Include lib_cell shapes in search)
get_terminals -intersect (Search intersecting Rect or 	          polygon)
get_terminals -nocase (Perform case-insensitive matching)
get_terminals -of_objects 
get_terminals -quiet (Suppress all messages)
get_terminals -regexp (Patterns are full regular expressions)
get_terminals -touching (Search within and touching Rect or 	          polygon)
get_terminals -within (Search within Rect or polygon)
get_timing_arcs -design (Top design for finding objects)
get_timing_arcs -expect (Expect exactly this many matching objects: 
get_timing_arcs -expect_at_least 
get_timing_arcs -filter (Filter collection with 'expression')
get_timing_arcs -from (From pins or ports)
get_timing_arcs -of_objects 
get_timing_arcs -quiet (Suppress all messages)
get_timing_arcs -to (To pins or ports)
get_timing_paths -corners (use scenarios of these corners (default is all corners))
get_timing_paths -delay_type 
get_timing_paths -exception 
get_timing_paths -exclude 
get_timing_paths -fall_exclude 
get_timing_paths -fall_from 
get_timing_paths -fall_through 
get_timing_paths -fall_to 
get_timing_paths -from (List of path startpoints or clocks)
get_timing_paths -groups (List of path group names to report (default is all path groups))
get_timing_paths -include_hierarchical_pins 
get_timing_paths -max_paths (Maximum total paths to find: 
get_timing_paths -modes (use scenarios of these modes (default is all modes))
get_timing_paths -nworst (Number of paths per endpoint: 
get_timing_paths -path_type 
get_timing_paths -report_by (Path ordering criteria: 
get_timing_paths -rise_exclude 
get_timing_paths -rise_from 
get_timing_paths -rise_through 
get_timing_paths -rise_to 
get_timing_paths -scenarios 
get_timing_paths -slack_lesser_than 
get_timing_paths -sort_by (Sorting criteria: 
get_timing_paths -start_end_pair (List worst path per start-endpoint pair)
get_timing_paths -through 
get_timing_paths -to (List of path endpoints or clocks)
get_tmp_var
get_topological_constraints -exact (Wildcards are considered as plain characters)
get_topological_constraints -expect (Expect exactly this many matching objects: 
get_topological_constraints -expect_at_least 
get_topological_constraints -expect_each_pattern_matches 
get_topological_constraints -filter (Filter collection with 'expression')
get_topological_constraints -hierarchical (Get topological constraints in the full hierarchy below)
get_topological_constraints -nocase (Perform case-insensitive matching)
get_topological_constraints -of_objects 
get_topological_constraints -quiet (Suppress all messages)
get_topological_constraints -regexp (Patterns are full regular expressions)
get_topology_edges -design (Top design for finding objects)
get_topology_edges -exact (Wildcards are considered as plain characters)
get_topology_edges -expect (Expect exactly this many matching objects: 
get_topology_edges -expect_at_least 
get_topology_edges -expect_each_pattern_matches 
get_topology_edges -filter (Filter collection with 'expression')
get_topology_edges -hierarchical (Get topology_edges in the full hierarchy below)
get_topology_edges -nocase (Perform case-insensitive matching)
get_topology_edges -of_objects 
get_topology_edges -quiet (Suppress all messages)
get_topology_edges -regexp (Patterns are full regular expressions)
get_topology_nodes -design (Top design for finding objects)
get_topology_nodes -exact (Wildcards are considered as plain characters)
get_topology_nodes -expect (Expect exactly this many matching objects: 
get_topology_nodes -expect_at_least 
get_topology_nodes -expect_each_pattern_matches 
get_topology_nodes -filter (Filter collection with 'expression')
get_topology_nodes -hierarchical (Get topology_nodes in the full hierarchy below)
get_topology_nodes -nocase (Perform case-insensitive matching)
get_topology_nodes -of_objects 
get_topology_nodes -quiet (Suppress all messages)
get_topology_nodes -regexp (Patterns are full regular expressions)
get_track_capacity
get_tracks -at (Search point)
get_tracks -design (Top design for finding objects)
get_tracks -exact (Wildcards are considered as plain characters)
get_tracks -expect (Expect exactly this many matching objects: 
get_tracks -expect_at_least 
get_tracks -expect_each_pattern_matches 
get_tracks -filter (Filter collection with 'expression')
get_tracks -hierarchical (Get tracks in the full 	                      hierarchy below)
get_tracks -intersect (Search intersecting Rect or 	          polygon)
get_tracks -nocase (Perform case-insensitive matching)
get_tracks -of_objects 
get_tracks -quiet (Suppress all messages)
get_tracks -regexp (Patterns are full regular expressions)
get_tracks -touching (Search within and touching Rect or 	          polygon)
get_tracks -within (Search within Rect or polygon)
get_undo_info -all (Return information on all available markers)
get_undo_info -command (Command to return undo information on)
get_undo_info -current (Return information on the current marker)
get_undo_info -details (Return detailed information)
get_undo_info -name (Marker to return information on)
get_undo_info -system (Return information on system-created markers)
get_undo_info -user (Return information on user-created markers)
get_unix_variable
get_user_units -input (Get the user unit for data input)
get_user_units -numeric (Return numeric value; default is number plus symbol)
get_user_units -output (Get the user unit for data output)
get_user_units -type (Unit type: 
get_utilization_configurations -block (Block in which the configs are to be found)
get_utilization_configurations -exact (Wildcards are considered as plain characters)
get_utilization_configurations -expect (Expect exactly this many matching objects: 
get_utilization_configurations -expect_at_least 
get_utilization_configurations -expect_each_pattern_matches 
get_utilization_configurations -filter (Filter collection with 'expression')
get_utilization_configurations -nocase (Perform case-insensitive matching)
get_utilization_configurations -quiet (Suppress all messages)
get_utilization_configurations -regexp (Patterns are full regular expressions)
get_utilization_configurations -scope (Scope of the configuration: 
get_via_defs -design (Top design for finding objects)
get_via_defs -exact (Wildcards are considered as plain characters)
get_via_defs -expect (Expect exactly this many matching objects: 
get_via_defs -expect_at_least 
get_via_defs -expect_each_pattern_matches 
get_via_defs -filter (Filter collection with 'expression')
get_via_defs -library (Library for finding objects)
get_via_defs -nocase (Perform case-insensitive matching)
get_via_defs -of_objects 
get_via_defs -quiet (Suppress all messages)
get_via_defs -regexp (Patterns are full regular expressions)
get_via_defs -tech (Tech for finding object)
get_via_regions -at (Search point)
get_via_regions -design (Top design for finding objects)
get_via_regions -exact (Wildcards are considered as plain characters)
get_via_regions -expect (Expect exactly this many matching objects: 
get_via_regions -expect_at_least 
get_via_regions -expect_each_pattern_matches 
get_via_regions -filter (Filter collection with 'expression')
get_via_regions -intersect (Search intersecting Rect or 	          polygon)
get_via_regions -nocase (Perform case-insensitive matching)
get_via_regions -of_objects 
get_via_regions -quiet (Suppress all messages)
get_via_regions -regexp (Patterns are full regular expressions)
get_via_regions -touching (Search within and touching Rect or 	          polygon)
get_via_regions -within (Search within Rect or polygon)
get_via_rules -design (Top design for finding objects)
get_via_rules -exact (Wildcards are considered as plain characters)
get_via_rules -expect (Expect exactly this many matching objects: 
get_via_rules -expect_at_least 
get_via_rules -expect_each_pattern_matches 
get_via_rules -filter (Filter collection with 'expression')
get_via_rules -library (Library for finding objects)
get_via_rules -nocase (Perform case-insensitive matching)
get_via_rules -of_objects 
get_via_rules -quiet (Suppress all messages)
get_via_rules -regexp (Patterns are full regular expressions)
get_via_rules -tech (Tech for finding object)
get_vias -at (Search point)
get_vias -design (Top design for finding objects)
get_vias -exact (Wildcards are considered as plain characters)
get_vias -expect (Expect exactly this many matching objects: 
get_vias -expect_at_least 
get_vias -expect_each_pattern_matches 
get_vias -filter (Filter collection with 'expression')
get_vias -hierarchical (Get Vias in the full hierarchy below)
get_vias -include_lib_cell (Include lib_cell shapes in search)
get_vias -include_shield (Include shielding vias in search with -of_object with nets input)
get_vias -intersect (Search intersecting Rect or 	          polygon)
get_vias -nocase (Perform case-insensitive matching)
get_vias -of_objects 
get_vias -quiet (Suppress all messages)
get_vias -regexp (Patterns are full regular expressions)
get_vias -shield_only (Return shielding vias only in search with -of_object with nets input)
get_vias -touching (Search within and touching Rect or 	          polygon)
get_vias -within (Search within Rect or polygon)
get_view_switch_list -design (Design to get view switch list of)
get_view_switch_list -explicit (To get the view switch list that was explicitly set on the entity)
get_view_switch_list -global (To get the global view switch list)
get_view_switch_list -library (Library to get view switch list of)
get_virtual_connections -of_objects 
get_visa_clock_stamp_pin
get_voltage_area_rules -design (Top design for finding objects)
get_voltage_area_rules -exact (Wildcards are considered as plain characters)
get_voltage_area_rules -expect (Expect exactly this many matching objects: 
get_voltage_area_rules -expect_at_least 
get_voltage_area_rules -expect_each_pattern_matches 
get_voltage_area_rules -filter (Filter collection with 'expression')
get_voltage_area_rules -nocase (Perform case-insensitive matching)
get_voltage_area_rules -quiet (Suppress all messages)
get_voltage_area_rules -regexp (Patterns are full regular expressions)
get_voltage_area_shapes -at (Search point)
get_voltage_area_shapes -design (Top design for finding objects)
get_voltage_area_shapes -exact (Wildcards are considered as plain characters)
get_voltage_area_shapes -expect (Expect exactly this many matching objects: 
get_voltage_area_shapes -expect_at_least 
get_voltage_area_shapes -expect_each_pattern_matches 
get_voltage_area_shapes -filter (Filter collection with 'expression')
get_voltage_area_shapes -hierarchical (Get voltage area shapes in the full 	                     hierarchy below)
get_voltage_area_shapes -intersect (Search intersecting Rect or 	          polygon)
get_voltage_area_shapes -nocase (Perform case-insensitive matching)
get_voltage_area_shapes -of_objects 
get_voltage_area_shapes -quiet (Suppress all messages)
get_voltage_area_shapes -regexp (Patterns are full regular expressions)
get_voltage_area_shapes -touching (Search within and touching Rect or 	          polygon)
get_voltage_area_shapes -within (Search within Rect or polygon)
get_voltage_areas -at (Search point)
get_voltage_areas -design (Top design for finding objects)
get_voltage_areas -exact (Wildcards are considered as plain characters)
get_voltage_areas -expect (Expect exactly this many matching objects: 
get_voltage_areas -expect_at_least 
get_voltage_areas -expect_each_pattern_matches 
get_voltage_areas -filter (Filter collection with 'expression')
get_voltage_areas -hierarchical (Get flat voltage areas in the full 	                     hierarchy below)
get_voltage_areas -intersect (Search intersecting Rect or 	          polygon)
get_voltage_areas -nocase (Perform case-insensitive matching)
get_voltage_areas -of_objects 
get_voltage_areas -quiet (Suppress all messages)
get_voltage_areas -regexp (Patterns are full regular expressions)
get_voltage_areas -touching (Search within and touching Rect or 	          polygon)
get_voltage_areas -within (Search within Rect or polygon)
get_vsdc
get_working_design_stack -instance (Get current block instance within top hierarchy)
getenv
getsome_buffers
getvar -names (Returns the array indexes (similar to array names)
getvar -nosubst (Does not run subst on the return value)
getvar -quiet (Does not error when the var is not defined)
gh2
gh_cjb
glist_search_and_insert
gnb
gnnl
grab
greph
grid
group_cells -cell_name (Name of the cell created for the new hierarchy)
group_cells -module_name 
group_cells -phys_wrapper (Create wrapper around one hierarchical cell for design planning)
group_path -comment (User specified comment)
group_path -critical_range 
group_path -default (Move path into the default group)
group_path -fall_from 
group_path -fall_through 
group_path -fall_to 
group_path -from (List of path startpoints or clocks)
group_path -name (Name of the path group)
group_path -priority (level to increase priority of this group_path)
group_path -rise_from 
group_path -rise_through 
group_path -rise_to 
group_path -through 
group_path -to (List of path endpoints or clocks)
group_path -weight (Cost function weight: 
gs
gsn
gui_add_missing_vias -max_layer (maximum layer on which to create missing vias)
gui_add_missing_vias -min_layer (minimum layer on which to create missing vias)
gui_bin -attr (Attribute used for binning)
gui_bin -bar_brush (Brush to be used for bars)
gui_bin -bin_range (Width of value range per bin)
gui_bin -boundary (Use boundary value)
gui_bin -clct (Collection to be binned)
gui_bin -cmd (Tcl command computing value for binning)
gui_bin -create_slct_buses (Create selection buses instead of collections to return objects)
gui_bin -exact_binning (Use exact range for bins)
gui_bin -filter_cmd (Filter tcl command)
gui_bin -ignore_values (List of float values to ignore)
gui_bin -lower_bound (Lower bound for binning)
gui_bin -lower_bound_strict (Use lower bound as strict bound)
gui_bin -nice_level (Use boundaries with integral values)
gui_bin -numBin (Number of bins (DO NOT USE ANY MORE!!!!!))
gui_bin -num_bins (Number of bins)
gui_bin -overflow (Create overflow bin)
gui_bin -return_values (Return values of elements in result)
gui_bin -slct_targets 
gui_bin -slct_targets_operation 
gui_bin -small_is_good (Values smaller than the boundary are good (by default they are assumed bad))
gui_bin -underflow (Create underflow bin)
gui_bin -upper_bound (Upper bound for binning)
gui_bin -upper_bound_strict (Use upper bound as strict bound)
gui_bin -value_list 
gui_change_highlight -add (Highlight the specified objects)
gui_change_highlight -all_colors (The highlighting operation applies to all colors)
gui_change_highlight -collection (The objects affected by the highlighting operation)
gui_change_highlight -color (The color for the highlighting operation)
gui_change_highlight -remove (Unhighlight the specified objects)
gui_change_highlight -toggle (Toggle the highlight state of the specified objects)
gui_change_layer -layer (Layer to use)
gui_change_layer -object (Objects to change the layer of)
gui_change_via_def -via (Vias to change the via def)
gui_change_via_def -via_def (New simple via definition)
gui_change_via_size -columns (Number of columns)
gui_change_via_size -rows (Number of rows)
gui_change_via_size -via (Vias to change the number of row or columns)
gui_check_drc_errors -filter_same_net_spacing 
gui_check_drc_errors -honor_ndr (check ndr rules)
gui_check_drc_errors -layers (check shapes only on these layers)
gui_check_drc_errors -limit_area 
gui_check_drc_errors -max_error_limit (maximum number of errors to report)
gui_check_drc_errors -max_processing_time 
gui_check_drc_errors -max_shape_limit (maximum number of shapes to check.)
gui_check_drc_errors -of_objects 
gui_check_drc_errors -rules (rule name list: 
gui_check_drc_errors -show (show error browser)
gui_create_attrgroup -attr_list 
gui_create_attrgroup -class (name of design object)
gui_create_attrgroup -name (attribute group name)
gui_create_clock_graph -clct (Collection of objects)
gui_create_clock_graph -latency (Show latency graph)
gui_create_clock_graph -levelized (Show levelized graph)
gui_create_pref_category -category (name of category to create)
gui_create_pref_key -category (name of category)
gui_create_pref_key -description 
gui_create_pref_key -keep_value_if_exist (Keep current value if key exist)
gui_create_pref_key -key (name of key)
gui_create_pref_key -legal_value_list 
gui_create_pref_key -max (for integer and double types only)
gui_create_pref_key -min (for integer and double types only)
gui_create_pref_key -read_only (read-only preference)
gui_create_pref_key -save_on_exit 
gui_create_pref_key -string_to_int_map 
gui_create_pref_key -value (the value associated with the key)
gui_create_pref_key -value_type 
gui_create_schematic -clct (Collection of objects)
gui_create_schematic -size (Specify size {w h} of schematic window)
gui_create_task -default (set as default task)
gui_create_task -help_string (Help message for the task)
gui_create_task -icon (Name of icon file.)
gui_create_task -item_root (Task item root that to define )
gui_create_task -menu_string (Menu string for the task)
gui_create_task -name (Name of task to create.)
gui_create_task_item -item_root (Task item root in which to create the task item)
gui_create_task_item -name (The hierarchical name for the new task item)
gui_create_task_item -page (Name of the task assistant page to show for this task item)
gui_create_task_item -search_terms (Additional search terms for the task item)
gui_create_task_item -task (Name of the task in which this item is created)
gui_create_tk_palette_type -create_command (User initialization callback)
gui_create_tk_palette_type -dock_edge (Palette dock edge: 
gui_create_tk_palette_type -icon (Palette icon)
gui_create_tk_palette_type -title (Palette title)
gui_create_tk_palette_type -type (Palette type)
gui_create_tk_palette_type -window_types 
gui_create_vm -bot_exaggeration 
gui_create_vm -discrete (Set visual mode to be discrete and allow reordering of buckets)
gui_create_vm -float (Indicates that bucket contents have a floating point range)
gui_create_vm -help_topic (String for help topic)
gui_create_vm -icon (Set the icon file to be used for gui menus)
gui_create_vm -infotip (String for infotip)
gui_create_vm -mid_exaggeration 
gui_create_vm -name (Visual Mode name)
gui_create_vm -netfilter (Net connection filtering)
gui_create_vm -show_only_pins_of_nets 
gui_create_vm -title (String for title)
gui_create_vm -top_exaggeration 
gui_create_vm -update_cmd (Tcl command string to update vm contents)
gui_create_vm_objects
gui_create_vmbucket -above (Render bucket above this bucket)
gui_create_vmbucket -at (Render bucket at top or bottom: 
gui_create_vmbucket -below (Render bucket below this bucket)
gui_create_vmbucket -collection (Collection to provide bucket contents)
gui_create_vmbucket -color (Bucket color)
gui_create_vmbucket -exaggeration (Bucket min pixel exaggeration: 
gui_create_vmbucket -infotip (Infotip string)
gui_create_vmbucket -maxval (Bucket max val)
gui_create_vmbucket -minval (Bucket min val)
gui_create_vmbucket -name (Bucket name)
gui_create_vmbucket -netfilter (Net connection filtering)
gui_create_vmbucket -number (Bucket display number: 
gui_create_vmbucket -pattern (Bucket fill pattern)
gui_create_vmbucket -title (Bucket title)
gui_create_vmbucket -visible (Bucket visibility)
gui_create_vmbucket -vmname (Visual Mode name)
gui_delete_attrgroup -all (delete all groups)
gui_delete_attrgroup -class (name of design object)
gui_delete_attrgroup -name (attribute group name)
gui_edit_vmbucket_contents -add (Add to bucket)
gui_edit_vmbucket_contents -collection (Collection to edit bucket contents)
gui_edit_vmbucket_contents -name (Bucket name)
gui_edit_vmbucket_contents -remove (Remove from bucket)
gui_edit_vmbucket_contents -replace (Replace the current contents)
gui_edit_vmbucket_contents -vmname (Visual Mode name)
gui_eval_command -command (the command to execute and log)
gui_eval_command -echo (enables echo of the command and the result to the console (default is false))
gui_eval_command -history (enables appending the command into the command history (default is false))
gui_eval_command -honor_preview (enables honoring the preview flag set in a command dialog (default is false))
gui_eval_command -preview (preview the given command irregardless of the preview flag set in a dialog (default is false))
gui_eval_task_command -command (command to execute inside task assistant)
gui_eval_task_command -script (insert the command in the script editor (exclusive with -task))
gui_eval_task_command -task (task name to be added to MRU palette (exclusive with -script))
gui_exist_pref_category -category (preference category)
gui_exist_pref_key -category (preference category, use default category if not specified)
gui_exist_pref_key -key (preference key)
gui_get_bucket_option -bucket (Bucket name)
gui_get_bucket_option -default (Get the default value of the option)
gui_get_bucket_option -map (Visual/Map Mode name)
gui_get_bucket_option -option (Name of the option to be get)
gui_get_bucket_option_list -map (Visual/Map Mode name)
gui_get_clock_tree -clocks (clocks whose fanout or fanin cone is calculated.)
gui_get_clock_tree -from (the starting points of fanout or fanin cone.)
gui_get_clock_tree -trace_direction (trace direction must be one of 'forward' 'backward' or 'both'.)
gui_get_current_task
gui_get_highlight -all_colors (Get all highlighted objects.)
gui_get_highlight -color (Get only objects of this color.)
gui_get_highlight -more_than (Return 1 if more than specified number of objects.)
gui_get_highlight -return_select_bus (Return a selection bus instead of a collection.)
gui_get_highlight_options -all_colors (Show all valid highlight colors.)
gui_get_highlight_options -auto_cycle_color (Show whether color auto cycling is enabled.)
gui_get_highlight_options -current_color (Show the current highlight color.)
gui_get_layer_widths -current (get current layer values)
gui_get_layer_widths -default (get default layer values)
gui_get_layer_widths -layer (layer name)
gui_get_layer_widths -user (get user defined layer values)
gui_get_map_list
gui_get_map_option -default (Get the default value of the option)
gui_get_map_option -map (Visual/Map Mode name)
gui_get_map_option -option (Name of the option to be retrieved)
gui_get_map_option_list -map (Visual/Map Mode name)
gui_get_pref_keys -category (preference category)
gui_get_pref_value -category (name of category)
gui_get_pref_value -key (name of key)
gui_get_setting -list (When specified the list of settings is returned.)
gui_get_setting -setting (The name of the setting to get.)
gui_get_setting -window (The target window to apply this setting.)
gui_get_task_list
gui_get_vm -bot_exaggeration (Return the bottom bucket exaggeration)
gui_get_vm -buckets (Return bucket name list)
gui_get_vm -discrete (Return whether visual mode is discrete)
gui_get_vm -float (Return whether the visual mode buckets have a floating point range)
gui_get_vm -help_topic (Return help topic string)
gui_get_vm -icon_file (Return the gui menu icon file)
gui_get_vm -infotip (Return infotip string)
gui_get_vm -mid_exaggeration (Return the middle bucket exaggeration)
gui_get_vm -name (Visual Mode name)
gui_get_vm -netfilter (Return net connection filtering)
gui_get_vm -show_only_pins_of_nets 
gui_get_vm -title (Return title string)
gui_get_vm -top_exaggeration (Return the top bucket exaggeration)
gui_get_vm -update_cmd (Return update tcl cmd)
gui_get_vmbucket -collection (Collection to provide bucket contents)
gui_get_vmbucket -color (Return bucket color)
gui_get_vmbucket -exaggeration (Return bucket min pixel exaggeration)
gui_get_vmbucket -infotip (Return infotip string)
gui_get_vmbucket -maxval (Return bucket max val)
gui_get_vmbucket -minval (Return bucket min val)
gui_get_vmbucket -name (Bucket name)
gui_get_vmbucket -netfilter (Return net connection filtering)
gui_get_vmbucket -number (Return bucket display number)
gui_get_vmbucket -objcount (Returns the number of objects in the bucket)
gui_get_vmbucket -pattern (Return bucket fill pattern)
gui_get_vmbucket -title (Return bucket title)
gui_get_vmbucket -visible (Return initial visibility)
gui_get_vmbucket -vmname (Visual Mode name)
gui_get_window_ids -parent (Parent toplevel window id)
gui_get_window_ids -type (Window type id)
gui_get_window_pref_categories -window (Window id)
gui_get_window_pref_categories -window_type (Window type)
gui_get_window_pref_keys -category (Preference category)
gui_get_window_pref_keys -window (Window id)
gui_get_window_pref_keys -window_type (Window type)
gui_get_window_types -type (Restrict to toplevel or child view window types: 
gui_highlight_nets_of_selected -flylines (highlight flylines instead of shapes)
gui_list_attrgroups -all (all object classes)
gui_list_attrgroups -attr_list (list attributes only)
gui_list_attrgroups -class (class - name of design object)
gui_list_attrgroups -full (full tcl output format)
gui_list_attrgroups -name (attribute group name)
gui_list_attrgroups -tcl (tcl output format)
gui_load_area_net_connection_vm -area (coordinates of analysis region)
gui_load_area_net_connection_vm -hier (hierarchy)
gui_load_area_net_connection_vm -type (net types)
gui_load_cell_density_mm -area (region area the density is analysed.)
gui_load_hierarchy_vm -clear (clear the hierarchy visual mode)
gui_load_hierarchy_vm -hierarchical (Display map data hierarchically)
gui_load_hierarchy_vm -level (color hierarchical cells at level)
gui_load_hierarchy_vm -objects (color the collection of hierarchical cells)
gui_load_imported_path_pins_vm -clear (clear all buckets before importing)
gui_load_imported_path_pins_vm -timing_report 
gui_load_imported_path_pins_vm -timing_text (timing report text)
gui_load_path_analyzer_flylines
gui_load_pin_density_mm -area (region area the density is analysed.)
gui_load_rp_group_net_connectivity_vm -clct 
gui_load_rp_group_net_connectivity_vm -type (type of nets)
gui_load_rp_vm -cell_only (color cells in each RP group only)
gui_load_rp_vm -color (enum of color mode of RP Groups visual mode)
gui_load_rp_vm -num_colors (maximum number of colors, range: 5 to 20, default: 10)
gui_load_scan_chain_vm -chains 
gui_load_voltage_area_vm
gui_overlay_layout -add (Add this design as an overlay.)
gui_overlay_layout -brightness (Set the brightness for this overlay.)
gui_overlay_layout -design (The name of the design to overlay.)
gui_overlay_layout -remove (Remove this design as an overlay.)
gui_overlay_layout -window (The target window to apply this setting.)
gui_rail_map_options -backward_min_max 
gui_rail_map_options -backward_power_export 
gui_rail_map_options -backward_power_map 
gui_rail_map_options -build_scale (Scale build)
gui_rail_map_options -build_threads (Thread allowance for map to build: 0 - no threads, 1 - auto, >1 - max)
gui_rail_map_options -dep_mode (Deployment mode: pr1 (default), pr2)
gui_rail_map_options -enable_report 
gui_rail_map_options -mode (Update mode: auto, follow (default), preview, off)
gui_rail_map_options -preview_depth (Preview depth: 2 to 6 (default 5))
gui_rail_map_options -preview_display_focus 
gui_rail_map_options -preview_display_full 
gui_rail_map_options -preview_focus 
gui_rail_map_options -preview_focus_area 
gui_rail_map_options -preview_focus_depth 
gui_rail_map_options -preview_full (Enable full design preview (default true))
gui_rail_map_options -preview_limit (Total extracted nodes/edges count limit to switch to preview quality map)
gui_rail_map_options -preview_limit_3 (Total extracted nodes/edges count limit to switch to minimum quality preview)
gui_rail_map_options -preview_limit_4 (Total extracted nodes/edges count limit to switch to low quality preview)
gui_rail_map_options -preview_limit_5 (Total extracted nodes/edges count limit to switch to standard quality preview)
gui_rail_map_options -preview_limit_6 (Total extracted nodes/edges count limit to switch to high quality preview)
gui_rail_map_options -preview_report_focus 
gui_rail_map_options -preview_report_full 
gui_rail_map_options -report_footer 
gui_rail_map_options -report_header 
gui_rail_map_options -report_image (Image file format: png (default), jpg, bmp, tiff)
gui_rail_map_options -report_into_db 
gui_rail_map_options -report_legend 
gui_rail_map_options -report_map_file 
gui_rail_map_options -report_map_mark 
gui_rail_map_options -report_map_perf (Testing control)
gui_rail_map_options -report_path (Path for report files ("./RAIL_DATABASE/map_report" default))
gui_rail_map_options -report_path_current 
gui_rail_map_options -report_prefix 
gui_rail_map_options -report_result 
gui_rail_map_options -report_scale_focus 
gui_rail_map_options -report_scale_full 
gui_rail_map_options -report_summary 
gui_rail_map_options -report_verbose 
gui_rail_map_options -skip_floating 
gui_rail_map_options -skip_floating_export 
gui_rail_map_options -test_control (Testing control)
gui_rail_map_options -test_control2 (Testing control)
gui_rail_map_options -test_control3 (Testing control)
gui_read_timing_paths -blocks (Filter and adjust paths to given blocks.)
gui_read_timing_paths -cells (Filter paths to only paths with points in given cell collection.)
gui_read_timing_paths -file (Name of the input file from which to read the timing paths)
gui_read_timing_paths -report (Various summary reports on given paths file: 
gui_read_timing_paths -strict_validate (If validate errors occur, exit.)
gui_remove_pref_key -category (name of category)
gui_remove_pref_key -key (name of key)
gui_remove_vm -name (Visual Mode name)
gui_remove_vmbucket -all (Remove all visual mode buckets)
gui_remove_vmbucket -name (Bucket name)
gui_remove_vmbucket -vmname (Visual Mode name)
gui_report_task -file (Path of the file in which to output the report)
gui_report_task -item_root (Task item root on which to report)
gui_report_task -task (Name of the task on which to report)
gui_schematic_add_logic -new (Create new schematic.)
gui_schematic_add_logic -schematic (Schematic view to update (default: most recently active schematic).)
gui_schematic_add_logic -window (Top level window name to place new schematic (default: current window).)
gui_schematic_remove_logic -schematic (Schematic view to update (default: most recently active schematic).)
gui_select_bounds_of_selected
gui_select_bundles_of_selected
gui_select_cells_of_selected
gui_select_connected_net_shapes -cross_net (trace shapes across different nets)
gui_select_connected_net_shapes -hierarchical (trace nets across block boundaries)
gui_select_connected_rdl_net_shapes
gui_select_connections_of_selected
gui_select_constraint_groups_of_selected
gui_select_input_connections_of_selected
gui_select_macros_of_selected
gui_select_matching_types_of_selected
gui_select_mib_cells_of_selected
gui_select_mib_connections_of_selected
gui_select_net_buses_of_selected
gui_select_net_routing_of_selected
gui_select_net_shapes_of_selected
gui_select_net_vias_of_selected
gui_select_nets_of_selected -hierarchical (trace nets across block boundaries)
gui_select_objects_of_selected_edit_group
gui_select_output_connections_of_selected
gui_select_port_buses_of_selected
gui_select_ports_of_selected_power_supply_nets
gui_select_power_domains_of_selected
gui_select_primary_power_supply_nets_of_selected
gui_select_routing_corridors_of_selected
gui_select_rp_blockages_of_selected
gui_select_rp_groups_of_selected
gui_select_shapes_of_selected
gui_select_site_arrays_of_selected
gui_select_site_rows_of_selected
gui_select_supernets_of_selected
gui_select_terminals_of_selected
gui_select_topology_edges_of_selected
gui_select_topology_nodes_of_selected
gui_select_topology_of_selected
gui_select_tracks_of_selected
gui_select_vmbucket -add (Add vmbucket content to global selection)
gui_select_vmbucket -name (Name of visual mode bucket)
gui_select_vmbucket -remove (Remove vmbucket content from global selection)
gui_select_vmbucket -replace (Replace global selection with vmbucket content)
gui_select_vmbucket -vmname (Name of the visual mode)
gui_select_voltage_areas_of_selected
gui_set_bucket_option -bucket (Bucket name)
gui_set_bucket_option -default (Set the option to its default)
gui_set_bucket_option -map (Visual/Map Mode name)
gui_set_bucket_option -option (Name of the option to be set)
gui_set_bucket_option -value (Value for the option to be set)
gui_set_current_task -task (Name of task to make current.)
gui_set_highlight_options -auto_cycle_color 
gui_set_highlight_options -current_color 
gui_set_highlight_options -next_color (Cycle to the next color.)
gui_set_layer_widths -clear (clear layer values)
gui_set_layer_widths -layer (layer name)
gui_set_layer_widths -values (layer width values)
gui_set_layout_layer_visibility -only (Turn off all layers and then turn on only the specified layer.)
gui_set_layout_layer_visibility -toggle (Toggle the visibility of the specified layer.)
gui_set_layout_layer_visibility -window (The target layout window to apply visibility setting. 
gui_set_layout_user_command -apply_cmd (The user procedure to be called when input completed. 
gui_set_layout_user_command -cancel_cmd (The user procedure to be called when input is canceled.)
gui_set_layout_user_command -clear (Cancel all pending input and return layout to default mouse mode.
gui_set_layout_user_command -input_type (The desired input type: rectangle|line|polygon|path|point. Default is rectangle)
gui_set_layout_user_command -snap_type (The desired snap type: litho|site|midsite|wiretrack|midwiretrack|user. Default is litho)
gui_set_layout_user_command -status_text (The help string to be shown in layout window status bar.)
gui_set_map_option -default (Set the option to its default)
gui_set_map_option -map (Visual/Map Mode name)
gui_set_map_option -option (Name of the option to be set)
gui_set_map_option -value (Value for the option to be set)
gui_set_pref_value -category (name of category)
gui_set_pref_value -key (name of key)
gui_set_pref_value -value (the value associated with the key)
gui_set_select_menu_adds_to_selection -value (add to selection mode boolean flag)
gui_set_setting -setting (The name of the setting to set.)
gui_set_setting -value (The value of the setting.)
gui_set_setting -window (The target window to apply this setting.)
gui_set_task_list -tasks (Names of tasks in the order in which they should appear.)
gui_set_vm -bot_exaggeration 
gui_set_vm -buckets (Set the order of buckets)
gui_set_vm -float (Indicates that bucket contents have a floating point range)
gui_set_vm -help_topic (String for help topic)
gui_set_vm -icon (Set the icon file to be used for gui menus)
gui_set_vm -infotip (String for infotip)
gui_set_vm -mid_exaggeration 
gui_set_vm -name (Visual Mode name)
gui_set_vm -netfilter (Net connection filtering)
gui_set_vm -set_exaggerations (Set the bucket exaggerations)
gui_set_vm -show_only_pins_of_nets 
gui_set_vm -title (String for title)
gui_set_vm -top_exaggeration 
gui_set_vm -update_cmd (Tcl command string to update vm contents)
gui_set_vmbucket -above (Render bucket above this bucket)
gui_set_vmbucket -at (Render bucket at top or bottom: 
gui_set_vmbucket -below (Render bucket below this bucket)
gui_set_vmbucket -collection (Collection to provide bucket contents)
gui_set_vmbucket -color (Bucket color)
gui_set_vmbucket -exaggeration (Bucket min pixel exaggeration: 
gui_set_vmbucket -infotip (Infotip string)
gui_set_vmbucket -maxval (Bucket max val)
gui_set_vmbucket -minval (Bucket min val)
gui_set_vmbucket -name (Bucket name)
gui_set_vmbucket -netfilter (Net connection filtering)
gui_set_vmbucket -number (Bucket display number: 
gui_set_vmbucket -pattern (Bucket fill pattern)
gui_set_vmbucket -title (Bucket title)
gui_set_vmbucket -visible (Initial visibility)
gui_set_vmbucket -vmname (Visual Mode name)
gui_show_man_page -apropos (do apropos search for topic)
gui_show_man_page -html ()
gui_show_map -map (Visual/Map Mode name)
gui_show_map -show (Shows/Hides the map)
gui_show_map -window (Window in which to show/hide the map)
gui_start -file (file to source on gui_start)
gui_start -no_windows (set flag not to load windows for this cmd)
gui_stop
gui_trim_dangling_wires
gui_update_attrgroup -add (add new attribute to the group)
gui_update_attrgroup -anchor (anchor attribute)
gui_update_attrgroup -attr (single attribute)
gui_update_attrgroup -attr_list (reset list of attributes)
gui_update_attrgroup -class (name of design object)
gui_update_attrgroup -delete (delete attribute from the group)
gui_update_attrgroup -move (move attribute in the list: 
gui_update_attrgroup -name (attribute group name)
gui_update_pref_file -file (pathname of pref. file to save to)
gui_update_vm -name (Visual Mode name)
gui_update_vm_annotations -add (Add points for the specified type)
gui_update_vm_annotations -center ()
gui_update_vm_annotations -clear (Remove all annotations from object)
gui_update_vm_annotations -color (Color, default: bucket color)
gui_update_vm_annotations -draw_net (Specify net drawing: 
gui_update_vm_annotations -info_tip (Info tip)
gui_update_vm_annotations -line_style 
gui_update_vm_annotations -pattern (Fill pattern, default: none)
gui_update_vm_annotations -query_command 
gui_update_vm_annotations -query_text 
gui_update_vm_annotations -text (String to display)
gui_update_vm_annotations -type (Annotation type: 
gui_update_vm_annotations -width (Line width, default: 1)
gui_write_timing_paths -comment (User comment for paths file.)
gui_write_timing_paths -file (Name of the output file to which to write the timing paths)
gui_write_timing_paths -overwrite (Overwrite existing output file)
gui_write_timing_paths -tag (User can tag paths file with some arbitrary string.)
gui_zoom_all_layouts_to_current_view
h2t -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
h2t -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
h2t -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
h2t -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
h2t -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
h2t -clean_channel_tracks 
h2t -clean_named_zone_tracks 
h2t -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
h2t -clear (remove any existing shapes prior creating them)
h2t -clear_zone (remove zone annotations before re-displaying them)
h2t -create_port (create port(s) from trunk(s))
h2t -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
h2t -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
h2t -cutout_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to cutout trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk inside this area will be cutout with 1/2 DR inflate)
h2t -cutout_bloat (bloat cutout area in DR units, + to inflate, - to deflate)
h2t -cutout_pullback (the list of 'start|end,layer,pullback', e.g. 'end,m10,100 start,m9,80 end,m8,-18'. pullback from cutout area as specified)
h2t -display_channel (THIS GOT RETIRED, use -display_zone: will annotate channels/edges and track capacity based on list of layer/width comma seperated)
h2t -display_zone (THIS IS REPLACING -display_channel: will annotate channels/edges and track capacity based on list of layer/width comma seperated)
h2t -do_not_check_shorts (do not check if track has obstructions)
h2t -do_not_cutout_nets (list of nets to be ignored while performing cutout)
h2t -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
h2t -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
h2t -edge_pullback_custom 
h2t -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
h2t -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
h2t -ignore_boundary_guides 
h2t -include_power_for_free_tracks 
h2t -just_clear_zone (remove all zone annotations)
h2t -log_track_number (reports track number that net was created on)
h2t -nets (list of nets to create trunk(s) for)
h2t -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
h2t -num_wires (number of trunks to create per net)
h2t -preview (do not create shapes, just draw annotations of shapes)
h2t -remove (remove any existing shapes do not create (for clean-up))
h2t -reuse_channel_tracks 
h2t -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
h2t -shield (shield)
h2t -shield_name (shield name)
h2t -shield_pullback (pullback shield trunk from edge half DR (per layer))
h2t -shield_type (type of shielding to preform)
h2t -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
h2t -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
h2t -stepping (list of steppings per layer/width pairs, make sure to accomodate for shielding, e.g full - 3, half - 2)
h2t -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
h2t -topology (topology description as a list of legs that reference trunking channels and their layers/width/track|micron|p values)
h2t -track_overrides_pin (even if pin exists, use the track number passed)
h2t -trim_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to trim trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk outside this area will be trimmed with 1/2 DR deflate)
h2t -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
h2t -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
h2t -verbose (turn on printing of display_channel capacities)
h2t -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
h2t -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
heal_bboxes_after_convert_from_polygon
help -groups (Display command groups only)
help -verbose (Display options like -help)
help_app_options -category (Category of application option)
help_app_options -scope (Scope of application options: 
help_app_options -verbose (Display application options properties)
help_attributes -application (Only display application defined attributes)
help_attributes -user (Only display user defined attributes)
help_attributes -verbose (Display attribute properties)
history -h (Display history without leading numbers)
history -r (Display history in reverse order)
hlb
hnb
ib
icc2_dump_icc_mcmm_config -outdir (output file name)
icc2_dump_icc_mcmm_config -regsub_from_to_file 
iccpp_adjust_bbox_to_min_length
iccpp_com_annotate_rule_based_track_info -bbox (bounding box to annotabe tracks within)
iccpp_com_annotate_rule_based_track_info -cutline (cut-line to annotabe tracks crossing)
iccpp_com_annotate_rule_based_track_info -group (annotation group name)
iccpp_com_annotate_rule_based_track_info -layer (layer name)
iccpp_com_annotate_rule_based_track_info -width (track width)
iccpp_com_display_tracks
iccpp_com_empty_tracks_in_bbox
iccpp_com_get_rule_based_track_capacity -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_capacity -layer (layer name)
iccpp_com_get_rule_based_track_capacity -width (track width)
iccpp_com_get_rule_based_track_info -layer (layer name)
iccpp_com_get_rule_based_track_info_flat -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat -layer (layer name)
iccpp_com_get_rule_based_track_info_flat -text_annotation (do text annotation for tracks)
iccpp_com_get_rule_based_track_info_flat -width (track width)
iccpp_com_get_rule_based_track_info_flat_cntr -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_cntr -exclude_bbox (list of bounding boxes 'xl_1:yl_1:xh_1:yh_1 xl_2:yl_2:xh_2:yh_2 ...' to be excluded from geting tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_cntr -text_annotation (do text annotation for tracks)
iccpp_com_get_rule_based_track_info_flat_cntr -width (track width)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -exclude_bbox (list of bounding boxes 'xl_1:yl_1:xh_1:yh_1 xl_2:yl_2:xh_2:yh_2 ...' to be excluded from geting tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -skip_tracks (rule to skip tracks, e.g m9,10,3-7-9 meaning out of each 10 tracks skip 3d, 7th and 9th)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t -width (track width)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -exclude_bbox (list of bounding boxes 'xl_1:yl_1:xh_1:yh_1 xl_2:yl_2:xh_2:yh_2 ...' to be excluded from geting tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -skip_tracks (rule to skip tracks, e.g m9,10,3-7-9 meaning out of each 10 tracks skip 3d, 7th and 9th)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_itar -width (track width)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -exclude_bbox (list of bounding boxes 'xl_1:yl_1:xh_1:yh_1 xl_2:yl_2:xh_2:yh_2 ...' to be excluded from geting tracks within)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -skip_tracks (rule to skip tracks, e.g m9,10,3-7-9 meaning out of each 10 tracks skip 3d, 7th and 9th)
iccpp_com_get_rule_based_track_info_flat_cntr_width_h2t_snps -width (track width)
iccpp_com_get_rule_based_track_info_flat_no_tracks_defined -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_no_tracks_defined -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_no_tracks_defined -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_no_tracks_defined -text_annotation (do text annotation for tracks)
iccpp_com_get_rule_based_track_info_flat_no_tracks_defined -width (track width)
iccpp_com_get_rule_based_track_info_flat_simple -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_simple -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_simple -width (track width)
iccpp_com_get_rule_based_track_info_flat_width_h2t -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_width_h2t -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_width_h2t -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_width_h2t -text_annotation (do text annotation for tracks)
iccpp_com_get_rule_based_track_info_flat_width_h2t -width (track width)
iccpp_com_get_rule_based_track_info_flat_width_h2t_itar -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_width_h2t_itar -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_width_h2t_itar -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_width_h2t_itar -text_annotation (do text annotation for tracks)
iccpp_com_get_rule_based_track_info_flat_width_h2t_itar -width (track width)
iccpp_com_get_rule_based_track_info_flat_width_h2t_snps -bbox (bounding box to get tracks within)
iccpp_com_get_rule_based_track_info_flat_width_h2t_snps -cutline (cut-line to annotabe tracks crossing)
iccpp_com_get_rule_based_track_info_flat_width_h2t_snps -layer (layer name)
iccpp_com_get_rule_based_track_info_flat_width_h2t_snps -width (track width)
iccpp_com_track_num_to_track_info -bbox (bounding box to get tracks within)
iccpp_com_track_num_to_track_info -centerline (display track as centerline)
iccpp_com_track_num_to_track_info -clear (clear before annotating the track)
iccpp_com_track_num_to_track_info -display (annotate the track(s))
iccpp_com_track_num_to_track_info -group (annotation group name)
iccpp_com_track_num_to_track_info -layer (layer name)
iccpp_com_track_num_to_track_info -track_num (LIST of track numbers)
iccpp_com_track_num_to_track_info -width (track width)
iccpp_com_xy_to_track_info -bbox (bounding box to annotabe tracks within)
iccpp_com_xy_to_track_info -centerline (display track as centerline)
iccpp_com_xy_to_track_info -clear (clear before annotating the track)
iccpp_com_xy_to_track_info -display (annotate the track)
iccpp_com_xy_to_track_info -dont_init_spreading (intialize track spreading cache outside of this call)
iccpp_com_xy_to_track_info -group (annotation group name)
iccpp_com_xy_to_track_info -layer (layer name)
iccpp_com_xy_to_track_info -nets (LIST of nets associated with XY points passes thru -point option)
iccpp_com_xy_to_track_info -point (LIST of cordinates of point(s) on canvas X Y)
iccpp_com_xy_to_track_info -snap_to_dir (direction to snap coord to track, values are:  ld == snap to left/down or ru == snap to right/up)
iccpp_com_xy_to_track_info -width (track width)
iccpp_cr_create_term_from_bbox -add_metal (add metal underneath terminal)
iccpp_cr_create_term_from_bbox -area_bbox (bounding box to create term within)
iccpp_cr_create_term_from_bbox -associate_shield_nets 
iccpp_cr_create_term_from_bbox -delete (clear before annotating the track)
iccpp_cr_create_term_from_bbox -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_term_from_bbox -group (group name for wire)
iccpp_cr_create_term_from_bbox -layer (layer name)
iccpp_cr_create_term_from_bbox -net_bbox (already calculated net_bbox so use it)
iccpp_cr_create_term_from_bbox -port_name (name of port to create)
iccpp_cr_create_term_from_bbox -preview (do not create shapes, just annotate)
iccpp_cr_create_term_from_bbox -shield (shield)
iccpp_cr_create_term_from_bbox -shield_name (shield name)
iccpp_cr_create_term_from_bbox -shield_type (type of shielding to preform)
iccpp_cr_create_term_from_bbox -term_name (name of terminal to create)
iccpp_cr_create_term_from_bbox -track (track)
iccpp_cr_create_trunk_from_here_to_there -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there -clean_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there -clean_named_zone_tracks 
iccpp_cr_create_trunk_from_here_to_there -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
iccpp_cr_create_trunk_from_here_to_there -clear (remove any existing shapes/annotations prior to creating them)
iccpp_cr_create_trunk_from_here_to_there -create_port (create port(s) from trunk(s))
iccpp_cr_create_trunk_from_here_to_there -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
iccpp_cr_create_trunk_from_here_to_there -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
iccpp_cr_create_trunk_from_here_to_there -cutout_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to cutout trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk inside this area will be cutout with 1/2 DR inflate)
iccpp_cr_create_trunk_from_here_to_there -cutout_bloat (bloat cutout area in DR units, + to inflate, - to deflate)
iccpp_cr_create_trunk_from_here_to_there -cutout_pullback (the list of 'layer,pullback' e.g. 'm10,100 m9,80 m8,-18'. pullback from cutout area as specified)
iccpp_cr_create_trunk_from_here_to_there -do_not_check_shorts (do not check if track has obstructions)
iccpp_cr_create_trunk_from_here_to_there -do_not_cutout_nets (list of nets to be ignored while performing cutout)
iccpp_cr_create_trunk_from_here_to_there -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
iccpp_cr_create_trunk_from_here_to_there -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
iccpp_cr_create_trunk_from_here_to_there -edge_pullback_custom 
iccpp_cr_create_trunk_from_here_to_there -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
iccpp_cr_create_trunk_from_here_to_there -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there -ignore_boundary_guides 
iccpp_cr_create_trunk_from_here_to_there -include_power_for_free_tracks 
iccpp_cr_create_trunk_from_here_to_there -log_track_number (reports track number that net was created on)
iccpp_cr_create_trunk_from_here_to_there -nets (list of nets to create trunk(s) for)
iccpp_cr_create_trunk_from_here_to_there -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
iccpp_cr_create_trunk_from_here_to_there -preview (do not create shapes, just annotate)
iccpp_cr_create_trunk_from_here_to_there -reuse_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
iccpp_cr_create_trunk_from_here_to_there -shield (shield)
iccpp_cr_create_trunk_from_here_to_there -shield_name (shield name)
iccpp_cr_create_trunk_from_here_to_there -shield_pullback (pullback shield trunk from edge half DR (per layer))
iccpp_cr_create_trunk_from_here_to_there -shield_type (type of shielding to preform)
iccpp_cr_create_trunk_from_here_to_there -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
iccpp_cr_create_trunk_from_here_to_there -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
iccpp_cr_create_trunk_from_here_to_there -stepping (list of steppings per topology leg)
iccpp_cr_create_trunk_from_here_to_there -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
iccpp_cr_create_trunk_from_here_to_there -topology (topology description as a list of legs that reference trunking channels and their layers/width/track numbers or exisiting trunks)
iccpp_cr_create_trunk_from_here_to_there -trim_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to trim trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk outside this area will be trimmed with 1/2 DR deflate)
iccpp_cr_create_trunk_from_here_to_there -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
iccpp_cr_create_trunk_from_here_to_there -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
iccpp_cr_create_trunk_from_here_to_there -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', zone is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -clean_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -clean_named_zone_tracks 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -clear (remove any existing shapes/annotations prior to creating them)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -create_port (create port(s) from trunk(s))
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -cutout_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to cutout trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk inside this area will be cutout with 1/2 DR inflate)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -cutout_bloat (bloat cutout area in DR units, + to inflate, - to deflate)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -cutout_pullback (the list of 'layer,pullback' e.g. 'm10,100 m9,80 m8,-18'. pullback from cutout area as specified)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -do_not_check_shorts (do not check if track has obstructions)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -do_not_cutout_nets (list of nets to be ignored while performing cutout)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -edge_pullback_custom 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -ignore_boundary_guides 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -include_power_for_free_tracks 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -log_track_number (reports track number that net was created on)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -nets (list of nets to create trunk(s) for)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -preview (do not create shapes, just annotate)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -reuse_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -shield_pullback (pullback shield trunk from edge half DR (per layer))
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -stepping (list of steppings per topology leg)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -topology (topology description as a list of legs that reference trunking zones and their layers/width/track numbers or exisiting trunks)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -trim_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to trim trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk outside this area will be trimmed with 1/2 DR deflate)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
iccpp_cr_create_trunk_from_here_to_there_for_swizzle -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -clean_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -clean_named_zone_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -clear (remove any existing shapes/annotations prior to creating them)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -create_port (create port(s) from trunk(s))
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -cutout_pullback (the list of 'layer,pullback' e.g. 'm10,100 m9,80 m8,-18'. pullback from cutout area as specified)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -do_not_check_shorts (do not check if track has obstructions)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -edge_pullback_custom 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -ignore_boundary_guides 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -include_power_for_free_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -log_track_number (reports track number that net was created on)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -nets (list of nets to create trunk(s) for)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -preview (do not create shapes, just annotate)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -reuse_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -shield (shield)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -shield_name (shield name)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -shield_pullback (pullback shield trunk from edge half DR (per layer))
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -shield_type (type of shielding to preform)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -stepping (list of steppings per topology leg)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -topology (topology description as a list of legs that reference trunking zones and their layers/width/track numbers or exisiting trunks)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
iccpp_cr_create_trunk_from_here_to_there_with_pin_shielding -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_with_shielding -avoid_area (list cells/absolte bbox-es/relative (to cells) bboxes to avoid, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any track within these bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_with_shielding -avoid_layers (list of ,-separated layers per each element of -avoid_area list. Any track for these layers within -avoid_area bboxes will be skipped )
iccpp_cr_create_trunk_from_here_to_there_with_shielding -bloat_channel (THIS GOT RETIRED, use -bloat_zone: inflates bbox of net(s) member of  the zone: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -bloat_zone (THIS IS REPLACING -bloat_channel: inflates bbox of net(s) member of  the channel: 'ch,10.06,-2.6' bloats ch1 bbox 10.06 micron in X direction and -2.6 micron in Y direction)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -channel (THIS GOT RETIRED, use -zone: list of named trunking channels, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunk_from_here_to_there_with_shielding -clean_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -clean_named_zone_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -clean_zone_tracks (THIS IS REPLACING -clean_channel_tracks: remove tracks cache, all consecutive call will have to fetch tracks for channel)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -clear (remove any existing shapes/annotations prior to creating them)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -create_port (create port(s) from trunk(s))
iccpp_cr_create_trunk_from_here_to_there_with_shielding -custom_attr (list of shape attributes 'attr_name attr_val'| 'attr_name' assumed bool==1, that will be added to shapes of trunks, )
iccpp_cr_create_trunk_from_here_to_there_with_shielding -custom_tag (an internal tag that will be added to a trunk, DO NOT use it in user scripts)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -cutout_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to cutout trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk inside this area will be cutout with 1/2 DR inflate)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -cutout_bloat (bloat cutout area in DR units, + to inflate, - to deflate)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -cutout_pullback (the list of 'layer,pullback' e.g. 'm10,100 m9,80 m8,-18'. pullback from cutout area as specified)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -do_not_check_shorts (do not check if track has obstructions)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -do_not_cutout_nets (list of nets to be ignored while performing cutout)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -edge_overhang (overhangs an edge. used to creates pins on edges after pushing trunks down the hierary, can't be use with -edge_pullback and/or -edge_pullback_custom)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -edge_pullback (pullback from edge half DR (per layer), can't be use with -edge_pullback_custom and/or -edge_overhang)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -edge_pullback_custom 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -find_free_tracks (finds free (un-obstructed) tracks to trunk on)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -h_track_freedom (expands the Y-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -ignore_boundary_guides 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -include_power_for_free_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -log_track_number (reports track number that net was created on)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -nets (list of nets to create trunk(s) for)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -nets_order (values 'interleave|reverse|expand,bit|etc.' interleave nets, e.g. -nets 'a[0:7] b[0:7]' will result in 'a[0] b[0] ... [a[7] b[7]' )
iccpp_cr_create_trunk_from_here_to_there_with_shielding -preview (do not create shapes, just annotate)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -reuse_channel_tracks 
iccpp_cr_create_trunk_from_here_to_there_with_shielding -reuse_zone_tracks (THIS IS REPLACING -reuse_channel_tracks: do not fetch tracks for channel, re-use from previous call)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -shield (shield)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -shield_name (shield name)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -shield_pullback (pullback shield trunk from edge half DR (per layer))
iccpp_cr_create_trunk_from_here_to_there_with_shielding -shield_type (type of shielding to preform)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -skip_tracks (rule to skip tracks, e.g 'm8,9,5 m9,10,3-7-9' meaning out of each 10 tracks for m9 skip 3d, 7th and 9th)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -snap_to_track (if topology is specified using micron value, snap coord to track for givem layer/width)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -stepping (list of steppings per topology leg)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -swizzle (Takes pairs of nets and does a one track jog/swizzle/twisted pair route, if list of nets is passed, will do every two one after another. must pass "swizzle_layer,location")
iccpp_cr_create_trunk_from_here_to_there_with_shielding -topology (topology description as a list of legs that reference trunking channels and their layers/width/track numbers or exisiting trunks)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -trim_area (list cells/absolte bbox-es/relative (to cells) bboxes to be used to trim trunks, 'mdf* 18694.8000:0.0000:19595.5200:1184.8320 sprtile33,0:0:200:200 sprtile43,0:0:200:200' any trunk outside this area will be trimmed with 1/2 DR deflate)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -use_pin (Use edge pin(s) for specified chnnels to override layer/width/location (track|micron) for edge topology definition(s))
iccpp_cr_create_trunk_from_here_to_there_with_shielding -v_track_freedom (expands the X-direction search distance outside net bbox in microns to find free tracks)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -wrong_way_metal (allow wrong way metal, value is list of layer names for which wrong direction shapes are generated)
iccpp_cr_create_trunk_from_here_to_there_with_shielding -zone (THIS IS REPLACING -channel: list of named trunking zones, e.g. 'ch1:my_cell_1 ch2:slice/right_cell', channel is absolute bbox (or cell_name) or  net(s) bbox))
iccpp_cr_create_trunks_from_pin_to_pin -dir_follows_sign (direction of the leg travel defined by the sign of the leg, not net bbox. i.e. 0.25 goes to the right/up, -0.25 goes to left/down)
iccpp_cr_create_trunks_from_pin_to_pin -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_trunks_from_pin_to_pin -extensions (list of how far to extend pins in microns, net bbox fraction, lego, duplo.  list coresponds with list of layers -1)
iccpp_cr_create_trunks_from_pin_to_pin -layer_legs (layers and widths for which turns will be created on, e.g. 'm9:1.4,2.8 m8:1.0'. first layer/width will be drawn first, second second etc.)
iccpp_cr_create_trunks_from_pin_to_pin -nets (nets to complete)
iccpp_cr_create_trunks_from_pin_to_pin -preview (Do not create shapes, just annotate)
iccpp_cr_create_trunks_from_pin_to_pin -shield (shield)
iccpp_cr_create_trunks_from_pin_to_pin -shield_name (shield name)
iccpp_cr_create_trunks_from_pin_to_pin -shield_type (type of shielding to preform)
iccpp_cr_create_trunks_from_pin_to_pin -start_from (which pin to start from, either Low pin to High pin, LoHi (lowest y will be first leg) or High pin to Low pin, HiLo)
iccpp_cr_create_trunks_from_pins_to_point -create_terminals (create terminals on boundary if extention distance is to_boundary)
iccpp_cr_create_trunks_from_pins_to_point -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_trunks_from_pins_to_point -extention_direction (direction to extend pins, either Left_or_Bottom|lb or Right_or_Top|tr)
iccpp_cr_create_trunks_from_pins_to_point -extention_distance (how far in microns to extend pins or to_cell:cell_name)
iccpp_cr_create_trunks_from_pins_to_point -layer (layer name for pin trunks to be on)
iccpp_cr_create_trunks_from_pins_to_point -min_layer (layer name)
iccpp_cr_create_trunks_from_pins_to_point -nets (nets to complete)
iccpp_cr_create_trunks_from_pins_to_point -of_cells (instances of macros and the side from which to extend pins)
iccpp_cr_create_trunks_from_pins_to_point -pin_layer (list of layer name(s) that pin(s) should be on to extend off of)
iccpp_cr_create_trunks_from_pins_to_point -preview (Do not create shapes, just annotate)
iccpp_cr_create_trunks_from_pins_to_point -push_pins (create pins where iccpp_trunks cross cells)
iccpp_cr_create_trunks_from_pins_to_point -shield (shield net)
iccpp_cr_create_trunks_from_pins_to_point -shield_name (shield name)
iccpp_cr_create_trunks_from_pins_to_point -shield_type (type of shielding to preform)
iccpp_cr_create_trunks_from_pins_to_point -snap_to_track (snap trunk centerline to track, if not specified trunk will be extended from pin bbox exactly)
iccpp_cr_create_trunks_from_pins_to_point -width (width of the reack for layer name for pin trunks to be on)
iccpp_cr_create_trunks_from_pins_to_trunk -cluster_proximity (micron value used to cluster receiver pins together, 0 means use each pin by itself)
iccpp_cr_create_trunks_from_pins_to_trunk -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_trunks_from_pins_to_trunk -layer (layer name for pin trunks to be on)
iccpp_cr_create_trunks_from_pins_to_trunk -min_layer (layer name)
iccpp_cr_create_trunks_from_pins_to_trunk -nets (nets to complete)
iccpp_cr_create_trunks_from_pins_to_trunk -of_cells (instances of macros and the side from which to extend pins)
iccpp_cr_create_trunks_from_pins_to_trunk -offset_cell_pin (instances of macros and the side and the offset distance to modify pins bbox cella:b:-2)
iccpp_cr_create_trunks_from_pins_to_trunk -pin_direction (use only pins of specified direction)
iccpp_cr_create_trunks_from_pins_to_trunk -preview (Do not create shapes, just annotate)
iccpp_cr_create_trunks_from_pins_to_trunk -shield (shield net)
iccpp_cr_create_trunks_from_pins_to_trunk -shield_name (shield name)
iccpp_cr_create_trunks_from_pins_to_trunk -shield_type (type of shielding to preform)
iccpp_cr_create_trunks_from_pins_to_trunk -track_offset (offset (in track numbers) for a resulting trunk(s) to be placed on)
iccpp_cr_create_trunks_from_pins_to_trunk -use_existing_shape (format: layer[,min_length] (e.g m5,80) extend to existing net shape on layer 'layer' that is optionaly longer then 'min_length' if no trunks are found)
iccpp_cr_create_trunks_from_pins_to_trunk -width (width of the reack for layer name for pin trunks to be on)
iccpp_cr_create_trunks_from_ports -backoff_from_ports (amount to offset from port)
iccpp_cr_create_trunks_from_ports -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_trunks_from_ports -extention_direction 
iccpp_cr_create_trunks_from_ports -extention_distance (how far in microns to extend from ports)
iccpp_cr_create_trunks_from_ports -layer (use this layer not the port layer)
iccpp_cr_create_trunks_from_ports -min_layer (minimum layer for terminals to be considered (used to extend trunks from))
iccpp_cr_create_trunks_from_ports -nets (nets to complete)
iccpp_cr_create_trunks_from_ports -preview (Do not create shapes, just annotate)
iccpp_cr_create_trunks_from_ports -shield (shield)
iccpp_cr_create_trunks_from_ports -shield_name (shield name)
iccpp_cr_create_trunks_from_ports -shield_type (type of shielding to preform)
iccpp_cr_create_trunks_from_ports -use_port_width (use port width, do not snap to track (assuming ports are on correct tracks))
iccpp_cr_create_trunks_from_ports -width (width of tracks to use)
iccpp_cr_create_trunks_from_ports_to_trunk -backoff_from_ports (amount to offset from port)
iccpp_cr_create_trunks_from_ports_to_trunk -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_trunks_from_ports_to_trunk -layer (layer name for pin trunks to be on)
iccpp_cr_create_trunks_from_ports_to_trunk -min_layer (minimum layer for terminals to be considered (used to extend trunks from))
iccpp_cr_create_trunks_from_ports_to_trunk -nets (nets to complete)
iccpp_cr_create_trunks_from_ports_to_trunk -preview (Do not create shapes, just annotate)
iccpp_cr_create_trunks_from_ports_to_trunk -shield (shield)
iccpp_cr_create_trunks_from_ports_to_trunk -shield_name (shield name)
iccpp_cr_create_trunks_from_ports_to_trunk -shield_type (type of shielding to preform)
iccpp_cr_create_trunks_from_ports_to_trunk -width (width of the reack for layer name for pin trunks to be on)
iccpp_cr_create_wire_from_net_bbox -area_bbox (bounding box to create trunk within)
iccpp_cr_create_wire_from_net_bbox -associate_shield_nets 
iccpp_cr_create_wire_from_net_bbox -delete (clear before annotating the track)
iccpp_cr_create_wire_from_net_bbox -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_wire_from_net_bbox -group (group name for wire)
iccpp_cr_create_wire_from_net_bbox -layer (layer name)
iccpp_cr_create_wire_from_net_bbox -net_bbox (already calculated net_bbox so use it)
iccpp_cr_create_wire_from_net_bbox -net_name (net to create wire for)
iccpp_cr_create_wire_from_net_bbox -preview (do not create shapes, just annotate)
iccpp_cr_create_wire_from_net_bbox -shield (shield)
iccpp_cr_create_wire_from_net_bbox -shield_name (shield name)
iccpp_cr_create_wire_from_net_bbox -shield_type (type of shielding to preform)
iccpp_cr_create_wire_from_net_bbox -track (track)
iccpp_cr_create_wire_from_net_bbox_h2t -area_bbox (bounding box to create trunk within)
iccpp_cr_create_wire_from_net_bbox_h2t -associate_shield_nets 
iccpp_cr_create_wire_from_net_bbox_h2t -delete (clear before annotating the track)
iccpp_cr_create_wire_from_net_bbox_h2t -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_wire_from_net_bbox_h2t -group (group name for wire)
iccpp_cr_create_wire_from_net_bbox_h2t -layer (layer name)
iccpp_cr_create_wire_from_net_bbox_h2t -net_bbox (already calculated net_bbox so use it)
iccpp_cr_create_wire_from_net_bbox_h2t -net_name (net to create wire for)
iccpp_cr_create_wire_from_net_bbox_h2t -preview (do not create shapes, just annotate)
iccpp_cr_create_wire_from_net_bbox_h2t -shield (shield)
iccpp_cr_create_wire_from_net_bbox_h2t -shield_name (shield name)
iccpp_cr_create_wire_from_net_bbox_h2t -shield_type (type of shielding to preform)
iccpp_cr_create_wire_from_net_bbox_h2t -track (track)
iccpp_cr_create_wire_from_net_bbox_h2t -width (wire width)
iccpp_cr_create_wire_from_net_bbox_with_track -area_bbox (bounding box to create trunk within)
iccpp_cr_create_wire_from_net_bbox_with_track -associate_shield_nets 
iccpp_cr_create_wire_from_net_bbox_with_track -delete (clear before annotating the track)
iccpp_cr_create_wire_from_net_bbox_with_track -do_not_check_shorts (do not check if obstructions exist)
iccpp_cr_create_wire_from_net_bbox_with_track -group (group name for wire)
iccpp_cr_create_wire_from_net_bbox_with_track -layer (layer name)
iccpp_cr_create_wire_from_net_bbox_with_track -net_bbox (already calculated net_bbox so use it)
iccpp_cr_create_wire_from_net_bbox_with_track -net_name (net to create wire for)
iccpp_cr_create_wire_from_net_bbox_with_track -preview (do not create shapes, just annotate)
iccpp_cr_create_wire_from_net_bbox_with_track -shield (shield)
iccpp_cr_create_wire_from_net_bbox_with_track -shield_name (shield name)
iccpp_cr_create_wire_from_net_bbox_with_track -shield_type (type of shielding to preform)
iccpp_cr_create_wire_from_net_bbox_with_track -track (track)
iccpp_cr_place_flops -layer (layer of trunk to be repeated)
iccpp_cr_place_flops -layer_weight (when -repeater_distance is specified define weight per layer to be applied to the distance value)
iccpp_cr_place_flops -nets (nets to drop repeaters)
iccpp_cr_place_flops -repeater_distance (the distance to insert repeaters: insert a repeater every micron value specifiedhow much to disect length of layer to place repeaters)
iccpp_cr_place_flops -repeater_name (name of repeater cell to be incerted)
iccpp_cr_place_flops -repeater_number (how many repeaters to place on path)
iccpp_cr_place_flops -xy (exact location {X Y} to drop repeater)
iccpp_cr_remove_user_shape_antennas -nets (nets to trim)
iccpp_cr_remove_vias_for_preroutes -layer (layer name to nuke vias from)
iccpp_cr_remove_vias_for_preroutes -nets (nets to nuke vias on)
iccpp_cr_remove_vias_for_preroutes -tag (group name for vias, default is iccpp_preroute_vias)
iccpp_cr_track_shared_trunks -complete_routing (finish routing of trunks with constrained zroute)
iccpp_cr_track_shared_trunks -do_not_check_shorts (do not check if obstrutions exist)
iccpp_cr_track_shared_trunks -layer (layer name for pin trunks to be on)
iccpp_cr_track_shared_trunks -nets (nets to track share)
iccpp_cr_track_shared_trunks -preview (Do not create shapes, just annotate)
iccpp_cr_track_shared_trunks -ref_net (the net to take the ref object from)
iccpp_cr_track_shared_trunks -ref_obj (pin | port to be used to calculate track number, if track num is supplied, ref_obj is ignored)
iccpp_cr_track_shared_trunks -shield (shield net)
iccpp_cr_track_shared_trunks -shield_name (shield name)
iccpp_cr_track_shared_trunks -shield_type (type of shielding to preform)
iccpp_cr_track_shared_trunks -to_trunk (specifies which net segments need to be connected to an existing trunk)
iccpp_cr_track_shared_trunks -track_num (track number to put trunks on)
iccpp_cr_track_shared_trunks -use_ref_obj_layer (take layer/width from the ref object, will overrride layer/width passed)
iccpp_cr_track_shared_trunks -width (width of the track for layer name for pin trunks to be on)
iccpp_cr_trim_antennas -interactive (runs in interactive mode only due to issue with error message in route_group cmd)
iccpp_cr_trim_antennas -nets (nets to trim on)
iccpp_cr_trim_antennas -user_attr (name of user attribute)
iccpp_cr_zroute_in_window
iccpp_create_ladders
iccpp_get_max_layer
iccpp_get_max_layer_from_layers_width
iccpp_get_pins_of_direction_of_cell
iccpp_launch_gui
iccpp_lw_2_l
idb
identify_channels -cross_area (identify cross areas)
identify_channels -cross_area_height 
identify_channels -cross_area_width 
identify_channels -cut_polyrect (cut polyrect to rect)
identify_channels -horizontal_threshold 
identify_channels -output_filename 
identify_channels -vertical_threshold 
identify_multibit -apply (Modify netlist by replacing single-bit cells with multi-bit cell)
identify_multibit -cells (cells to be considered for multibit banking)
identify_multibit -exclude_instance 
identify_multibit -exclude_library_cells 
identify_multibit -input_map_file 
identify_multibit -mv_cell (Identify LS and ISO cells for banking)
identify_multibit -no_dft_opt (disable scan chain optimization before banking)
identify_multibit -output_file 
identify_multibit -register (Identify registers for banking)
identify_multibit -slack_threshold 
identify_multibit -slack_threshold_file 
image
image1
index_collection
info_var -defined (Returns 1 if the value was set)
info_var -history (Returns the history of parameter; )
info_var -is_array (Returns 1 if the variables is an array)
info_var -property (Returns user property for parameter)
info_var -type (Returns type of the parameter; does not work with -property)
initDuetEnvVars
initialize_floorplan -boundary (Specifies the shape to be used)
initialize_floorplan -coincident_boundary 
initialize_floorplan -control_type 
initialize_floorplan -core_offset 
initialize_floorplan -core_utilization 
initialize_floorplan -flip_first_row 
initialize_floorplan -honor_pad_limit (adjust core and die size to honor pad limit designs)
initialize_floorplan -keep_boundary (keep existing boundary)
initialize_floorplan -keep_detail_route (keep routes of all nets except pg net)
initialize_floorplan -keep_objects 
initialize_floorplan -keep_pg_route (keep pg routes)
initialize_floorplan -keep_placement 
initialize_floorplan -orientation 
initialize_floorplan -origin_offset 
initialize_floorplan -pin_snap (snap pin to wire track: 
initialize_floorplan -row_core_ratio 
initialize_floorplan -shape (boundary shape, default is rectangular (Rect): 
initialize_floorplan -side_length 
initialize_floorplan -side_ratio 
initialize_floorplan -site_def 
initialize_floorplan -use_site_row (create siteRow)
insert_buffer -inverter_pair (Add a pair of inverter cells instead of a buffer)
insert_buffer -lib_cell 
insert_buffer -new_cell_names 
insert_buffer -new_net_names 
insert_buffer -no_of_cells (no of buffer to add: 
insert_clock_boundary_buffer
insert_via_ladders -allow_drcs (false|true)]
insert_via_ladders -allow_patching (false|true)]
insert_via_ladders -clean (false|true)]  (Remove existing via ladders before inserting new via ladders (default false))
insert_via_ladders -connect_within_metal (false|true)]
insert_via_ladders -ignore_rippable_shapes (false|true)]
insert_via_ladders -ignore_routing_shape_drcs (false|true)]
insert_via_ladders -ndr_on_top_layer_only (false|true)]
insert_via_ladders -nets (the nets for via ladder insertion (default all))
insert_via_ladders -pattern_must_join_over_pin_layer 
insert_via_ladders -relax_line_end_via_enclosure_rule (false|true)]
insert_via_ladders -relax_pin_layer_metal_spacing_rules (false|true)]
insert_via_ladders -remove_routing_shapes_below_net_via_ladder_top_layer (false|true)]
insert_via_ladders -shift_vias_on_transition_layers (false|true)]
insert_via_ladders -strictly_honor_cut_table (false|true)]
insert_via_ladders -user_debug (false|true)]
insert_via_ladders -verbose (false|true)]
interleave_bus
is_abutting
is_false
is_fully_abutted_cell
is_odd
is_true
je_get_boundary_edge_coord
label
labelframe
lappend_var
ldr_order_list
legalize_placement -boundary (Legalize the cells within the boundary where its syntax can be {{{llx lly} {urx ury}} | {{x1 y1} {x2 y2} ...}})
legalize_placement -cells (List of cells to be legalized)
legalize_placement -incremental (Perform incremental legalization only for illegal cells)
legalize_placement -moveable_distance 
legalize_placement -post_route (Run in post-route mode)
legalize_placement -priority (Specify priority on cells. Valid string is low, medium, high. Default is low)
legalize_rp_groups -legalize_over_rp (Specified Relative Placement groups will be legalized over other unspecified Relative placement groups)
legox
legoy
libsetup_build_hip_lib_glob
libsetup_build_lib_glob
libsetup_find_relevant_hip_libs
libsetup_max_to_min_lib_regex
libsetup_wildcard_hip_voltage
libsetup_wildcard_voltage
link -force (Force block to relink)
link -incremental (Only update unresolved references)
link -rebind (Rebind all references)
link -verbose (Verbose messages from the linker)
link_block -force (Force block to relink)
link_block -incremental (Only update unresolved references)
link_block -rebind (Rebind all references)
link_block -verbose (Verbose messages from the linker)
link_design -force (Force block to relink)
link_design -incremental (Only update unresolved references)
link_design -rebind (Rebind all references)
link_design -verbose (Verbose messages from the linker)
list_attributes -application (List application attributes as well)
list_attributes -class (List attributes of this class only: 
list_attributes -nosplit (Do not split lines when columns overflow)
list_blocks -lib_cells (List blocks from lib_cell libraries)
list_blocks -ref_libs (List blocks from the ref_lib list)
list_commands -options (list of options of the commands will also be shown.)
list_commands -status 
list_constraints -nosplit (Don't split lines if column overflows)
list_constraints -significant_digits 
list_licenses
list_of_configulate_gvars
listbox
listcomp
lminus -exact (exact match)
lminus_var
loadTpr
load_block_constraints -all_blocks (Load constraints for all child blocks)
load_block_constraints -blocks 
load_block_constraints -host_options 
load_block_constraints -type (List of constraint types)
load_block_constraints -work_dir (Specify the directory for block scripts and log files)
load_busplans -buses (buses to create)
load_busplans -only_create (Only create start/end groups of busplans.)
load_busplans -replace_existing (Overwrite existing busplans with the same name(s).)
load_busplans -verbose (show details of busplan loading)
load_busplans -xml_file (Load busplan details from an XML file)
load_constraints -auto_clock (automatically associate clocks in blocks: 
load_constraints -force (don't error out when constraints mismatch with the design)
load_constraints -promote (attempt to promote constraints from blocks with changed view)
load_duet
load_duetX
load_duet_gui_pkg
load_duet_splash
load_duet_tcl
load_duettclreadline_package
load_metal_pattern_density
load_ubm
load_upf -noecho (Do not echo commands)
load_upf -scope (Hierarchical instance scope)
load_upf -strict_check 
load_upf -supplemental 
loadvfs
lower
lremove_var
ls
mO
magnet_placement -avoid_soft_blockage (dont allow cells to be placed over soft blockages)
magnet_placement -cells (list of cells to be pulled)
magnet_placement -exclude_buffers (skip through buffers in levels)
magnet_placement -get_collection (return cells as collection)
magnet_placement -hierarchy_mode 
magnet_placement -logical_levels 
magnet_placement -mark_fixed (mark cells as fixed after placement)
magnet_placement -mark_legalize_only (mark cells as legalize_only after placement)
magnet_placement -move_fixed (allow fixed cell to be moved)
magnet_placement -move_legalize_only (allow legalize_only cell to be moved)
magnet_placement -multiple_long_port_mode 
magnet_placement -only_report_magnet_cells 
magnet_placement -stop_by_sequential_cells 
magnet_placement -stop_on_sequential_cells 
magnet_placement -stop_points 
man -html (Display in html.)
map_freeze_silicon -eco_cell (eco cell to be mapped)
map_freeze_silicon -filler_map_strategy ( pack_left | pack_right | pack_top | pack_bottom | closest )]
map_freeze_silicon -lib_cells_for_filler_recovery 
map_freeze_silicon -map_file (name of map file)
map_freeze_silicon -spare_cell (spare cell to map eco cell)
map_isolation_cell -domain (The domain on which the isolation strategy will apply)
map_isolation_cell -lib_cells 
map_level_shifter_cell -domain (The domain on which the level shifter strategy will apply)
map_level_shifter_cell -lib_cells 
map_power_switch -domain (The power domain where this power switch is to be created)
map_power_switch -lib_cells 
map_retention_cell -domain (Specify the power domain of the strategy)
map_retention_cell -elements 
map_retention_cell -lib_cell_type 
map_retention_cell -lib_cells 
map_retention_cell -lib_model_name 
mark_clock_trees -clear (clear the attributes on clock trees)
mark_clock_trees -clock_cell_spacing (propagate clock cell spacing attribute on cell)
mark_clock_trees -clocks (List of clocks)
mark_clock_trees -dont_touch (set dont_touch attribute on clock trees)
mark_clock_trees -fix_sinks (Mark physical_status attribute of clock sinks as fixed)
mark_clock_trees -freeze_routing (Mark physical_status attribute on net as locked)
mark_clock_trees -routing_rules (propagate NDR and layer lists on clock trees)
mark_clock_trees -synthesized (mark synthesized attributes on clock trees)
match_net_delay_custom
mcmm_set_link_target_lib
mem
menu
menubutton
merge_abstract -all_blocks (Create abstract view for all blocks)
merge_abstract -blocks 
merge_abstract -force (Force merging regardless of the state of the views)
merge_abstract -host_options 
merge_clock_gates -clocks (List of clocks)
merge_objects
merge_stream -cell_log_file 
merge_stream -compress_gds (GZIP the output GDSII file)
merge_stream -format 
merge_stream -merge_cell_shapes (Merge shapes of same name cells)
merge_stream -merge_conflict_suffix 
merge_stream -merge_files 
merge_stream -oasis_compression_level 
merge_stream -rename_cell 
merge_stream -rename_conflicting_cell 
merge_stream -top_cell (Set the top cell name)
merge_stream -units (User defined database-unit)
merge_stream -verbose (Enable detailed messaging)
message
mkdir_fresh
modify_busplan -add_guide (add a guide element to the busplan)
modify_busplan -add_register (add a virtual register element to the busplan)
modify_busplan -after (order or insert elements in the busplan after this one)
modify_busplan -balance_registers (modify busplan so each branch has equal number of registers)
modify_busplan -before (insert elements in the bus before this one)
modify_busplan -change_rule (change the net estimation rule for this busplan)
modify_busplan -load_launch_capture_budget 
modify_busplan -location (where to place the object)
modify_busplan -move_element (change an element's location)
modify_busplan -name (name of added element)
modify_busplan -reconnect_elements 
modify_busplan -remove_elements 
modify_busplan -rename (new name of busplan)
modify_rp_groups -add_columns 
modify_rp_groups -add_rows (specifies it will insert rows into rp groups)
modify_rp_groups -flip_column 
modify_rp_groups -flip_row 
modify_rp_groups -remove_columns 
modify_rp_groups -remove_rows 
modify_rp_groups -swap_columns 
modify_rp_groups -swap_rows 
module_list
module_list_0
move_block -force (override a modified destination block)
move_block -from_block (Source block objects or name)
move_block -to_block (Destination block name [libName:]blockName[/labelName][.viewName])
move_block_origin -design (Top design for finding objects)
move_block_origin -to (The coordinate to move the block origin to)
move_lib -force (override the destination library even if it is modified)
move_lib -from_lib (Source library)
move_lib -to_lib (Name of destination library)
move_objects -delta (delta by which the objects are to be moved)
move_objects -from (move from point)
move_objects -group (rotate as group)
move_objects -rotate_by (amount to rotate by: 
move_objects -to (move to point)
move_objects -x (new x-coordinate of the left edge of the object)
move_objects -y (new y-coordinate of the bottom edge of the object)
my1272fill
myevalcmd
myevalmsg
new_win
nypd_toolbox
open_attachment -mode (mode for opening the file)
open_attachment -of_object 
open_block -check (return block if it is already in memory)
open_block -edit (open block in edit mode)
open_block -read (open block in read mode)
open_block -ref_libs_for_edit (Open module ref libs for edit)
open_drc_error_data -checkonly (return error datda if it is already in memory)
open_drc_error_data -file_name 
open_drc_error_data -readonly (open error data in read-only mode)
open_drc_error_data -readwrite (open error data in read-write mode)
open_ems_database
open_lib -edit (Open library for edit)
open_lib -read (Open library for read)
open_lib -ref_libs_for_edit (Open module ref libs for edit)
optimize_dft -clock_aware (bool)
optimize_rdl_routes -layer 
optimize_rdl_routes -nets 
optimize_rdl_routes -nets_in_file 
optimize_rdl_routes -objects 
optimize_rdl_routes -reserve_power_resources (false|true)]
optimize_routability -check_drc_rules (Print information about DRC rules)
optimize_routability -drc_rules (DRC rules)
optimize_routability -flip (Flip cells)
optimize_routability -keepout_width (Keepout width in microns)
optimize_routability -layer_rules 
optimize_routability -remove_keepouts (Remove all keepouts added by optimize_routability)
optimize_routability -route (Perform eco route)
optimize_routes -max_detail_route_iterations 
optimize_routes -nets (the nets to be optimized)
optimize_routes -reroute_all_shapes_in_nets (false|true)]
option
orderBBOX
origin_to_lego
pa_create_parade_cmd_file
pack
panedwindow
parallel_execute -commands_only (Only commands are given without log files)
parallel_execute -list_allowed_commands 
parallel_execute -max_cores (Maximum number of cores for child processes: 
parseOptions
parse_proc_arguments -args (Argument list to be parsed)
part
patch_gui_files
pdintent2spec -blocks (User list of blocks to perform pdintent diff)
pdintent2spec -pd_intent_file_path 
pin_order
pin_order_hor
pkg_mkIndex
place
place_eco_cells -cells (List of cells)
place_eco_cells -channel_aware (channel_aware)
place_eco_cells -displacement_threshold 
place_eco_cells -eco_changed_cells (place the cells changed by ECO operations)
place_eco_cells -fixed_connection_net_weight 
place_eco_cells -honor_user_net_weight 
place_eco_cells -ignore_pin_connection 
place_eco_cells -legalize_mode 
place_eco_cells -legalize_only (only perform legalization on given cells that already have locations)
place_eco_cells -max_displacement_threshold 
place_eco_cells -max_fanout 
place_eco_cells -no_legalize (do not legalize)
place_eco_cells -remove_filler_references 
place_eco_cells -unplaced_cells (place all unplaced cells)
place_eco_cells -use_virtual_connection 
place_freeze_silicon -cells (List of cells)
place_freeze_silicon -lib_cells_for_filler_recovery 
place_freeze_silicon -map_spare_cells_only 
place_freeze_silicon -min_filler_distance 
place_freeze_silicon -no_spare_cell_swapping 
place_freeze_silicon -write_map_file 
place_io -bump_assignment_only 
place_io -include_unassigned_pads 
place_io -incremental (place IO drivers according to user specified locations)
place_io -io_guide 
place_io -match_terminals_to_bumps 
place_io -matching_types 
place_io -pad_assignment_file 
place_io -rule (specify name of routing rule)
place_opt -from (Run subset of place_opt flow starting with specified step)
place_opt -list_only (List sub-steps of place_opt flow [ initial_place initial_drc initial_opto final_place final_opto ])
place_opt -to (Run subset of place_opt flow ending with specified step)
place_pins -cells (Place block pins on selected block cells.)
place_pins -exclude_nets (Place all the block pins except those nets.)
place_pins -nets (Place block pins that connected to nets.)
place_pins -nets_to_exclude_from_routing 
place_pins -pins (Place selected block pins.)
place_pins -ports (Place selected top level terminals.)
place_pins -self (Only place pins on current design)
place_pins -use_existing_routing 
pop_up_objects -blocks 
pop_up_objects -cells 
pp_gcbb
pre_stamp_stepdown_clock
print_debug
print_error
print_fatal
print_info
print_log
print_log_raw
print_message_info -ids (List of message ids to report)
print_message_info -summary (Summarize diagnostics)
print_suppressed_messages
print_time -msg (User message)
print_time -stage (Print header type time stamp for stage)
print_time -tag (Start/finish type: 
print_vars -print (Print the result)
print_vars -regexp (Regular expression filter)
print_vars -value (Print value too)
print_warning
printenv
printvar -application (Display application variables only)
printvar -user_defined (Display user-defined variables only)
proc_args
proc_body
process_ptlr_collaterals
promote_clock_data -auto_clock (automatically associate clocks in blocks: 
promote_clock_data -balance_points (promote clock balance points)
promote_clock_data -cells (Cells of physical hierarchy)
promote_clock_data -mesh_annotations (promote mesh annotations)
promote_constraints -auto_clock (automatically associate clocks in blocks: 
promote_constraints -cts (promote Clock Tree Synthesis constraints)
promote_constraints -force (don't error out when constraints mismatch with the design)
propagate_3d_connections -check_only (bool)
propagate_3d_connections -nets 
propagate_3d_matching_types -check_only (bool)
propagate_3d_matching_types -force (bool)
propagate_3d_matching_types -from 
propagate_3d_matching_types -matching_types 
propagate_3d_matching_types -to 
propagate_pin_mask_constraint
propagate_pin_mask_to_via_metal -block (Block to be processed for via lower-overhang color changes)
propagate_switching_activity -corners (List of corners in which to propagate)
propagate_switching_activity -modes (List of modes in which to propagate)
propagate_switching_activity -scenarios 
prune_list
push_down_clock_trunks -clock (Clock)
push_down_objects -cells 
push_rdl_routes -bounding_box 
push_rdl_routes -direction (up|down|left|right)]
push_rdl_routes -layer 
push_rdl_routes -mode (net|neighbor)] (specifies the pushing mode (default net): 
push_rdl_routes -nets 
push_rdl_routes -nets_in_file 
push_rdl_routes -objects 
push_rdl_routes -sweep_range 
pv_import_library_attributes
pwd
pwrlite_estimate_power
pwrlite_gen_saif_all_units -delay_model (optional arg; default: zero; delay model to be used for gate level sim <string>)
pwrlite_gen_saif_all_units -outdir (required arg; )
pwrlite_gen_saif_all_units -testname (optional arg; test name to include in testlist )
pwrlite_gen_saif_all_units -verilog (optional arg; default: write out a netlist; verilog pointer <file> )
pwrlite_gen_unit_testlists -outdir (optional arg; )
pwrlite_gen_unit_testlists -testlist (required arg; )
pwrlite_gen_unit_testlists -testname (optional arg; test name to include in testlist )
pwrlite_generate_netattr
pwrlite_generate_saif
pwrlite_get_active_power
pwrlite_get_clock_power
pwrlite_open_file
pwrlite_process_testlist_file
pwrlite_rdt_process_args
pwrlite_report_power
pwrlite_saif_est_power
query_objects -class (If object_spec is a name, this is its class)
query_objects -truncate (Truncate display to n elements.)
query_objects -verbose (Display type of each object)
query_qor_snapshot -and (filters to use AND logic with)
query_qor_snapshot -columns (columns to show in output)
query_qor_snapshot -directory 
query_qor_snapshot -display (display interactive GUI browser (do not generate text/html output))
query_qor_snapshot -filters (filters to apply to timing paths)
query_qor_snapshot -group_by (column to group results by: 
query_qor_snapshot -name (QoR snapshot name )
query_qor_snapshot -output_file 
query_qor_snapshot -sort_by (column to sort results by)
query_qor_snapshot -type (min or max: 
quit
quit!
radiobutton
raise
rb
rdt_add_additional_link_libs
rdt_add_env_var_to_result
rdt_add_post_stage
rdt_add_post_step
rdt_add_pre_stage
rdt_add_pre_step
rdt_add_priority_path
rdt_add_priority_path_cleanly
rdt_add_stage
rdt_add_step
rdt_all_steps_done
rdt_apr_generate_pv_cmd_file
rdt_call_configulate_local -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_call_configulate_local -cmdline (Cmd to supply to configulate_local)
rdt_call_configulate_local -xml (Path o the xml file)
rdt_call_polaris
rdt_check_stop_after
rdt_constrain_visa_logic -scenario (Running for for specific scenario)
rdt_continue_on_error
rdt_convert_seconds
rdt_convert_to_seconds
rdt_convert_units -from (current unit: 
rdt_convert_units -to (units to be converted to: 
rdt_convert_units -value (Value to be converted)
rdt_copy_collateral -dssc_ver (MW Ver in DSSC for closure)
rdt_copy_collateral -file_type (file type (Eg spef,vg,upf)
rdt_copy_collateral -flow (Flow to copy)
rdt_copy_collateral -output_dir (outputs directory)
rdt_copy_collateral -stage (Stage to copy)
rdt_custom_procs
rdt_done -stage (stage name, defaults to global var G_CURRENT_STAGE)
rdt_dont_use
rdt_dump_xml_files
rdt_error_handler
rdt_fail_on_error
rdt_fix_min_lib_nom_process
rdt_fix_min_libs_nom_process
rdt_format_configulate_lib_result
rdt_gen_parallel_rpts -run_dir (stage name)
rdt_gen_parallel_rpts -stage (stage name)
rdt_gen_visa_hier_report -stage (Stage Tag)
rdt_generate_rdt_log
rdt_get_all_corners -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_all_corners -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_all_modes -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_all_modes -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_all_scenarios -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_all_scenarios -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_analysis_type_from_corner
rdt_get_block_data -block (Block to search for block_data files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_block_data -block_name (Blocks to get data for.Eg func_max,max. Default to all. Can give comma separated list)
rdt_get_block_data -debug (Print out the variables getting set to help debug)
rdt_get_block_data -keys (Keys to get block data for.Eg stdlib_type. Default to all. Can give comma separated list)
rdt_get_block_data -noheaders (Print out/return only the value without the block_data+key information)
rdt_get_block_data -set_gvars (Set G_BLOCK_DETAILS for RDT instead of returning data)
rdt_get_block_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_block_list -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_block_list -fval (Keys to get block data for.Eg stdlib_type. Default to all. Can give comma separated list)
rdt_get_block_list -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_corner_default_voltage
rdt_get_corner_of_scenario
rdt_get_current_corner
rdt_get_current_mode
rdt_get_current_scenario
rdt_get_default_scenario
rdt_get_derate_data -alt (Filter list of derate files by alt)
rdt_get_derate_data -analysis_type 
rdt_get_derate_data -block (Default block is G_DESIGN if block doesnt exist)
rdt_get_derate_data -corner (Filter list of derate files by corner)
rdt_get_derate_data -derate (Filter list of derate files by derate)
rdt_get_derate_data -flow (Filter list of derate files by flow filter)
rdt_get_derate_data -grid_size (Filter list of derate files by grid size)
rdt_get_derate_data -model_type (Filter list of derate files by model_type)
rdt_get_derate_data -variant (Filter list of derate files by variant)
rdt_get_derate_data -view (Filter list of derate files by view)
rdt_get_derate_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_dont_use_list -groupfile ()
rdt_get_dont_use_reasons -groupfile ()
rdt_get_file_history
rdt_get_flow_status
rdt_get_g_corner_details_value
rdt_get_global_voltages -corner (Corners search for rail information from for.Eg vcclow,vcchigh,nominal. Default to all. Can give comma separated list)
rdt_get_lib_attribute_data -alt (Filter list of library attribute files by alt)
rdt_get_lib_attribute_data -block (Default block is G_DESIGN if block doesnt exist)
rdt_get_lib_attribute_data -flow (Filter list of library attribute files by derate)
rdt_get_lib_attribute_data -model_type (Filter list of library attribute files by model_type)
rdt_get_lib_attribute_data -variant (Filter list of library attribute files by variant)
rdt_get_lib_attribute_data -view (Filter list of library attribute files by view)
rdt_get_lib_attribute_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_lib_basename
rdt_get_lib_data -alt_type (Filter list on alternate libs. Defaults to alt type default)
rdt_get_lib_data -block (Default block is G_DESIGN if block doesnt exist)
rdt_get_lib_data -cell_type (Filter list of libraries by cell_type)
rdt_get_lib_data -corner (Corner to get libs for. Based on pvconditions.xml file)
rdt_get_lib_data -file (Filter list of libraries by file name)
rdt_get_lib_data -flow (Flow to get libs for. Based on flow_settings.xml file)
rdt_get_lib_data -headers (Control the fields return for libraries, after applying filters)
rdt_get_lib_data -lib (Filter list of libraries based on lib_type)
rdt_get_lib_data -model_type (Filter list of libraries by model_type)
rdt_get_lib_data -variant (Filter list of libraries by variants)
rdt_get_lib_data -view (Filter list of libraries by view)
rdt_get_lib_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_lib_settings_data -alt (Set global variables for library setup based on alt)
rdt_get_lib_settings_data -block (Default block is G_DESIGN if block doesnt exist)
rdt_get_lib_settings_data -flow (Set global variables for library setup based on flow)
rdt_get_lib_settings_data -headers (Setting to return a value for. For eg view. Required)
rdt_get_lib_settings_data -model_type (Set global variables for library setup based on model_type)
rdt_get_lib_settings_data -scenario (Set global variables for library setup based on scenario)
rdt_get_lib_settings_data -settings_label 
rdt_get_lib_settings_data -view (Set global variables for library setup based on view)
rdt_get_lib_settings_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_lib_ver_data -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block.)
rdt_get_lib_ver_data -library (Library for which to get version information about. Default is all.)
rdt_get_lib_ver_data -manifest (Instead of providing path to the library, provide path to the manifest file instead.)
rdt_get_lib_ver_data -print_libname (Append the lib_name for each library)
rdt_get_lib_ver_data -section (Section (subcategory) of each library to get version information about. Examples are path, attribute and derate. Default is all.)
rdt_get_lib_ver_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required.)
rdt_get_library_list -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block.)
rdt_get_library_list -work_dir (Will default to WARD. Add a full path to directory if a new one is required.)
rdt_get_license -max_attempts 
rdt_get_license -wait (Time to wait between each query (default 60 seconds))
rdt_get_logfile_length
rdt_get_logscan_pointer
rdt_get_min_max_corners_of
rdt_get_mode_of_scenario
rdt_get_parallel_rpts_done
rdt_get_parallel_rpts_pending
rdt_get_parallel_rpts_running
rdt_get_pdk_data -fval (Filters to select the file by. Eg -fval view=tf,model_type=icc)
rdt_get_pdk_data -headers (Data to return from the xml file based on the filters. Defaults to the path and file)
rdt_get_pdk_data -separator (Separator to use for configulate_local call)
rdt_get_pdk_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_pdk_settings -block (Default block is G_DESIGN if block doesnt exist)
rdt_get_pdk_settings -headers (List of headers to return values for using the filters)
rdt_get_pdk_settings -model_type (Filter list of derate files by model_type)
rdt_get_pdk_settings -stdlib_type (Filter list of derate files by stdlib_type)
rdt_get_pdk_settings -technology (Filter list of derate files by technology )
rdt_get_pdk_settings -view (Filter list of derate files by view)
rdt_get_pdk_settings -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_pvc -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_pvc -corner (Corners to get pvc data for.Eg vcclow,vcchigh,nominal. Default to all. Can give comma separated list)
rdt_get_pvc -debug (Print out the variables getting set to help debug)
rdt_get_pvc -noheaders (Print out/return only the value without the corner+key information)
rdt_get_pvc -set_gvars (Set G_CORNER_DETAILS for RDT instead of returning data)
rdt_get_pvc -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_rail_voltage -corner (Corners search for rail information from for.Eg vcclow,vcchigh,nominal. Default to all. Can give comma separated list)
rdt_get_rail_voltage -min (Returns min voltage. If format is vcc:1.05:1.15,min returns second field (1.15). If no second field, it returns first field(1.05))
rdt_get_rail_voltage -rail (Rail to search for Voltage)
rdt_get_relevant_scenario_data -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_relevant_scenario_data -keys (Keys to get scenario data for.Eg analysis_type. Can give comma separated list)
rdt_get_relevant_scenario_data -scenario (Scenarios to get data for.Eg func_max,max. Default to all. Can give comma separated list)
rdt_get_relevant_scenario_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_relevant_scenarios -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_relevant_scenarios -flow (name of the flow to query in MCMM)
rdt_get_relevant_scenarios -primary (whether to query for the primary scenario)
rdt_get_relevant_scenarios -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_scenario_data -block (Block to search for pv conditions files for. Embedded in name of xml file. Defaults to environment variable block)
rdt_get_scenario_data -debug (Print out the variables getting set to help debug)
rdt_get_scenario_data -keys (Keys to get scenario data for.Eg analysis_Type. Default to all. Can give comma separated list)
rdt_get_scenario_data -noheaders (Print out/return only the value without the scenario+key information)
rdt_get_scenario_data -scenario (Scenarios to get data for.Eg func_max,max. Default to all. Can give comma separated list)
rdt_get_scenario_data -set_gvars (Set G_SCENARIO_DETAILS for RDT instead of returning data)
rdt_get_scenario_data -work_dir (Will default to WARD. Add a full path to directory if a new one is required)
rdt_get_scr_proc_name
rdt_get_step_metrics
rdt_get_subflow_load_stage
rdt_icv_polaris
rdt_is_parent_stage_complete
rdt_is_step_done
rdt_is_valid_stage
rdt_is_xml_file_empty -xml (XML File to test if empty)
rdt_kill_parallel_rpts
rdt_lib_setup
rdt_list_flow -sources (Prints the source file of the step procedures)
rdt_list_signoff_stages
rdt_list_stages
rdt_list_steps -print (Enable formated printing)
rdt_list_steps -sources (Prints the source file of the step procedures)
rdt_logscan_fail
rdt_lower_scons_with_hier
rdt_map_LV_syn_clock
rdt_mark_stage -duration (step duration)
rdt_mark_stage -memory (step memory used)
rdt_mark_stage -stage (stage name)
rdt_mark_stage -step_sequence 
rdt_mem_diff
rdt_mem_get_stamp
rdt_mem_set
rdt_mem_to_string
rdt_parse_block_setup
rdt_print_configulate_calls
rdt_print_configulate_gvars
rdt_print_error
rdt_print_gvar_history
rdt_print_info
rdt_print_proc_source
rdt_print_reports
rdt_print_scripts_search_path
rdt_print_step_footer
rdt_print_step_header
rdt_print_warn
rdt_printvar
rdt_proc_source
rdt_record_procs
rdt_remove_stage -flow (The name of the flow to modify (apr, syn, etc))
rdt_remove_stage -stage (The stage name to remove)
rdt_remove_step -name (The stage.step to remove)
rdt_reorder_link_library_with_max_lib_first
rdt_replace_cornerdetails
rdt_replace_cornerdetails_dotprocess
rdt_report_dont_use -cell (Library cell name to report dont_use reason)
rdt_report_stage_status
rdt_reset_logscan_pointer -line (Line number to set)
rdt_reset_logscan_pointer -unset (unset pointer)
rdt_reset_stage
rdt_return_lib_vt_type
rdt_run_CheckDiskSpace
rdt_run_for_active_scenarios
rdt_run_for_all_scenarios
rdt_run_logscan -aux_rules (auxiliary rules file if present, uses ${-aux_rules}.rules)
rdt_run_logscan -check_only (Only check whether logscan files present)
rdt_run_logscan -logfiles (logfile(s) to run rule checks on)
rdt_run_logscan -rules (rules {sets rules file = ${-rules}.rules})
rdt_run_logscan -skip_logfile_header_lines 
rdt_run_logscan -summary_file (output summary file {default=${logfiles(0)}.sum})
rdt_run_lv
rdt_run_multiple_sessions -bits (Number of bits of Machine (for netbatch): 
rdt_run_multiple_sessions -mode (ICV jobs can run on local/netbatch: 
rdt_run_multiple_sessions -os (Machine operating system type(for netbatch): 
rdt_run_multiple_sessions -rundir (Directory where the fill job will run.  Default is {pwd}/)
rdt_run_pending_parallel_rpt
rdt_run_signoff
rdt_run_step
rdt_save_attributes -change_stage (set to update with stage_run status)
rdt_save_attributes -change_step (set to update with step_attr)
rdt_save_attributes -flow_status (returns the list of executed stages)
rdt_save_attributes -parent_run (Gets status from the parent run being executed. Useful for rdt parallel runs)
rdt_save_attributes -stage (stage name)
rdt_save_attributes -stage_run (set if stage has run successfully - only used if -change_stage is set)
rdt_save_attributes -step_attr (value for step attribute - only updated is -change_step is set)
rdt_scenario_timing_constraints -scenario (Loading timing constraints for specific scenario)
rdt_sd_scenario_path_care
rdt_set_mcmm_config
rdt_signoff_status -stage (Signoff stage to get status for)
rdt_source_if_exists -display (Displays the list of files with complete paths (without sourcing them) in the order they will be sourced)
rdt_source_if_exists -inclusive (Enabling this switch will source all the files found in seaach path)
rdt_source_if_exists -local (Sources the file locally, within the context of the executing procedure)
rdt_source_if_exists -require (Indicates the file is required)
rdt_source_if_exists -silent (Do not print any messages)
rdt_source_if_exists_in_scenario -display (Displays the list of files with complete paths (without sourcing them) in the order they will be sourced)
rdt_source_if_exists_in_scenario -inclusive (Enabling this switch will source all the files found in serach path)
rdt_source_if_exists_in_scenario -local (Sources the file locally, with-in the context of the executing procedure)
rdt_source_if_exists_in_scenario -require (Indicates the file is required)
rdt_source_if_exists_in_scenario -scenario (Scenario name)
rdt_source_if_exists_in_scenario -silent (Do not print any messages)
rdt_source_project_if_exists
rdt_split_text_line
rdt_start
rdt_status -leaf (Display leaf level status of the flow)
rdt_status -par_rpts (Display report information also)
rdt_status -stage (stage name)
rdt_step_run_status -change_stage (set to update with stage_run status)
rdt_step_run_status -change_step (set to update with step_attr)
rdt_step_run_status -stage (stage name)
rdt_step_run_status -stage_run (set if stage has run successfully - only used if -change_stage is set)
rdt_step_run_status -step_attr (value for step attribute - only updated is -change_step is set)
rdt_step_search_and_insert
rdt_timing_constraints -scenario (Loading timing constraints for specific scenario)
rdt_update_pv_search_path
rdt_visa_additional_mco
rdt_visa_extract_visa_hierarchy
rdt_visa_extract_visa_level
rdt_visa_get_probe_signal
rdt_visa_physical_report
rdt_visa_rtl_check
rdt_visa_trace_check_iso_levelshifter
rdt_visa_trace_connectivity
rdt_visa_trace_connectivity_return_pin
rdt_wrap -body (The body of the procedure to create)
rdt_wrap -disable (This is to disable a pre or post procedure at block level)
rdt_wrap -post (This is a post procedure)
rdt_wrap -pre (This is a pre procedure)
rdt_wrap -stage (The name of the stage to create the pre or post procedure for)
rdt_wrap -step (The name of the step to create the pre or post procedure for)
rdt_xml_2_mcmm_config
rdt_zip_files -logs (enabling this option zips the log files)
rdt_zip_files -reports (enabling this option zips the reports)
rdt_zip_files -stage (stage name)
read_aif -ignore_assign_nets (Only the bumps will be placed ignoring net assignment)
read_aif -pad_to_ref_list 
read_aif -use_port_name (Net connection of the bump will be used as port name)
read_cell_expansion -input (Specify the file name for output)
read_cell_expansion -scale_factor (Specify the differnce in units between tools)
read_def -add_def_only_objects 
read_def -convert_sites 
read_def -design (Top design for finding objects)
read_def -no_incremental (Removes all pre-existing physical annotations before reading in the physical information in the DEF file)
read_def -syntax_only (Only do syntax/semantic checks)
read_def -traverse_physical_hierarchy 
read_drc_error_file -drc_type (Specify type of the drc error file (default: calibre))
read_drc_error_file -error_data (Specify the name of error data (default: <name of block>)))
read_drc_error_file -file (Specify the name of input file)
read_lib_package -destination 
read_lib_package -overwrite (Overwrites the existing library, if the unpacked library has same name)
read_name_map
read_net_estimation_rules -filename (name of XML file to read)
read_ocvm -corners (List of corners)
read_parasitic_tech -layermap 
read_parasitic_tech -name (Parasitic tech model name)
read_parasitic_tech -tlup (TLU+ files to read)
read_parasitics -block (block name to read spef. If no specify, it is for current design block)
read_parasitics -corner_spef 
read_parasitics -validate (do validation)
read_pin_constraints -file_name (Specifies the constraint file name to read-in)
read_saif -corners (Get activity for specified corners)
read_saif -exclude_sdpd (Exclude SDPD information while merging the SAIF files)
read_saif -modes (Get activity for specified modes)
read_saif -nocase (Find objects ignoring name case)
read_saif -normalize (false|true)]
read_saif -path (Name of the target instance on which activity is to be annotated)
read_saif -scenarios (Scenarios for which to annotate SAIF)
read_saif -strip_path 
read_sdc -echo (Echo all commands)
read_sdc -syntax_only (Only do syntax/semantic checks)
read_sdc -version (SDC Version (default is latest): 
read_signal_em_constraints -encrypted (Specify the Encrypted em file to read)
read_signal_em_constraints -format (Specify the em file format, ITF by default: 
read_tech_file -convert_sites 
read_tech_lef -design (Top design for finding objects)
read_tech_lef -merge_action 
read_tech_lef -syntax_only (Only do syntax/semantic checks)
read_top_level_netlist -connections (Single text file containing information of all the connections in the system)
read_top_level_netlist -design_name (Name of top-level design)
read_top_level_netlist -format (Format of output top-level design (verilog or design))
read_top_level_netlist -ignore_blocks 
read_top_level_netlist -map_file (CSV file to map custom column names in connections file to standard Synopsys column names)
read_top_level_netlist -output (Name of output netlist file)
read_verilog -design (Design name)
read_verilog -library 
read_verilog -top (Top module name)
read_verilog_outline -allocation (Use allocation outline method)
read_verilog_outline -buffer_cells 
read_verilog_outline -dense_modules 
read_verilog_outline -depth (Dense module depth)
read_verilog_outline -design (Design name)
read_verilog_outline -glue_cell_count 
read_verilog_outline -keep_port_depth 
read_verilog_outline -large_threshold 
read_verilog_outline -leaf_cells 
read_verilog_outline -library 
read_verilog_outline -macro_cells 
read_verilog_outline -partition (Use partition outline method)
read_verilog_outline -port_modules 
read_verilog_outline -sparse_modules 
read_verilog_outline -target_block_size 
read_verilog_outline -target_cell_count 
read_verilog_outline -top (Top module name)
read_virtual_pad_file
rebind_block -verbose (Verbose messages)
reconnect_fishbone_style_power_switch -ack_pin_name 
reconnect_fishbone_style_power_switch -ctrl_pin_name 
reconnect_fishbone_style_power_switch -sw_cells 
reconstruct_topo
record_layout_editing -output (file name to output change)
record_layout_editing -start (start recording layout editing)
record_layout_editing -stop (stop recording layout editing)
record_signoff_eco_changes -compress (compress DEF/Verilog)
record_signoff_eco_changes -def (save DEF)
record_signoff_eco_changes -init (init DB for eco change recording)
record_signoff_eco_changes -input (pt eco solution file)
record_signoff_eco_changes -start (start eco change recording)
record_signoff_eco_changes -stop (stop eco change recording and save)
recover_rp_placement -all (Recover all RP groups)
recover_rp_placement -blockage (Consider blockages too and inflate BBOX of RP group)
recycle_programmable_spare_cells -cells (List of cells)
recycle_programmable_spare_cells -lib_cells_for_filler_recovery 
redirect -append (Append output to the file)
redirect -channel (Output to a Tcl channel)
redirect -compress (Compress when writing to file)
redirect -file (Output to a file (default))
redirect -tee (Tee output to the current output stream)
redirect -variable (Output to a variable)
redo -all (Redo to the most recent available state)
redo -check_only (Report result without doing anything)
redo -levels (Levels of commands to redo to)
redo -marker (Marker to redo to)
redo -silent (Print no messages)
refine_opt -end_points (Optimize specific end points in refine_opt flow)
refine_opt -from (Run subset of refine_opt flow starting with specified step)
refine_opt -list_only (List sub-steps of refine_opt flow [ initial_path_opt inc_place inc_opto final_path_opt ])
refine_opt -nets (Optimize specific nets in refine_opt flow)
refine_opt -path_groups (Optimize specific path groups in refine_opt flow)
refine_opt -to (Run subset of refine_opt flow ending with specified step)
refine_placement -congestion_effort 
refine_placement -coordinates 
refine_placement -effort (Placement effort (default medium): 
refine_placement -perturbation_level 
refresh_performance_via_ladder_constraints
refresh_via_ladders -nets (the nets for via ladder verification (default all))
remove_abstract
remove_annotated_check -all (Remove all annotated checks)
remove_annotated_check -clock (Clock rising or falling check: 
remove_annotated_check -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_annotated_check -fall (fall arc check value)
remove_annotated_check -from (List of from pins/ports)
remove_annotated_check -hold (hold arc sense)
remove_annotated_check -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_annotated_check -nochange_high (nochange_high arc sense)
remove_annotated_check -nochange_low (nochange_low arc sense)
remove_annotated_check -period (period arc sense)
remove_annotated_check -recovery (recovery arc sense)
remove_annotated_check -removal (removal arc sense)
remove_annotated_check -rise (rise arc check value)
remove_annotated_check -scenarios 
remove_annotated_check -setup (setup arc sense)
remove_annotated_check -to (List of to pins/ports)
remove_annotated_check -width (pulsewidth arc sense)
remove_annotated_delay -all (Remove all annotated delays)
remove_annotated_delay -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_annotated_delay -from (List of from pins/ports)
remove_annotated_delay -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_annotated_delay -scenarios 
remove_annotated_delay -to (List of to pins/ports)
remove_annotated_power -all (Remove annotation on all cells)
remove_annotated_power -scenarios 
remove_annotated_transition -all (Remove all annotated transitions)
remove_annotated_transition -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_annotated_transition -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_annotated_transition -scenarios 
remove_antenna_rules -library (The library to remove the antenna rules from)
remove_antenna_rules -name (The name of the rule to be deleted)
remove_attachments -of_object 
remove_attributes -name (Attribute name)
remove_attributes -objects (List of collections of objects)
remove_attributes -quiet (Suppress error messages)
remove_blackbox_timing
remove_block_pin_constraints -cells (Specifies the collection of blocks to remove pin constraints)
remove_block_pin_constraints -pin_spacing_control (Remove only the spacing control part of block pin constraints)
remove_block_pin_constraints -self (Remove pin constraints for current top design)
remove_blocks -force (remove block with un-saved data)
remove_bound_shapes -all (To remove all bound shapes)
remove_bound_shapes -force (To ignore locked status of the objects)
remove_bound_shapes -verbose (To print verbose information)
remove_boundary_cell_rules -all (Whether to remove all the boundary cell rules)
remove_boundary_cell_rules -at_va_boundary (Whether to remove the at va boundary rule)
remove_boundary_cell_rules -bottom_boundary_cells 
remove_boundary_cell_rules -bottom_left_inside_corner_cells 
remove_boundary_cell_rules -bottom_left_outside_corner_cell 
remove_boundary_cell_rules -bottom_right_inside_corner_cells 
remove_boundary_cell_rules -bottom_right_outside_corner_cell 
remove_boundary_cell_rules -bottom_tap_cell (Whether to remove library cell or design to be used for the bottom tap cell)
remove_boundary_cell_rules -do_not_swap_top_and_bottom_inside_corner_cell 
remove_boundary_cell_rules -insert_into_blocks (Whether to remove the insert into blocks rule)
remove_boundary_cell_rules -left_boundary_cell (Whether to remove library cell or design for the left side)
remove_boundary_cell_rules -min_horizontal_jog (Whether to remove the min horizontal jog rule)
remove_boundary_cell_rules -min_row_width (Whether to remove the min row width rule)
remove_boundary_cell_rules -mirror_left_boundary_cell 
remove_boundary_cell_rules -mirror_left_inside_corner_cell 
remove_boundary_cell_rules -mirror_left_outside_corner_cell 
remove_boundary_cell_rules -mirror_right_boundary_cell 
remove_boundary_cell_rules -mirror_right_inside_corner_cell 
remove_boundary_cell_rules -mirror_right_outside_corner_cell 
remove_boundary_cell_rules -no_1x (Whether to remove the no 1x rule)
remove_boundary_cell_rules -prefix (Whether to remove the end cap inst prefix)
remove_boundary_cell_rules -right_boundary_cell (Whether to remove library cell or design for the right side)
remove_boundary_cell_rules -separator (Whether to remove the end cap separator)
remove_boundary_cell_rules -tap_distance (Whether to remove the tap distance)
remove_boundary_cell_rules -top_boundary_cells (Whether to remove library cells or designs for the top side)
remove_boundary_cell_rules -top_left_inside_corner_cells 
remove_boundary_cell_rules -top_left_outside_corner_cell 
remove_boundary_cell_rules -top_right_inside_corner_cells 
remove_boundary_cell_rules -top_right_outside_corner_cell 
remove_boundary_cell_rules -top_tap_cell (Whether to remove library cell or design to be used for the top tap cell)
remove_bounds -all (To remove all bounds)
remove_bounds -force (To ignore locked status of the objects)
remove_bounds -verbose (To print verbose information)
remove_buffer -from (Starting driver for buffer removal)
remove_buffer -net (Net to remove buffers from)
remove_buffer_trees -all (remove all buffer trees)
remove_buffer_trees -from (a list of driver pins or nets for which buffer trees are to be removed)
remove_buffer_trees -hfs_fanout_threshold 
remove_buffer_trees -no_clustering (clsuering for negative sinks)
remove_buffer_trees -source_of (a list of sink pins for which buffer trees are to be removed)
remove_buffer_trees -verbose (verbose)
remove_buffers -from (Starting driver for buffer removal)
remove_buffers -net (Net to remove buffers from)
remove_bundle_pin_constraints -bundles 
remove_bundle_pin_constraints -cells (Specify  the  block cells on which the constraints are removed.)
remove_bundle_pin_constraints -self (Specifies that the constraints applied  to the toplevel block are removed.)
remove_bundles
remove_busplans -from (Remove part of an existing bus)
remove_case_analysis
remove_cell -all (Remove all cells)
remove_cell -design (Top design for finding objects)
remove_cell -force (To ignore locked status of the objects)
remove_cells -all (Remove all cells)
remove_cells -design (Top design for finding objects)
remove_cells -force (To ignore locked status of the objects)
remove_clock -all (Remove all clocks)
remove_clock_balance_groups -all (All clock balance groups)
remove_clock_balance_points -balance_points 
remove_clock_balance_points -clock (clocks)
remove_clock_balance_points -corners 
remove_clock_cell_spacings -clocks (List of clocks)
remove_clock_cell_spacings -lib_cells 
remove_clock_drivers -prefix (Remove instances with this name prefix only)
remove_clock_gating_check -fall (Only fall checks are considered)
remove_clock_gating_check -high (Check is for the high level of the clock)
remove_clock_gating_check -hold (Remove clock gating hold time)
remove_clock_gating_check -low (Check is for the low level of the clock)
remove_clock_gating_check -rise (Only rise checks are considered)
remove_clock_gating_check -setup (Remove clock gating setup time)
remove_clock_groups -all (Remove all clock groups)
remove_clock_groups -asynchronous (Specify asynchronous clock groups)
remove_clock_groups -exclusive (Specify logically exclusive clock groups)
remove_clock_groups -logically_exclusive (Specify logically exclusive clock groups)
remove_clock_groups -name (List of clock group names)
remove_clock_groups -physically_exclusive 
remove_clock_latency -clock (List of relative clocks)
remove_clock_latency -corners (remove latency for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_clock_latency -modes (remove latency for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_clock_latency -scenarios 
remove_clock_latency -source (Specify clock source latency)
remove_clock_routing_rules -clocks (List of clocks)
remove_clock_routing_rules -default_rule (remove default routing rule)
remove_clock_routing_rules -net_type (net type in the clock tree: 
remove_clock_routing_rules -nets (List of nets)
remove_clock_routing_rules -rule (non-default routing rules)
remove_clock_sense -all (Remove all defined clock senses)
remove_clock_sense -clocks (List of clocks)
remove_clock_skew_groups
remove_clock_transition -corners (remove clock transition for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_clock_transition -modes (remove clock transition for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_clock_transition -scenarios 
remove_clock_tree_options -all (All target skew/latency)
remove_clock_tree_options -clocks (List of clocks)
remove_clock_tree_options -copy_exceptions_across_modes 
remove_clock_tree_options -corners (Corner list)
remove_clock_tree_options -target_latency (target latency)
remove_clock_tree_options -target_skew (target skew)
remove_clock_tree_reference_subset -clocks (List of clocks)
remove_clock_trees -clock_repeaters_only 
remove_clock_trees -clocks (List of clocks)
remove_clock_trees -keep_ideal_clock_attributes 
remove_clock_trees -keep_struct (keep structure intact)
remove_clock_trunk_endpoints -clock (Clocks)
remove_clock_trunk_endpoints -corners (Corners)
remove_clock_uncertainty -corners (remove uncertainty for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_clock_uncertainty -fall (Inter-clock uncertainty is for falling clock edge)
remove_clock_uncertainty -fall_from 
remove_clock_uncertainty -fall_to 
remove_clock_uncertainty -from (List of from clocks)
remove_clock_uncertainty -hold (Clock uncertainty is for hold checks)
remove_clock_uncertainty -modes (remove uncertainty for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_clock_uncertainty -rise (Inter-clock uncertainty is for rising clock edge)
remove_clock_uncertainty -rise_from 
remove_clock_uncertainty -rise_to 
remove_clock_uncertainty -scenarios 
remove_clock_uncertainty -setup (Clock uncertainty is for setup checks)
remove_clock_uncertainty -to (List of to clocks)
remove_clocks -all (Remove all clocks)
remove_colors
remove_constraint_groups -all (To remove all constraint groups)
remove_corners -all (Remove all corners)
remove_custom_shields -keep_session (false|true)]
remove_custom_shields -nets (collection of nets)
remove_data_check -all (Remove all checks)
remove_data_check -clock (Clock at the related pin/port of the check)
remove_data_check -corners (set data check for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_data_check -fall_from 
remove_data_check -fall_to 
remove_data_check -from (From pin or port for check)
remove_data_check -hold (Remove hold check)
remove_data_check -modes (set data check for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_data_check -rise_from 
remove_data_check -rise_to 
remove_data_check -scenarios 
remove_data_check -setup (Remove setup check)
remove_data_check -to (To pin or port for check)
remove_density_rules -all (To remove all density rules)
remove_density_rules -library (Library)
remove_density_rules -tech (Tech)
remove_dff_trace_filters -all (remove all filters for the specified blocks)
remove_dff_trace_filters -blocks (List of block names to apply to this filter set)
remove_dff_trace_filters -patterns (List of patterns to remove)
remove_dff_trace_filters -type (type of filter: net or pin: 
remove_disable_clock_gating_check
remove_disable_timing -from (From pin on cell)
remove_disable_timing -loop_break (indicate whether constraints coming from tool, not user)
remove_disable_timing -to (To pin on cell)
remove_drc_error_data -force (Remove the error data even if there are multiple pending opens)
remove_drc_error_types -error_data 
remove_drc_errors -error_data 
remove_drive_resistance -corners (remove drive resistance for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_drive_resistance -modes (remove drive resistance for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_drive_resistance -scenarios 
remove_driving_cell -clock (Transition is relative to this clock)
remove_driving_cell -clock_fall (Transition is relative to falling edge of the clock)
remove_driving_cell -corners (remove driving cell for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_driving_cell -fall (Set fall driving_cell info)
remove_driving_cell -max (Set maximum driving_cell info)
remove_driving_cell -min (Set minimum driving_cell info)
remove_driving_cell -modes (remove driving cell for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_driving_cell -rise (Set rise driving_cell info)
remove_driving_cell -scenarios 
remove_duplicate_timing_contexts -analyze_only (only perform minimization analysis)
remove_duplicate_timing_contexts -exclude_group_path_directives 
remove_eco_bus_buffer_patterns -all (removed all)
remove_eco_bus_buffer_patterns -verbose (list removed patterns)
remove_eco_repeater -keep_net_name (net to keep)
remove_edit_groups -all (To remove all edit groups)
remove_edit_groups -force (To ignore locked status of the objects)
remove_edit_groups -verbose (To print verbose information)
remove_ems_rules -all (Remove all the user-defined rules)
remove_feedthroughs -cells (Specifies the collection of cells for feedthrough removal.)
remove_feedthroughs -include_original_feedthroughs 
remove_feedthroughs -nets (Specifies the collection of nets for feedthrough removal.)
remove_fill_cells -all (Remove all cells)
remove_floorplan_rules -all (removes all the floorplan rules)
remove_floorplan_rules -lib_cells 
remove_floorplan_rules -object_types 
remove_from_bound
remove_from_bundle -all (Remove all occurences of the object from the bundle)
remove_from_bundle -bundle 
remove_from_collection -intersect (removes objects from collection1 not found in object_spec)
remove_from_edit_group
remove_from_group
remove_from_io_guide
remove_from_io_ring
remove_from_matching_type -auto_fix (To remove all non-existent objects)
remove_from_multisource_clock_sink_group -name (group name of a set of sinks)
remove_from_multisource_clock_sink_group -sinks (list of clock sinks to be removed)
remove_from_net -force (To ignore locked status of the objects)
remove_from_net_bus
remove_from_pin_blockage
remove_from_pin_guide
remove_from_port_bus
remove_from_routing_corridor
remove_from_rp_group -blockage (Name of the blockage to be removed fromRP group)
remove_from_rp_group -cells (Cells to be removed from RP Group)
remove_from_rp_group -rp_group 
remove_generated_clock -all (Remove all generated clocks)
remove_generated_clocks -all (Remove all generated clocks)
remove_grids -all (Remove all the existing grids in the current design)
remove_groups -verbose (To print verbose information)
remove_host_options -all (Remove all defined hosts or pools)
remove_host_options -name (Name of host options to be removed)
remove_host_options -target (Target of host options to be removed: 
remove_ideal_latency -all (Remove all ideal latencies)
remove_ideal_latency -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_ideal_latency -fall (Fall ideal latency)
remove_ideal_latency -max (Max ideal latency)
remove_ideal_latency -min (Min ideal latency)
remove_ideal_latency -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_ideal_latency -rise (Rise ideal latency)
remove_ideal_latency -scenarios 
remove_ideal_network -all (Remove ideal_network for all objects)
remove_ideal_transition -all (Remove all ideal transitions)
remove_ideal_transition -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_ideal_transition -fall (Fall ideal transition)
remove_ideal_transition -max (Max ideal transition)
remove_ideal_transition -min (Min ideal transition)
remove_ideal_transition -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_ideal_transition -rise (Rise ideal transition)
remove_ideal_transition -scenarios 
remove_ignored_layers -all (Remove all ignored layers)
remove_ignored_layers -max_routing_layer (Remove max routing layer)
remove_ignored_layers -min_routing_layer (Remove min routing layer)
remove_ignored_layers -rc_congestion_ignored_layers 
remove_individual_pin_constraints -nets (remove constraints on block pins that connected to nets.)
remove_individual_pin_constraints -pins (Specifies the collection of pins to remove pin constraints)
remove_individual_pin_constraints -ports (Specifies the collection of ports to remove pin constraints)
remove_input_delay -clock (Relative clock; '' for no clock)
remove_input_delay -clock_fall (Delay is relative to falling edge of clock)
remove_input_delay -corners (remove input delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_input_delay -fall ( Specifies falling delay)
remove_input_delay -level_sensitive (Delay is from level-sensitive latch)
remove_input_delay -max ( Specifies maximum delay)
remove_input_delay -min ( Specifies minimum delay)
remove_input_delay -modes (remove input delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_input_delay -rise ( Specifies rising delay)
remove_input_delay -scenarios 
remove_io_guides -all (To remove all io_guides)
remove_io_guides -force (To ignore locked status of the objects)
remove_io_guides -verbose (To print verbose information)
remove_io_rings -all (To remove all io_rings)
remove_io_rings -force (To ignore locked status of the objects)
remove_io_rings -verbose (To print verbose information)
remove_keepout_margins
remove_layer_map_file -format (Layer mapping file format: Values: gds, starrc)
remove_layer_map_file -library 
remove_license -keep (Keep)
remove_licenses -keep (Keep)
remove_macro_constraints -align_pins_to_tracks 
remove_macro_constraints -alignment_grid (remove alignment grid)
remove_macro_constraints -alignment_orientation_set 
remove_macro_constraints -alignment_point (remove alignment point)
remove_macro_constraints -allowed_orientations 
remove_macro_constraints -preferred_location (remove preferred location)
remove_macro_relative_location -hierarchical (remove hierarchically)
remove_matching_types -all (To remove all matching types)
remove_matching_types -verbose (To print verbose information)
remove_max_capacitance -corners (remove DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_max_capacitance -modes (remove DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_max_capacitance -scenarios 
remove_max_fanout
remove_max_lvth_percentages
remove_max_time_borrow -corners (remove max_time_borrow for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_max_time_borrow -modes (remove max_time_borrow for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_max_time_borrow -scenarios 
remove_max_transition -corners (remove DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_max_transition -modes (remove DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_max_transition -scenarios 
remove_min_capacitance -corners (remove DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_min_capacitance -modes (remove DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_min_capacitance -scenarios 
remove_min_pulse_width -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_min_pulse_width -high (Applies value only to high clock signal level)
remove_min_pulse_width -low (Applies value only to low clock signal level)
remove_min_pulse_width -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_min_pulse_width -scenarios 
remove_modes -all (Remove all modes)
remove_modules -design (Design to remove module(s) from)
remove_multisource_clock_sink_groups
remove_multisource_clock_subtree_constraints -cells (list of cells to which constraints need to be applied)
remove_multisource_clock_subtree_constraints -clocks (remove all constraints from these clocks)
remove_multisource_clock_subtree_constraints -ignore_for_icg_reordering 
remove_multisource_clock_subtree_constraints -names (list of option set names from which constraints will be removed)
remove_multisource_clock_subtree_constraints -pins (list of pins to which constraints need to be applied)
remove_multisource_clock_subtree_constraints -target_level (add buffers to make all subtrees have this number of levels: 
remove_multisource_clock_subtree_options -clocks (remove entire option sets or options from these clocks)
remove_multisource_clock_subtree_options -corners (Corner list)
remove_multisource_clock_subtree_options -dont_merge_cells 
remove_multisource_clock_subtree_options -driver_objects (remove list of subtree root drivers (pins or ports))
remove_multisource_clock_subtree_options -max_total_wire_delay 
remove_multisource_clock_subtree_options -names (list of option sets which should get removed or removed from)
remove_multisource_clock_subtree_options -target_level (remove the target_level setting applied during level balancing)
remove_multisource_clock_tap_options -clocks (remove tap option sets belonging to these clocks)
remove_multisource_clock_tap_options -dont_merge_cells 
remove_multisource_clock_tap_options -names (list of option sets which should get removed)
remove_multisource_global_clock_trees -nets (remove instances in the forward cone of these nets only)
remove_multisource_global_clock_trees -prefix (remove instances with this prefix only)
remove_net -all (Remove all nets)
remove_net -design (Top design for finding objects)
remove_net -force (To ignore locked status of the objects)
remove_net -remove_shapes (To remove shapes owned by the nets)
remove_net_buses -all (Remove all net buses)
remove_net_buses -block (Specifies the block where the net bus is to be removed)
remove_net_buses -cell (Specifies the cell where the net bus is to be removed)
remove_net_buses -design (Top design for finding objects)
remove_net_buses -force (To ignore locked status of the objects)
remove_net_estimation_rules
remove_net_weight_effort -nets 
remove_nets -all (Remove all nets)
remove_nets -design (Top design for finding objects)
remove_nets -force (To ignore locked status of the objects)
remove_nets -remove_shapes (To remove shapes owned by the nets)
remove_objects -force (To ignore locked status of the objects)
remove_ocvm -coefficient (Only AOCVM coefficients are removed)
remove_ocvm -corners (List of corners)
remove_ocvm -derate (Only OCVM tables are removed)
remove_output_delay -clock (Relative clock; '' for no clock)
remove_output_delay -clock_fall (Delay is relative to falling edge of clock)
remove_output_delay -corners (remove output delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
remove_output_delay -fall ( Specifies falling delay)
remove_output_delay -level_sensitive (Delay is to level-sensitive latch)
remove_output_delay -max ( Specifies maximum delay)
remove_output_delay -min ( Specifies minimum delay)
remove_output_delay -modes (remove output delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
remove_output_delay -rise ( Specifies rising delay)
remove_output_delay -scenarios 
remove_path_group -all (Remove all path groups)
remove_path_groups -all (Remove all path groups)
remove_pg_mask_constraints -all (remove all existing PG mask constraints)
remove_pg_patterns -all (remove all existing PG patterns)
remove_pg_regions -all (remove all existing PG regions)
remove_pg_regions -force (To ignore locked status of the objects)
remove_pg_strategies -all (remove all existing PG strategies)
remove_pg_strategy_via_rules -all (remove all existing PG strategy via rules)
remove_pg_via_master_rules -all (remove all existing PG via rules)
remove_physical_objects -quiet (Suppress all messages)
remove_physical_objects -remove_disconnected (Remove disconnected objects)
remove_pin_blockages -all (To remove all pin blockages)
remove_pin_blockages -force (To ignore locked status of the objects)
remove_pin_blockages -verbose (To print verbose information)
remove_pin_guides -all (To remove all pin guides)
remove_pin_guides -force (To ignore locked status of the objects)
remove_pin_guides -verbose (To print verbose information)
remove_pins -design (Top design for finding objects)
remove_pins -force (To ignore locked status of the objects)
remove_pins_from_virtual_connection -object 
remove_pins_from_virtual_connection -pins (Specify pins/ports to be disconnected from the virtual connection)
remove_placement_blockages -all (To remove all placement blockages)
remove_placement_blockages -force (To ignore locked status of the objects)
remove_placement_blockages -verbose (To print verbose information)
remove_placement_spacing_rules -all (Remove all rules)
remove_placement_spacing_rules -label (Label name)
remove_placement_spacing_rules -rule (Label names)
remove_pop_up_object_options -object_type 
remove_port_buses -all (Remove all port buses)
remove_port_buses -block (Specifies the block where the port bus is to be removed)
remove_port_buses -cell (Specifies the cell where the port bus is to be removed)
remove_port_buses -design (Top design for finding objects)
remove_port_buses -force (To ignore locked status of the objects)
remove_ports -design (Top design for finding objects)
remove_ports -force (To ignore locked status of the objects)
remove_ports -remove_shapes (Remove pin shapes also)
remove_post_route_filler -hierarchical (hierarchical)
remove_post_route_filler -skip_filler_type_check 
remove_power_io_constraints -io_guide_list 
remove_pr_rules -all (To remove all pr rules)
remove_pre_stamp_stepdown_clock
remove_programmable_spare_cell_mapping_rule -all (remove all psc mapping rules)
remove_programmable_spare_cell_mapping_rule -psc_type_id (a list of psc type id)
remove_propagated_clock
remove_propagated_clocks
remove_push_down_object_options -object_type 
remove_qor_snapshot -all (Remove all QoR snapshots)
remove_qor_snapshot -name (Name of QoR snapshot to be removed)
remove_rail_integrity_strategy -all ((default false))
remove_redundant_shapes -initial_drc_from_input (false|true)]
remove_redundant_shapes -layers (collection of layers)
remove_redundant_shapes -nets (collection of nets)
remove_redundant_shapes -remove_dangling_shapes (false|true)]
remove_redundant_shapes -remove_floating_shapes (false|true)]
remove_redundant_shapes -remove_loop_shapes (false|true)]
remove_redundant_shapes -report_changed_nets (false|true)]
remove_redundant_shapes -route_types 
remove_route_aware_estimation
remove_routes -area_fill (remove routes with shape use as area fill)
remove_routes -core_wire (remove routes with shape use as core wire)
remove_routes -detail_route (remove routes with shape use as detail route)
remove_routes -follow_pin (remove routes with shape use as follow pin)
remove_routes -global_route (remove routes with shape use as global route)
remove_routes -keep_frozen_nets (keep routes of frozen nets with physical_status locked)
remove_routes -keep_pg_pins_at_boundary 
remove_routes -lib_cell_pin_connect 
remove_routes -macro_pin_connect (remove routes with shape use as macro pin connect)
remove_routes -net_types (remove routes by specified net types)
remove_routes -nets 
remove_routes -opc (remove routes with shape use as opc)
remove_routes -rdl (remove routes with shape use as rdl)
remove_routes -ring (remove routes with shape use as ring)
remove_routes -shield_route (remove routes with shape use as shield route)
remove_routes -stripe (remove routes with shape use as stripe)
remove_routes -user_route (remove routes with shape use as user route)
remove_routes -zero_skew (remove routes with shape use as zero Skew)
remove_routing_blockages -all (To remove all routing blockages)
remove_routing_blockages -force (To ignore locked status of the objects)
remove_routing_blockages -verbose (To print verbose information)
remove_routing_corridor_shapes -all (To remove all routing_corridor_shapes)
remove_routing_corridor_shapes -force (To ignore locked status of the objects)
remove_routing_corridor_shapes -verbose (To print verbose information)
remove_routing_corridors -all (To remove all routing_corridors)
remove_routing_corridors -force (To ignore locked status of the objects)
remove_routing_corridors -verbose (To print verbose information)
remove_routing_guides -all (Option to remove all routing guides)
remove_routing_guides -force (To ignore locked status of the objects)
remove_routing_guides -verbose (Show detailed information)
remove_routing_rules -all (To remove all non-default routing rules)
remove_routing_rules -verbose (To print verbose information)
remove_rp_group_options -allow_non_rp_cells (Remove option of placing non RP cells on RP groups )
remove_rp_group_options -allow_non_rp_cells_on_blockages 
remove_rp_group_options -anchor_corner (Remove Anchor Corner of RP group))
remove_rp_group_options -group_orientation (Remove Orientation of RP group))
remove_rp_group_options -rp_only_keepout_margin 
remove_rp_groups -all (Remove all RP groups)
remove_rp_groups -hierarchical (Remove RP groups recursively too. Applicable only with rp_group_list)
remove_sadp_track_rule -all (Removes all the track_rules)
remove_scan_def
remove_scenarios -all (Remove all scenarios)
remove_sdc -corners (Remove constraints on these corners)
remove_sdc -design (Remove constraints not associated with any mode, corner, or scenario)
remove_sdc -exclude 
remove_sdc -include 
remove_sdc -modes (Remove constraints on these modes)
remove_sdc -scenarios 
remove_sense -all (Remove all defined senses)
remove_sense -clocks (List of clocks)
remove_sense -type (Specify type of sense: Values: clock, data)
remove_shapes -force (To ignore locked status of the objects)
remove_shapes -verbose (To print verbose information)
remove_shapes_over_cell
remove_shaping_blockages -all (To remove all shaping blockages)
remove_shaping_blockages -force (To ignore locked status of the objects)
remove_shaping_blockages -verbose (To print verbose information)
remove_shield_association -nets (Shielded nets to remove from shield association)
remove_shield_association -objects 
remove_si_delay_analysis -aggressors 
remove_si_delay_analysis -ignore_arrival 
remove_si_delay_analysis -victims (List of nets as victim)
remove_signal_io_constraints -io_guide_list 
remove_site_arrays -all (To remove all site arrays)
remove_site_arrays -force (To ignore locked status of the objects)
remove_site_arrays -verbose (To print verbose information)
remove_site_defs -all (To remove all site defs)
remove_site_defs -library (Library for finding objects, default is current library's tech)
remove_site_defs -tech (Tech for finding objects, default is current library's tech)
remove_site_defs -verbose (To print verbose information)
remove_site_rows -all (To remove all site rows)
remove_site_rows -force (To ignore locked status of the objects)
remove_site_rows -verbose (To print verbose information)
remove_stdcell_fillers_with_violation -boundary 
remove_stdcell_fillers_with_violation -check_between_fixed_objects (false|true)]
remove_stdcell_fillers_with_violation -check_only (false|true)]
remove_stdcell_fillers_with_violation -name (the pattern of the names of the cell instances)
remove_stdcell_fillers_with_violation -post_eco (false|true)]
remove_supernet_exceptions -all (To remove all supernet transparent)
remove_supernet_exceptions -cells (Cells whose supernet transparent settings to remove)
remove_supernet_exceptions -pins (Pins whose supernet transparent settings to remove)
remove_supernets -design (Top design for finding objects)
remove_taps
remove_target_library_subset -objects (Hierarchical cells from which to remove subsets)
remove_target_library_subset -top (To remove the subset from the top block)
remove_tech
remove_terminals -force (To ignore locked status of the objects)
remove_terminals -verbose (To print verbose information)
remove_tie_cells -objects (cells or lib_cells for tie-cell removal)
remove_timing_paths_disabled_blocks
remove_topological_constraints -all (To remove all topological pin feedthrough constraints in the current block)
remove_topology_edges -all (Remove all topology_edges in the current block)
remove_topology_edges -verbose (To print verbose information)
remove_topology_nodes -all (Remove all topology_nodes in the current block)
remove_topology_nodes -verbose (To print verbose information)
remove_track_constraint -all (Remove all constraints in the block)
remove_track_constraint -block 
remove_track_constraint -layer 
remove_track_constraint -mask 
remove_track_constraint -track_direction 
remove_tracks -all (Remove all tracks)
remove_tracks -dir (Direction of tracks to remove: 
remove_tracks -force (To ignore locked status of the objects)
remove_tracks -layer (Routing layer of tracks to remove)
remove_tracks -verbose (To print verbose information)
remove_unambiguous_pins
remove_utilization_configurations -all (Remove all the existing utilization configurations)
remove_utilization_configurations -scope (Scope of the configuration: 
remove_via_defs -design (Top design for finding objects)
remove_via_defs -library (Library for finding objects)
remove_via_defs -tech (Tech for finding object)
remove_via_defs -verbose (To print verbose information)
remove_via_ladder_constraints -all (Remove constraints on all pins)
remove_via_ladder_constraints -pins (Collection or names of pins)
remove_via_ladder_rules
remove_via_ladders -nets (the nets for via ladder removal (default all))
remove_via_mappings -all (To remove all via mappings)
remove_via_mappings -from (From via pattern)
remove_via_mappings -to (To via pattern)
remove_via_regions -design (Top design for finding objects)
remove_via_regions -verbose (To print verbose information)
remove_via_rules -all (To remove all via rules)
remove_via_rules -design (Top design for finding objects)
remove_via_rules -library (Library for finding objects)
remove_via_rules -tech (Tech for finding object)
remove_vias -force (To ignore locked status of the objects)
remove_vias -verbose (To print verbose information)
remove_virtual_connections -all (Remove all the virtual connections)
remove_virtual_pads -all (all existing virtual pads)
remove_virtual_pads -coordinate 
remove_virtual_pads -layer (Specify layer of the virtual tap)
remove_virtual_pads -net (power or ground net)
remove_voltage_area_rules -all (To remove all voltage area rules)
remove_voltage_area_rules -verbose (To print verbose information)
remove_voltage_area_shapes -all (To remove all voltage_area_shapes)
remove_voltage_area_shapes -force (To ignore locked status of the objects)
remove_voltage_area_shapes -verbose (To print verbose information)
remove_voltage_areas -all (To remove all voltage_areas)
remove_voltage_areas -force (To ignore locked status of the objects)
remove_voltage_areas -verbose (To print verbose information)
rename
rename_block -force (override a modified destination block)
rename_block -from_block (Source block object or name)
rename_block -hierarchical (rename all block views in this design hierarchy)
rename_block -to_block (Destination block name [libName:]blockName[/labelName][.viewName])
rename_block -verbose (Verbose messages)
reopen_block -edit (re-open block in edit mode)
reopen_block -force (force block contents to be discarded)
reopen_block -new (discard block content and re-open in new mode)
reopen_block -read (re-open block in read mode)
replace_fillers_by_rules -adjacent_non_od_cells 
replace_fillers_by_rules -both_violation_tap 
replace_fillers_by_rules -constraint_fillers 
replace_fillers_by_rules -direct_replace 
replace_fillers_by_rules -eco_attribute 
replace_fillers_by_rules -eco_target 
replace_fillers_by_rules -exception_cells 
replace_fillers_by_rules -fillers_to_replace 
replace_fillers_by_rules -illegal_abutment 
replace_fillers_by_rules -layer (layer name)
replace_fillers_by_rules -left_end 
replace_fillers_by_rules -left_violation_tap 
replace_fillers_by_rules -max_constraint_length 
replace_fillers_by_rules -non_constraint_fillers 
replace_fillers_by_rules -non_constraint_left_fillers 
replace_fillers_by_rules -non_constraint_right_fillers 
replace_fillers_by_rules -patching_fillers 
replace_fillers_by_rules -prefix ( new filler prefix)
replace_fillers_by_rules -random_replace 
replace_fillers_by_rules -refill_table 
replace_fillers_by_rules -replace_abutment 
replace_fillers_by_rules -replacement_rule 
replace_fillers_by_rules -right_end 
replace_fillers_by_rules -right_violation_tap 
replace_fillers_by_rules -tap_cells (tap cells)
replace_fillers_by_rules -tap_distance_range 
replace_fillers_by_rules -target_fillers 
report_3d_chip_placement -all (Display all chips' attributes)
report_3d_chip_placement -chips (List of chips' names)
report_abstracts
report_active_debug_codes
report_activity -corners (List of corner names to report)
report_activity -driver (Report driver centric switching activity)
report_activity -modes (List of mode names to report)
report_activity -print_objects 
report_activity -rtl (Report RTL oriented switching activity)
report_activity -scenarios 
report_activity -show_zeros (do not suppress columns with only zeros)
report_activity -verbose (Print verbose output)
report_annotated_check -nosplit (Don't split lines if column overflows)
report_annotated_delay -cell (Report annotated cell arcs)
report_annotated_delay -min (Report annotated min arc delays)
report_annotated_delay -net (Report annotated net arcs)
report_annotated_delay -nosplit (Don't split lines if column overflows)
report_annotated_delay -significant_digits 
report_annotated_delay -summary (Display summary of annotated cell and net arcs)
report_annotated_power -list_annotated (List all annotated cells)
report_annotated_power -scenarios 
report_annotated_power -significant_digits 
report_annotated_power -supply_net 
report_annotated_transition -nosplit (Don't split lines if column overflows)
report_annotated_transition -significant_digits 
report_antenna_rules -library (The library to report the antenna rules from)
report_antenna_rules -mode (Report the antenna rules with the given mode set: 
report_app_options -as_list (Report options as list of name-value pairs)
report_app_options -block (Report options on this block)
report_app_options -global (Report options in the global scope)
report_app_options -non_default (Report options with values different from default)
report_app_var -only_changed_vars (Only report changed variables)
report_app_var -verbose (Show detailed information)
report_attachments -of_object 
report_attribute -application (Report application attributes as well)
report_attribute -class (User object class: 
report_attribute -compact (Compact design/object names to fit column width)
report_attribute -nosplit (Don't split lines if column overflows)
report_attributes -application (Report application attributes as well)
report_attributes -class (User object class: 
report_attributes -compact (Compact design/object names to fit column width)
report_attributes -nosplit (Don't split lines if column overflows)
report_block_pin_constraints -cells 
report_block_pin_constraints -self (Report pin constraints for current top design)
report_block_shaping -cells 
report_block_shaping -channel (Report on channels between blocks)
report_block_shaping -chimney_area (Report area of blocks in chimneys)
report_block_shaping -core_area_violations 
report_block_shaping -detour_estimate (Report estimated number of nets which detour blocks (assuming no feeds))
report_block_shaping -error_view (Error Browser output is written into this file)
report_block_shaping -flyline_crossing (Report number of block to block flyline crossings)
report_block_shaping -hierarchical (Report with multiple physical hierarchy)
report_block_shaping -orientation_violations 
report_block_shaping -overlaps (Report on block overlaps)
report_block_shaping -unaligned_pins_estimate 
report_block_shaping -utilization_from_target 
report_block_shaping -verbose 
report_block_to_top_map -blocks (report just the given block cells in the netlist)
report_block_to_top_map -path (report just for the given hierarchy path)
report_block_to_top_map -warnings (report on possible mapping problems)
report_block_to_top_map -waveform (show waveform of clocks in blocks)
report_boundary_cell_rules
report_bounds -nosplit (Don't split lines if column overflows)
report_bounds -significant_digits 
report_bounds -verbose (Show all bound info)
report_budget -blocks (Show the budget blocks and their associated options)
report_budget -busplans (Report on budget segments to be derived from busplans)
report_budget -fanin_segments 
report_budget -fanout_segments 
report_budget -hold_through 
report_budget -html (Dump analysis of budget with hyperlinks)
report_budget -html_dir 
report_budget -input (Report only specified block inputs)
report_budget -latency (Report results of clock latency analysis)
report_budget -output (Report only specified block outputs)
report_budget -pins 
report_budget -through (Report path details through the budget pin)
report_budget -warning_pins (Show details of budget warnings)
report_buffer_trees -connections (show net connection in the report)
report_buffer_trees -depth (report buffer only till max depth specified: 
report_buffer_trees -from (specifies starting point of buffer tree )
report_buffer_trees -hierarchy (show buffer tree across hierarchy)
report_buffer_trees -physical (show location of each pin)
report_bundle_pin_constraints -bundles 
report_bundle_pin_constraints -cells (Specify  the  block cells on which the constraints are reported..)
report_bundle_pin_constraints -self (Specifies that the constraints applied  to the toplevel block are reported.)
report_bundles
report_busplan_constraints
report_busplans -location (Report location data)
report_busplans -start_end_cells (Report start/end cell data)
report_busplans -xml_file (Report busplan details in XML format)
report_case_analysis -all (Report logic constant pins of the design)
report_case_analysis -mode (Mode to report)
report_case_analysis -nosplit (Don't split lines if column overflows)
report_cell -connections (Show cell connection info)
report_cell -nosplit (Don't split lines if column overflows)
report_cell -power (Show cell power connection info)
report_cell -pvt (Show cell PVT info)
report_cell -significant_digits 
report_cell -verbose (Show verbose cell connection info)
report_cell_em -cells (List of cells)
report_cell_em -nosplit (Don't split lines if column overflows)
report_cell_em -pins (List of pins)
report_cell_em -significant_digits 
report_cell_modes -missing (Just show instances with missing cell modes)
report_cell_modes -nosplit (Don't split lines if column overflows)
report_cells -connections (Show cell connection info)
report_cells -nosplit (Don't split lines if column overflows)
report_cells -power (Show cell power connection info)
report_cells -pvt (Show cell PVT info)
report_cells -significant_digits 
report_cells -verbose (Show verbose cell connection info)
report_check_design_strategy -checks (names of user-defined checks)
report_clock -attributes (Show clock attributes)
report_clock -groups (Show clock group info)
report_clock -modes (List of modes)
report_clock -nosplit (Don't split lines if column overflows)
report_clock -significant_digits 
report_clock -skew (Show clock skew info)
report_clock_balance_groups
report_clock_balance_points -balance_points 
report_clock_balance_points -clock (List of clocks)
report_clock_balance_points -nosplit (Don't split lines if column overflows)
report_clock_balance_points -significant_digits 
report_clock_cell_spacings -clocks (List of clocks)
report_clock_gating_check -nosplit (Don't split lines if column overflows)
report_clock_gating_check -significant_digits 
report_clock_gating_checks -nosplit (Don't split lines if column overflows)
report_clock_gating_checks -significant_digits 
report_clock_power -clocks (List of clocks)
report_clock_power -corners (Corner list)
report_clock_power -modes (Mode list)
report_clock_power -nosplit (Do not split lines if column overflows)
report_clock_power -scenarios 
report_clock_power -significant_digits 
report_clock_power -type (Type of report: 
report_clock_qor -all (Report all)
report_clock_qor -clocks (List of clocks)
report_clock_qor -corners (Corner list)
report_clock_qor -from (From pin list)
report_clock_qor -histogram_bins 
report_clock_qor -histogram_max 
report_clock_qor -histogram_min 
report_clock_qor -histogram_type 
report_clock_qor -largest 
report_clock_qor -modes (Mode list)
report_clock_qor -nosplit (No split)
report_clock_qor -per_clock_root (Report per clock root for latency reports)
report_clock_qor -robustness_corner 
report_clock_qor -scenarios 
report_clock_qor -show_paths (Shows full path)
report_clock_qor -show_verbose_paths (Shows full path with extra columns)
report_clock_qor -significant_digits 
report_clock_qor -skew_group 
report_clock_qor -smallest 
report_clock_qor -through (Through pin list)
report_clock_qor -to (To pin list)
report_clock_qor -trace_beyond_exception 
report_clock_qor -type (Type of information to report: 
report_clock_routing_rules
report_clock_settings -clocks (List of clocks)
report_clock_settings -nosplit (Do not split lines if column overflows)
report_clock_settings -significant_digits 
report_clock_settings -type (Type of settings to report: 
report_clock_skew_groups -nosplit (Don't split lines if column overflows)
report_clock_timing -capture (Show entries with capture transition)
report_clock_timing -clock (Clock network(s) of interest)
report_clock_timing -clock_crossing (Exclude non-interacting or false clock domains)
report_clock_timing -clock_synthesis_view 
report_clock_timing -corners (report scenarios of these corners (default is all corners))
report_clock_timing -derate (Display derate information)
report_clock_timing -fall (Show entries with falling transition)
report_clock_timing -from (From pins in the clock network)
report_clock_timing -from_clock 
report_clock_timing -greater_than 
report_clock_timing -hold (Display entries for hold paths between latches)
report_clock_timing -include_uncertainty_in_skew 
report_clock_timing -launch (Show entries with launch transition)
report_clock_timing -lesser_than 
report_clock_timing -modes (report scenarios of these modes (default is current mode))
report_clock_timing -nets (print net data in verbose path reports)
report_clock_timing -nosplit (Don't split lines if column overflows)
report_clock_timing -nworst 
report_clock_timing -physical (print physical location data in verbose path reports)
report_clock_timing -rise (Show entries with rising transition)
report_clock_timing -scenarios 
report_clock_timing -setup (Display entries for setup paths between latches)
report_clock_timing -show_clocks (Display from/to clock names)
report_clock_timing -significant_digits 
report_clock_timing -slack_lesser_than 
report_clock_timing -through 
report_clock_timing -to (To pins in the clock network)
report_clock_timing -to_clock 
report_clock_timing -type (Generate this type of report: 
report_clock_timing -variation (Display variation information)
report_clock_timing -verbose (Display the report in verbose format)
report_clock_tree_options -nosplit (Do not split lines if column overflows)
report_clock_tree_reference_subset -clocks (List of clocks)
report_clock_trunk_endpoints -clock (Clocks)
report_clock_trunk_endpoints -corners (Corners)
report_clock_trunk_endpoints -nosplit (Don't split lines if column overflows)
report_clock_trunk_endpoints -script (Return report as a TCL script which can be sourced again)
report_clock_trunk_endpoints -significant_digits 
report_clock_trunk_qor -clock (List of clocks)
report_clock_trunk_qor -endpoint_limit 
report_clock_trunk_qor -from_block 
report_clock_trunk_qor -nosplit (Don't split lines if column overflows)
report_clock_trunk_qor -significant_digits 
report_clock_trunk_qor -sort_by 
report_clock_trunk_qor -to_block 
report_clock_trunk_qor -violating_only (Lists only the violating paths)
report_clocks -attributes (Show clock attributes)
report_clocks -groups (Show clock group info)
report_clocks -modes (List of modes)
report_clocks -nosplit (Don't split lines if column overflows)
report_clocks -significant_digits 
report_clocks -skew (Show clock skew info)
report_congestion -boundary 
report_congestion -include_soft_congestion_map 
report_congestion -layers 
report_congestion -mode 
report_congestion -nosplit (Don't split lines if column overflows)
report_congestion -overflow_threshold 
report_congestion -rerun_global_router (rerun global route to generate congestion map)
report_congestion -significant_digits 
report_constraint -all_violators (Show all constraint violators)
report_constraint -corners (report scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
report_constraint -max_capacitance (Show only max_capacitance)
report_constraint -max_delay (Show only late timing checks(setup, max_delay))
report_constraint -max_transition (Show only max_transition)
report_constraint -min_capacitance (Show only min_capacitance)
report_constraint -min_delay (Show only early timing checks(hold, min_delay))
report_constraint -min_pulse_width (Show only min_pulse_width)
report_constraint -modes (report scenarios of these modes (default is all modes, or current scenario if neither mode nor corner are specified))
report_constraint -nosplit (Don't split lines if column overflows)
report_constraint -scenarios 
report_constraint -significant_digits 
report_constraint -verbose (Show verbose information)
report_constraint_groups -count (Print number of objects in group)
report_constraint_groups -nosplit (Don't split lines if column overflows)
report_constraint_groups -type (Constraint group type: 
report_constraint_mapping_file -constraint_type 
report_constraint_mapping_file -design (Specify the design)
report_constraints -all_violators (Show all constraint violators)
report_constraints -corners (report scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
report_constraints -max_capacitance (Show only max_capacitance)
report_constraints -max_delay (Show only late timing checks(setup, max_delay))
report_constraints -max_transition (Show only max_transition)
report_constraints -min_capacitance (Show only min_capacitance)
report_constraints -min_delay (Show only early timing checks(hold, min_delay))
report_constraints -min_pulse_width (Show only min_pulse_width)
report_constraints -modes (report scenarios of these modes (default is all modes, or current scenario if neither mode nor corner are specified))
report_constraints -nosplit (Don't split lines if column overflows)
report_constraints -scenarios 
report_constraints -significant_digits 
report_constraints -verbose (Show verbose information)
report_corners -significant_digits 
report_corners -verbose (Print additional information)
report_crpr -corners (report scenarios of these corners (default is all corners))
report_crpr -from (From register clock pin or port)
report_crpr -from_clock (Clock that fans out to the launching device)
report_crpr -hold (Show CRP used for hold check)
report_crpr -modes (report scenarios of these modes (default is current mode))
report_crpr -scenarios 
report_crpr -setup (Show CRP used for setup check)
report_crpr -significant_digits 
report_crpr -to (To register clock pin or port)
report_crpr -to_clock (Clock that fans out to the capturing device)
report_custom_power_data -cell_internals_data_file 
report_custom_power_data -cust_rpt_module_file 
report_custom_power_data -help (Get this help information.)
report_custom_power_data -no_io (Exclude cells in fanin/fanout cones of IO ports of the block (both clock and data).)
report_custom_power_data -outdir (Output directory to create reports in, defaults to $PWD)
report_custom_power_data -stdcell_regex (Provide a regular expression to match the reference names of leaf cells which are standard cells.  If not provided, they are found using means other than naming convention.)
report_custom_power_data -unswitched_limit 
report_delay_calculation -clock (Use data for this clock)
report_delay_calculation -corner (report for scenario of this corner (default is current corner))
report_delay_calculation -crosstalk (Print crosstalk calculation information)
report_delay_calculation -from (from-pins)
report_delay_calculation -load (Override for output load)
report_delay_calculation -min (Report for min delay)
report_delay_calculation -mode (report for scenario of this mode (default is current mode))
report_delay_calculation -process_label 
report_delay_calculation -process_number 
report_delay_calculation -pvt (Print detailed PVT information)
report_delay_calculation -scenario (report for this scenario)
report_delay_calculation -significant_digits 
report_delay_calculation -source_fall (Use data for the faling clock source)
report_delay_calculation -source_rise (Use data for the rising clock source)
report_delay_calculation -temperature 
report_delay_calculation -to (to-pins)
report_delay_calculation -transition (Override for input transition time)
report_delay_calculation -voltage (Override for operating voltage)
report_density_gradient_options
report_design -all (Reports floorplan/netlist/routing/library information)
report_design -floorplan (Reports floorplan information such as of site rows/ plan groups/ voltage areas/ blockages etc.,)
report_design -hierarchical (Reports netlist information including objects inside the block)
report_design -library (Reports library information)
report_design -netlist (Reports netlist information such as of nets/cells/pins/library cells of the current design)
report_design -nosplit (Don't split lines if column overflows)
report_design -routing (Reports routing information)
report_design_mismatch -mismatch_type 
report_design_mismatch -nosplit (Don't split lines if column overflows)
report_design_mismatch -repair_status (Shows mismatches with specified repaired state: 
report_design_mismatch -verbose (Shows instance information also for a mismatch type)
report_design_rules -all (To report all design rules)
report_design_rules -library (Library for finding objects, default is current library's tech)
report_design_rules -nosplit (Don't split lines if column overflows)
report_design_rules -tech (Tech for finding objects, default is current library's tech)
report_design_rules -verbose (Show all design rule info)
report_disable_timing -mode (Mode to report)
report_disable_timing -nosplit (Don't split lines if column overflows)
report_dont_touch -all (Report details of all dont_touch cells and nets)
report_eco_bus_buffer_patterns
report_eco_physical_changes -cells 
report_eco_physical_changes -min_displacement 
report_eco_physical_changes -min_estimated_length 
report_eco_physical_changes -min_net_length_ratio 
report_eco_physical_changes -type (The types of physical changes to be reported: 
report_eco_placement_net_weight -nets 
report_eco_placement_net_weight -output (output net weight setting to file)
report_edit_groups -nosplit (Don't split lines if column overflows)
report_edit_groups -significant_digits 
report_edit_groups -verbose (Show all edit group info)
report_ems_database -name 
report_ems_rules -all (Report all user-defined rules)
report_exceptions -dominant (Show dominant exceptions)
report_exceptions -fall_from 
report_exceptions -fall_through 
report_exceptions -fall_to 
report_exceptions -from (List of path startpoints or clocks)
report_exceptions -ignored (Show ignored exceptions)
report_exceptions -nosplit (Don't split lines if column overflows)
report_exceptions -rise_from 
report_exceptions -rise_through 
report_exceptions -rise_to 
report_exceptions -through 
report_exceptions -to (List of path endpoints or clocks)
report_extraction_options -all (report all options including default values)
report_extraction_options -corners (List of corners)
report_feedthroughs -file_name_prefix 
report_feedthroughs -include_buffered (Reports the buffered feedthroughs)
report_feedthroughs -include_original_feedthroughs 
report_feedthroughs -nets (Specifies the collection of nets for feedthrough reporting.)
report_feedthroughs -reporting_style 
report_feedthroughs -self (Only report top level feed-throughs)
report_floorplan_rules -lib_cells 
report_floorplan_rules -object_types 
report_frame_properties -block (frame block)
report_frame_properties -diffusion_width_height (false|true)]
report_frame_properties -implant_width (false|true)]
report_frame_properties -library (library)
report_frame_properties -output (output file name)
report_frame_properties -source_drain_annotation (false|true)]
report_freeze_ports -all (Report details of all freeze_ports cells)
report_grids -ref_blocks 
report_grids -type (Type of the grid: 
report_groups -nosplit (Don't split lines if column overflows)
report_groups -verbose (Show group's complete information)
report_gui_stroke_bindings -dictionary (dictionary to report bindings for)
report_gui_stroke_builtins -dictionary (dictionary to report bindings for)
report_hierarchical_z -attributes (The attributes which will appear in the report (default: tg_{hvt,svt,nominal}_{n,p}_device_total_width))
report_hierarchical_z -block (The design it's hierarchy will be reported. (must argument))
report_hierarchical_z -maxDepth (The max hierarchical depth to report (default is 6))
report_hierarchical_z -outDir (The output directory to write the reports to. (default: "."))
report_hierarchical_z -rootCell (The cell it's hierarchy will be reported. (default: The loaded design))
report_hierarchical_z -stage (The design stage to add the report into. (default: syn_final))
report_hierarchy -block (Specifies the block for which to generate the report)
report_hierarchy -hierarchical (Display the unfolded hierarchy)
report_hierarchy -no_leaf (Exclude leaf modules from the report)
report_hierarchy -nosplit (Don't split lines if column overflows)
report_hierarchy -physical_context (Generate report on only blocks and leaf modules.)
report_hierarchy_options -blocks 
report_host_options -nosplit (Don't split lines if column overflows)
report_ignored_layers -nosplit (Don't split lines if column overflows)
report_ignored_layers -significant_digits 
report_ignored_layers -verbose (Show all ignored layer info)
report_incomplete_upf -max_message_count 
report_individual_pin_constraints -constraint_type 
report_individual_pin_constraints -nets (report constraints on block pins that connected to nets.)
report_individual_pin_constraints -pins (Specifies the collection of pins to report pin constraints)
report_individual_pin_constraints -ports (Specifies the collection of ports to report pin constraints)
report_io_guides -nosplit (Don't split lines if column overflows)
report_io_guides -significant_digits 
report_io_guides -verbose (Show all io_guide info)
report_io_rings -nosplit (Don't split lines if column overflows)
report_io_rings -significant_digits 
report_io_rings -verbose (Show all io_ring info)
report_isolate_ports -all (Report details of all isolate_ports cells)
report_keepout_margins
report_latch_loop_groups -loop_breakers_only (only loop breakers will be reported)
report_latch_loop_groups -nosplit (Don't split lines if column overflows)
report_latch_loop_groups -of_objects 
report_latch_loop_groups -path_breakers_only (only path breakers (including loop breakers) will be reported)
report_lib -antenna (report missing antenna properties of cells in the specified library)
report_lib -include_db_mapping (DB file mapping information)
report_lib -min_pin_layer (minimum pin layer. No pins should exist under this layer.)
report_lib -nosplit (Don't split lines if column overflows)
report_lib -parasitic_tech (list parasitic tech info)
report_lib -pattern_must_join_pin 
report_lib -pattern_must_join_pin_exclusion_list 
report_lib -physical (report the physical characteristics in the specified library)
report_lib -placement_constraints 
report_lib -routability (list pins that do not have optimal routability for lib cells )
report_lib -technology_lib 
report_lib -timing_arcs (list timing arcs for tech lib cells)
report_lib -verbose (verbose)
report_lib -wire_track_colors (list pins on wire track color information for lib cells)
report_lib -wire_tracks (list via-region on wire track information for lib cells )
report_lib_cells -columns 
report_lib_cells -objects (Lib cells to report)
report_lib_pins -columns 
report_lib_pins -objects (Lib pins to report)
report_lib_timing_arcs -columns 
report_lib_timing_arcs -objects (Lib timing arcs to report)
report_macro_constraints -align_pins_to_tracks 
report_macro_constraints -alignment_grid (show alignment grid information)
report_macro_constraints -allowed_orientations 
report_macro_constraints -preferred_location (show preferred location)
report_macro_relative_location -hierarchical (report hierarchical)
report_macro_relative_location -nosplit (report with nosplit line)
report_matching_types -nosplit (Don't split lines if column overflows)
report_mibs
report_min_pulse_width -all_violators (Show only min pulse width violations)
report_min_pulse_width -corners (report for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
report_min_pulse_width -modes (report for scenarios of these modes (default is all modes, or current scenario if neither mode nor corner are specified))
report_min_pulse_width -nosplit (Don't split lines if column overflows)
report_min_pulse_width -scenarios 
report_min_pulse_width -significant_digits 
report_mismatch_configs -all (Show all configs in detail)
report_mismatch_configs -config_list 
report_mismatch_configs -nosplit (Don't split lines if column overflows)
report_modes -nosplit (Don't split lines if column overflows)
report_modes -significant_digits 
report_multibit -nosplit (Show summary without splitting)
report_multisource_clock_sink_groups
report_multisource_clock_subtree_constraints -clocks (report all constraints from these clock)
report_multisource_clock_subtree_constraints -names (list of option set names for which constraints will be reported)
report_multisource_clock_subtree_options -clocks (list of clocks to be reported)
report_multisource_clock_subtree_options -names (list of option set names)
report_multisource_clock_tap_options -clocks (List of clocks to be reported)
report_multisource_clock_tap_options -names (List of option set names)
report_mv_lib_cells -verbose (verbose)
report_mv_path -all_not_associated (report all un-associated mv cells)
report_mv_path -all_path (all paths in the design)
report_mv_path -cell 
report_mv_path -full_path (full isolation path information)
report_mv_path -isolation (report isolation constraints)
report_mv_path -level_shifter (report level shifter constraints)
report_mv_path -net (net_list )
report_mv_path -pin (pin or port along the path)
report_mv_path -shifting (shifting information)
report_name_rules
report_names -hierarchy (Report name changes hierarchically within current block only)
report_names -include_sub_blocks (Report name changes across all hierarchies including different physical hierarchies)
report_names -rules (name of the rule. Wildcards also allowed.)
report_names -skip_physical_only_cells 
report_net -connections (Show net connection info)
report_net -nosplit (Don't split lines if column overflows)
report_net -physical (Show the physical attributes and routing information)
report_net -segments (Show all global segments for listed nets)
report_net -significant_digits 
report_net -verbose (Show all net info)
report_net_buses -nosplit (Don't split lines if column overflows)
report_net_buses -verbose (Show all net bus info)
report_net_estimation_rules
report_net_fanout -connections (reports connections)
report_net_fanout -depth (Show buffer trees with more levels than depth only)
report_net_fanout -hierarchical (Reports fanout information including objects inside the block)
report_net_fanout -high_fanout (Show only high fanout nets)
report_net_fanout -nosplit (Don't split lines if column overflows)
report_net_fanout -physical (Show physical information of pins)
report_net_fanout -threshold (show nets with more fanout than threshold)
report_net_fanout -tree (Reports buffer tree fanout)
report_net_fanout -upper_bound (Show nets with fanout less than or equal to bound)
report_net_fanout -verbose (Prints verbose information)
report_net_weight_effort -nets 
report_nets -connections (Show net connection info)
report_nets -nosplit (Don't split lines if column overflows)
report_nets -physical (Show the physical attributes and routing information)
report_nets -segments (Show all global segments for listed nets)
report_nets -significant_digits 
report_nets -verbose (Show all net info)
report_ocvm -cell_delay (Only cell delay advanced OCV derate tables are shown)
report_ocvm -clock (Only advanced OCV derate clock tables are shown)
report_ocvm -coefficient (Show AOCVM coefficients)
report_ocvm -corner (report for scenario of this corner (default is current corner))
report_ocvm -corner_sigma (Show POCVM corner sigma value)
report_ocvm -data (Only data advanced OCV derate tables are shown)
report_ocvm -early (Report for early condition)
report_ocvm -fall (Report for fall transitions)
report_ocvm -late (Report for late condition)
report_ocvm -lib_cell (Report table annotation summary on a lib cell basis not a cell instance basis)
report_ocvm -list_annotated (Only leaf cells and global nets annotated with advanced OCV derate tables are listed)
report_ocvm -list_not_annotated (Only leaf cells and global nets not annotated with advanced OCV derate tables are listed)
report_ocvm -min_depth (Show the AOCVM minimum depth)
report_ocvm -mode (report for scenario of this mode (default is current mode))
report_ocvm -net_delay (Only net delay advanced OCV derate tables are shown)
report_ocvm -nosplit (Do not split lines when columns overflow)
report_ocvm -rise (Report for rise transitions)
report_ocvm -scenario (report for this scenario)
report_ocvm -significant_digits 
report_ocvm -type (Show info relevant to specific ocvm_type: aocvm, pocvm: 
report_parasitic_parameters -corners (List of corners)
report_parasitics -corner (report for scenario of this corner (default is current corner))
report_parasitics -early (Report for early condition)
report_parasitics -fall (Report for fall transitions)
report_parasitics -late (Report for late condition)
report_parasitics -mode (report for scenario of this mode (default is current mode))
report_parasitics -percentile (Print percentile instead of histogram statistics)
report_parasitics -rise (Report for rise transitions)
report_parasitics -scenario (report for this scenario)
report_parasitics -significant_digits 
report_parasitics -xcap (Print cross-capacitance information)
report_path_group -modes (List of modes to report)
report_path_group -nosplit (Don't split lines if column overflows)
report_path_groups -modes (List of modes to report)
report_path_groups -nosplit (Don't split lines if column overflows)
report_pg_mask_constraints -tcl (report Tcl of this mask constraint)
report_pg_patterns -tcl (report the Tcl command for this pattern)
report_pg_regions
report_pg_strategies -tcl (report the content for Tcl purpose)
report_pg_strategy_via_rules -tcl (report the content for Tcl purpose)
report_pg_via_master_rules -tcl (report Tcl of this via rule)
report_pin_blockages -nosplit (Don't split lines if column overflows)
report_pin_blockages -significant_digits 
report_pin_blockages -verbose (Show all pin blockage info)
report_pin_guides -nosplit (Don't split lines if column overflows)
report_pin_guides -significant_digits 
report_pin_guides -verbose (Show all pin guide info)
report_pin_placement -cells 
report_pin_placement -format 
report_pin_placement -nets (Specifies the collection of nets for pin placement reporting.)
report_pin_placement -pins (Specifies the collection of pins for pin placement reporting)
report_pin_placement -ports (Specifies the collection of ports for pin placement reporting)
report_pin_placement -self (Only report pins on current design)
report_placement -error_view (Error Browser output is written into this file)
report_placement -hard_macro_density_gradient_violations 
report_placement -hard_macro_hierarchy_perimeter 
report_placement -hard_macro_orientation_violations 
report_placement -hard_macro_overlap (Report number of hard macro overlaps)
report_placement -hard_macro_pin_track_violations 
report_placement -hard_macro_route_over 
report_placement -hierarchical (Report level-by-level in current design)
report_placement -ignore_fixed (ignore fixed cells for certain reports)
report_placement -macro_spacing_rule (Report number of hard macro spacing rule violations)
report_placement -physical_hierarchy_violations 
report_placement -poly_rule (Report the poly rule violations)
report_placement -swimming_pool_area (Report area of swimming pools)
report_placement -thin_channel_area (Report area of thin channels)
report_placement -user_grid (Report violations of user grid)
report_placement -verbose 
report_placement -voltage_area_violations 
report_placement -wirelength 
report_placement_spacing_rules
report_pop_up_object_options -object_type 
report_port -design_rule (Only port design rule info)
report_port -drive (Only port drive info)
report_port -input_delay (Only port input delay info)
report_port -nosplit (Don't split lines if column overflows)
report_port -output_delay (Only port output delay info)
report_port -verbose (Show all port info)
report_port_buses -nosplit (Don't split lines if column overflows)
report_port_buses -verbose (Show all port bus info)
report_port_protection_diodes
report_ports -design_rule (Only port design rule info)
report_ports -drive (Only port drive info)
report_ports -input_delay (Only port input delay info)
report_ports -nosplit (Don't split lines if column overflows)
report_ports -output_delay (Only port output delay info)
report_ports -verbose (Show all port info)
report_power -blocks (Create a report with physical blocks. Use the -levels option to indicate how many levels of physical blocks should be reported)
report_power -cell_power (Report power consumption of cells)
report_power -corners (List of corner names to report)
report_power -early (Report power for early timing)
report_power -force (Report power for all the specified active/inactive scenarios, irrespective of the leakage_power/dynamic_power flags of a scenario)
report_power -hierarchy (Report power consumption of design hierarchy)
report_power -include_boundary_nets 
report_power -leaf (Report all leaf-level cells)
report_power -levels (Report power consumption of design hierarchy till this level: 
report_power -modes (List of mode names to report)
report_power -net_power (Report power consumption of nets)
report_power -nosplit (Don't split lines if column overflows)
report_power -scenarios 
report_power -significant_digits 
report_power -verbose (Print verbose output)
report_power_calculation -capacitance 
report_power_calculation -early (Report power for early timing)
report_power_calculation -fall (Report only fall internal power)
report_power_calculation -fall_transition 
report_power_calculation -probability 
report_power_calculation -rise (Report only rise internal power)
report_power_calculation -rise_transition 
report_power_calculation -scenarios 
report_power_calculation -significant_digits 
report_power_calculation -toggle_rate 
report_power_calculation -transition 
report_power_calculation -verbose (Report power calculation in detail)
report_power_clock_scaling -scenarios (Scenarios for which to get the clock scaling values)
report_power_derate -include_inherited (Report for inherited derates)
report_power_derate -nosplit (Don't split lines if column overflows)
report_power_derate -scenarios 
report_power_derate -significant_digits 
report_power_domain -nosplit (Don't split lines if column overflows)
report_power_domains -nosplit (Don't split lines if column overflows)
report_power_groups
report_power_io_constraints -io_guide_list 
report_power_io_constraints -significant_digits 
report_power_scopes -nosplit (Don't split lines if column overflows)
report_power_switch_patterns -nosplit (Don't split lines if column overflows)
report_power_switch_placement_patterns
report_pr_rules -all (To report all pr rules)
report_pr_rules -library (Library for finding objects, default is current library's tech)
report_pr_rules -nosplit (Don't split lines if column overflows)
report_pr_rules -tech (Tech for finding objects, default is current library's tech)
report_programmable_spare_cell_mapping_rule -all (report all psc mapping rules)
report_programmable_spare_cell_mapping_rule -psc_type_id (a list of psc type id)
report_pst -derived (derived PST for implementation)
report_pst -nosplit (Don't split lines if column overflows)
report_pst -psts (List of PST name)
report_pst -supplies 
report_pst -voltage_type (voltage type to report; default is none: 
report_push_down_object_options -object_type 
report_pvt -mismatched (Report only mismatched cells and/or ports)
report_pvt -nosplit (Don't split lines if column overflows)
report_pvt -object_list (List of cells and/or ports)
report_pvt -significant_digits 
report_qor -corners (report scenarios of these corners (default is all corners))
report_qor -include 
report_qor -modes (report scenarios of these modes (default is all modes))
report_qor -nosplit (Don't split lines if column overflows)
report_qor -scenarios 
report_qor -significant_digits 
report_qor -summary (Get summary of design costs)
report_qor_snapshot -directory (snapshot directory)
report_qor_snapshot -display (show QoR snapshot report on browser)
report_qor_snapshot -name (snapshot name)
report_qor_snapshot -save_as (save report as)
report_rail_integrity_strategy
report_rdl_routes -create_error_data (false|flyline_only|verification)]
report_rdl_routes -file (output RDL net names into a specified file)
report_rdl_routes -nets 
report_rdl_routes -nets_in_file 
report_rdl_routes -open_nets (false|true)]
report_ref_libs -library (Library name)
report_reference -hierarchical (Report all the references inside the hierarchy)
report_reference -nosplit (Don't split lines if column overflows)
report_references -hierarchical (Report all the references inside the hierarchy)
report_references -nosplit (Don't split lines if column overflows)
report_routing_corridors -nosplit (Don't split lines if column overflows)
report_routing_corridors -output (To create a routing corridor Tcl script file)
report_routing_corridors -significant_digits 
report_routing_corridors -verbose (Show all routing_corridor info)
report_routing_guides -level 
report_routing_guides -rectangle (Route guide bounding box)
report_routing_rules -nosplit (Don't split lines if column overflows)
report_routing_rules -of_objects (Names or collection of nets)
report_routing_rules -output (To create a routing rule Tcl script file)
report_routing_rules -significant_digits 
report_routing_rules -verbose (Show all routing rule info)
report_rp_groups -all (Report all Top Level RP groups)
report_rp_groups -critical (Report failed relative placement groups)
report_rp_groups -non_critical (Report placed relative placement groups for which all constraints are not respected)
report_rp_groups -unplaced (Report unplaced relative placement groups)
report_rp_groups -verbose (Report failures in detail)
report_sadp_track_rule -all (Report all the track_rules)
report_sadp_track_rule -nosplit (Don't split lines if column overflows)
report_sadp_track_rule -significant_digits 
report_scan_chains
report_scenarios -corners (report scenarios of these corners (default is all corners))
report_scenarios -modes (report scenarios of these modes (default is all modes))
report_scenarios -nosplit (Don't split lines if column overflows)
report_scenarios -scenarios 
report_shaping_options
report_shields -nets 
report_shields -output (output file name (default report_shields.txt))
report_shields -per_layer (false|true)]
report_si_calculation -clock (Use data for this clock)
report_si_calculation -corner (report for scenario of this corner (default is current corner))
report_si_calculation -fall (Report for fall transition)
report_si_calculation -max (Report for max delay)
report_si_calculation -min (Report for min delay)
report_si_calculation -mode (report for scenario of this mode (default is current mode))
report_si_calculation -rise (Report for rise transition)
report_si_calculation -scenario (report for this scenario)
report_si_calculation -significant_digits 
report_si_calculation -source_fall (Use data for the faling clock source)
report_si_calculation -source_rise (Use data for the rising clock source)
report_si_delay_analysis -excluded (Nets excluded as victim or aggressors)
report_si_delay_analysis -ignored_arrival (Nets with their arrival windows ignored)
report_si_delay_analysis -nosplit (Don't split lines if column overflows)
report_signal_em -nets (List of nets)
report_signal_em -significant_digits 
report_signal_em -verbose (Display the report in verbose format)
report_signal_em -violated (Display the report for violations)
report_signal_io_constraints -io_guide_list 
report_signal_io_constraints -significant_digits 
report_site_defs -library (Library for finding objects, default is current library's tech)
report_site_defs -nosplit (Don't split lines if column overflows)
report_site_defs -significant_digits 
report_site_defs -tech (Tech for finding objects, default is current library's tech)
report_size_only -all (Report details of all size_only cells)
report_stage -clock (Use data for this clock)
report_stage -corner (report for scenario of this corner (default is current corner))
report_stage -fall (Report for fall transition)
report_stage -max (Report for max delay)
report_stage -min (Report for min delay)
report_stage -mode (report for scenario of this mode (default is current mode))
report_stage -rise (Report for rise transition)
report_stage -scenario (report for this scenario)
report_stage -significant_digits 
report_stage -source_fall (Use data for the faling clock source)
report_stage -source_rise (Use data for the rising clock source)
report_supernet_exceptions -nosplit (Don't split lines if column overflows)
report_supernet_exceptions -significant_digits 
report_supernet_exceptions -verbose (Show all info)
report_supply_net -nosplit (Don't split lines if column overflows)
report_supply_nets -nosplit (Don't split lines if column overflows)
report_supply_ports -nosplit (Don't split lines if column overflows)
report_supply_sets -nosplit (Don't split lines if column overflows)
report_switching_activity -cells (Report switching activity only for these cells)
report_switching_activity -corners (List of corner names to report)
report_switching_activity -coverage (Compute switching activity coverage)
report_switching_activity -essential (Report essential switching activity)
report_switching_activity -hierarchy (Report switching activity hierarchically)
report_switching_activity -list_low_activity (Report nets with low activity)
report_switching_activity -modes (List of mode names to report)
report_switching_activity -nosplit (Don't split lines if column overflows)
report_switching_activity -scenarios 
report_switching_activity -switching_activity_types 
report_switching_activity -toggle_rate_limit 
report_switching_activity -verbose (Print verbose output)
report_taps -static_current (Report tap static current)
report_target_library_subset -nosplit (Don't split lines if column overflows)
report_target_library_subset -objects (Hierarchical cells for which to report subsets)
report_target_library_subset -top (To report the subset on the top block)
report_threshold_voltage_group -nosplit (Don't split lines if column overflows)
report_threshold_voltage_group -significant_digits 
report_threshold_voltage_group -verbose (Print verbose output)
report_threshold_voltage_groups -nosplit (Don't split lines if column overflows)
report_threshold_voltage_groups -significant_digits 
report_threshold_voltage_groups -verbose (Print verbose output)
report_timing -attributes (Print attributes)
report_timing -capacitance (Print capacitances)
report_timing -corners (use scenarios of these corners (default is all corners))
report_timing -crosstalk_delta (Print SI delta-delays)
report_timing -delay_type 
report_timing -derate (Print timing derates)
report_timing -exception 
report_timing -exclude 
report_timing -fall_exclude 
report_timing -fall_from 
report_timing -fall_through 
report_timing -fall_to 
report_timing -from (List of path startpoints or clocks)
report_timing -groups (List of path group names to report (default is all path groups))
report_timing -include_hierarchical_pins 
report_timing -input_pins (Print input pins)
report_timing -max_paths (Maximum total paths to find: 
report_timing -modes (use scenarios of these modes (default is all modes))
report_timing -nets (Print nets)
report_timing -nosplit (Don't split lines if column overflows)
report_timing -nworst (Number of paths per endpoint: 
report_timing -path_type 
report_timing -physical (Print pin XY locations)
report_timing -process (Print process numbers/labels)
report_timing -report_by (Path ordering criteria: 
report_timing -rise_exclude 
report_timing -rise_from 
report_timing -rise_through 
report_timing -rise_to 
report_timing -scenarios 
report_timing -significant_digits 
report_timing -skip_transparency_window 
report_timing -slack_lesser_than 
report_timing -sort_by (Sorting criteria: 
report_timing -start_end_pair (List worst path per start-endpoint pair)
report_timing -temperature (Print temperatures)
report_timing -through 
report_timing -to (List of path endpoints or clocks)
report_timing -transition_time (Print transition times)
report_timing -variation (Report variation-aware info)
report_timing -voltage (Print voltages)
report_timing_derate -aocvm_guardband (Display Aocvm Guard Band)
report_timing_derate -corners (Restrict report to the following corners; default is to report only the current corner)
report_timing_derate -include_inherited (Display inherited derates)
report_timing_derate -increment (Display incremental derates)
report_timing_derate -nosplit (Don't split lines if column overflows)
report_timing_derate -pocvm_coefficient_scale_factor 
report_timing_derate -pocvm_guardband (Display Pocvm Guard Band)
report_timing_derate -significant_digits 
report_topological_constraints -all (To report all topological pin feedthrough constraints in the current block)
report_topology_edges -design (Top design for finding objects)
report_topology_edges -nosplit (Don't split lines if column overflows)
report_topology_edges -significant_digits 
report_topology_edges -verbose (Show all topology_edge info)
report_topology_nodes -design (Top design for finding objects)
report_topology_nodes -nosplit (Don't split lines if column overflows)
report_topology_nodes -significant_digits 
report_topology_nodes -verbose (Show all topology_node info)
report_track_constraints
report_tracks -dir (Direction of tracks to report: 
report_tracks -layer (Routing layer of tracks to report)
report_tracks -nosplit (Don't split lines if column overflows)
report_tracks -significant_digits 
report_transitive_fanin -nosplit (Don't split lines if column overflows)
report_transitive_fanin -to (list of sink pins, ports, and/or nets)
report_transitive_fanout -from (List of source ports, pins and/or nets)
report_transitive_fanout -nosplit (Don't split lines if column overflows)
report_unbound -cell (Prints unbound cell instance(s) information)
report_unbound -hierarchical (Reports unbound objects information including objects inside the block)
report_unbound -site_array (Prints unbound site array(s) information)
report_unbound -site_row (Prints unbound site row(s) information)
report_unbound -verbose (Prints verbose information)
report_unbound -via (Prints unbound via(s) information)
report_units -nosplit (Don't split lines if column overflows)
report_user_units -nosplit (Don't split lines if column overflows)
report_utilization -config (Utilization configuration to use)
report_utilization -of_objects 
report_utilization -scope (Scope of the configuration: 
report_utilization -verbose (Prints number and aggregate area of cells not completely within the block-boundary)
report_versions
report_via_defs -design (Top design for finding objects)
report_via_defs -library (Library for finding objects)
report_via_defs -nosplit (Don't split lines if column overflows)
report_via_defs -significant_digits 
report_via_defs -tech (Tech for finding object)
report_via_defs -verbose (Show all via_def info)
report_via_ladder_constraints -nosplit (Don't split lines if column overflows)
report_via_ladder_constraints -pins (Collection or names of pins)
report_via_ladder_rules -nosplit (Don't split lines if column overflows)
report_via_mapping -from (From via pattern)
report_via_mapping -nosplit (Don't split lines if column overflows)
report_via_mapping -to (To via pattern)
report_via_regions -design (Top design for finding objects)
report_via_regions -nosplit (Don't split lines if column overflows)
report_via_regions -significant_digits 
report_via_regions -verbose (Show all via_region info)
report_via_rules -all (To report all via rules)
report_via_rules -design (Top design for finding objects)
report_via_rules -library (Library for finding objects)
report_via_rules -nosplit (Don't split lines if column overflows)
report_via_rules -tech (Tech for finding object)
report_via_rules -verbose (Show all via rule info)
report_virtual_pads
report_visa_clocks
report_voltage_area_rules -nosplit (Don't split lines if column overflows)
report_voltage_areas -design (Top design for finding objects)
report_voltage_areas -hierarchical (Show hierarchical voltage_area info)
report_voltage_areas -nosplit (Don't split lines if column overflows)
report_voltage_areas -significant_digits 
report_voltage_areas -verbose (Show all voltage_area info)
reset_app_options -block (Reset the options set on this block)
reset_app_options -user_default (Reset the user-default value for the option)
reset_cell_mode
reset_design
reset_origin
reset_origin_move_block
reset_origin_top
reset_path -all (Remove all timing exceptions in this mode)
reset_path -fall (Reset timing for falling signal at endpoint)
reset_path -fall_from 
reset_path -fall_through 
reset_path -fall_to 
reset_path -from (List of path startpoints or clocks)
reset_path -hold (Reset hold timing)
reset_path -rise (Reset timing for rising signal at endpoint)
reset_path -rise_from 
reset_path -rise_through 
reset_path -rise_to 
reset_path -setup (Reset setup timing)
reset_path -through 
reset_path -to (List of path endpoints or clocks)
reset_paths -all (Remove all timing exceptions in this mode)
reset_paths -fall (Reset timing for falling signal at endpoint)
reset_paths -fall_from 
reset_paths -fall_through 
reset_paths -fall_to 
reset_paths -from (List of path startpoints or clocks)
reset_paths -hold (Reset hold timing)
reset_paths -rise (Reset timing for rising signal at endpoint)
reset_paths -rise_from 
reset_paths -rise_through 
reset_paths -rise_to 
reset_paths -setup (Reset setup timing)
reset_paths -through 
reset_paths -to (List of path endpoints or clocks)
reset_placement -spread_cells (Spread the unplaced cells to the right of the core)
reset_power_clock_scaling -all (Reset the entire scaling data)
reset_power_clock_scaling -scenarios (Scenarios for which to reset the scaling values)
reset_power_derate -groups (Specify the power group names)
reset_power_derate -scenarios 
reset_power_group -all (to reset all user-specified power group)
reset_power_group -name (power group name to be reset)
reset_pvt -corners (List of corners)
reset_switching_activity -corners (Reset activity for specified corners)
reset_switching_activity -modes (Reset activity for specified modes)
reset_switching_activity -path_sources 
reset_switching_activity -scenarios (Reset activity for specified scenarios)
reset_switching_activity -state_condition 
reset_timing_derate -aocvm_guardband (Reset the AOCVM Guard Band)
reset_timing_derate -corners (List of corners)
reset_timing_derate -hierarchical_net_delay 
reset_timing_derate -increment (Reset incremental derate factors)
reset_timing_derate -pocvm_coefficient_scale_factor 
reset_timing_derate -pocvm_guardband (Reset the POCVM Guard Band)
reset_timing_derate -scalar (Reset derate factor for deterministic delays only. Option currently ignored.)
reset_timing_derate -variation (Reset derate factor for statistical delays only. Option currently ignored.)
reset_upf
reshape_objects -add (add rectangle to an object shape)
reshape_objects -cut (cut object shape by rectangle)
reshape_objects -cut_by_locked (cut object shape by another locked object)
reshape_objects -gap (cut gap)
reshape_objects -gap_min_spacing (min spacing as cut gap)
reshape_objects -ignore_end_cap (ignore end caps when cutting wires)
reshape_objects -keep_inside (keep inside part when object being cut)
reshape_objects -via_cut_pattern (update via cut pattern)
resize_objects -area (new area)
resize_objects -aspect (new bounding box aspect: 
resize_objects -bbox (new bounding box)
resize_objects -delta (displacement to the bounding box)
resize_objects -force (ignore locked status of the objects)
resize_objects -height (new bounding box height)
resize_objects -quiet (suppress all warnings)
resize_objects -scale (scale bounding box)
resize_objects -simple (disable snapping and editing constraints)
resize_objects -utilization (new utilization: 
resize_objects -width (new bounding box width)
resize_polygons -objects (Use as input geometry)
resize_polygons -size (Distance to stretches boundaries. Can be 1, 2, or 4 numbers)
resolve_pg_nets -check_only (check inconsisitency only)
resolve_pg_nets -design (Top design for finding objects)
resolve_pg_nets -verbose (Verbose output)
restore_correlation_status
return_proc_source
revert_blocks
revert_cell_sizing -adjacent_cell_distance 
revert_cell_sizing -cells (cells to be reverted)
revert_cell_sizing -include_adjacent_sized_cells 
rhz_fill_power_domains
rhz_fill_stdcells_data
rhz_generate_reports
rhz_get_cells_at_depth
rhz_vectorian_add
rhz_vectorian_mult
rls_table -breaks (include break lines?)
rls_table -csv_mode (write out a csv rather than an actual table
rls_table -file (set output file name instead of STDOUT)
rls_table -footer (footer to print after table - no formatting)
rls_table -format (list of format styles for table columns)
rls_table -header (table header titles:
rls_table -no_separator (no vertical separator?)
rls_table -offset (add some spaces to the left of the entire table)
rls_table -repeat_header 
rls_table -spacious (add extra spaces for columns?)
rls_table -table (table data - is a list of lists)
rls_table -title (title to print before table - no formatting)
rls_table -to (set output file handle instead of STDOUT)
rls_table -width_limit (limit column width (breaks to lines) - off by default)
rls_table_echo
rotate_objects -anchor (anchor point: 
rotate_objects -angle (angle to rotate by: 
rotate_objects -orient (orientation value to be set on the objects: 
rotate_objects -pivot (pivot point)
roundto
routePins
routeTerm
route_auto -max_detail_route_iterations 
route_auto -reuse_existing_global_route (false|true)]
route_auto -route_nondefault_nets_first (false|true)]
route_auto -save_after_detail_route (false|true)]
route_auto -save_after_global_route (false|true)]
route_auto -save_after_track_assignment (false|true)]
route_auto -save_cell_prefix 
route_auto -stop_after_track_assignment (false|true)]
route_busplans -force (disable layer checking and force to route)
route_busplans -incremental (Incrementally route and plan)
route_busplans -quick (auto-plan busplans)
route_busplans -reduce_virtual_pins (create fewer virtual pins)
route_clock_straps -fishbone_fanout 
route_clock_straps -fishbone_layers 
route_clock_straps -fishbone_span 
route_clock_straps -fishbone_sub_span 
route_clock_straps -max_detail_route_iterations 
route_clock_straps -nets (List of nets)
route_clock_straps -stop_after_global_route (false|true)]
route_clock_straps -topology 
route_custom -keep_session (false|true)]
route_custom -nets (collection of nets)
route_detail -coordinates 
route_detail -incremental (false|true)]
route_detail -initial_drc_from_input (false|true)]
route_detail -max_number_iterations 
route_detail -start_iteration 
route_eco -max_detail_route_iterations 
route_eco -max_reported_nets 
route_eco -nets (eco route the nets provided (with this option open net driven is always false))
route_eco -open_net_driven (false|true)]
route_eco -reroute (any_nets|modified_nets_only|modified_nets_first_then_others)]
route_eco -reuse_existing_global_route (false|true)]
route_eco -utilize_dangling_wires (false|true)]
route_fishbone -nets (List of nets)
route_fishbone -stop_after_global_route (false|true)]
route_global -congestion_map_only (false|true)]
route_global -effort_level (global route effort: 
route_global -floorplan (false|true)]
route_global -host_options 
route_global -reuse_existing_global_route (false|true)]
route_global -virtual_flat 
route_group -all_clock_nets (route all clock nets)
route_group -floorplan (false|true)]
route_group -from_file 
route_group -global_planning (false|true)]
route_group -max_detail_route_iterations 
route_group -nets (collection of nets)
route_group -reuse_existing_global_route (false|true)]
route_group -route_nondefault_nets_first (false|true)]
route_group -stop_after_global_route (false|true)]
route_group -utilize_dangling_wires (false|true)]
route_opt -xtalk_reduction (route_opt xtalk reduction)
route_rdl_differential -allow_push_neighbor_nets (false|true)]
route_rdl_differential -layers 
route_rdl_differential -mode (length|parallel)]
route_rdl_differential -nets 
route_rdl_differential -nets_in_file 
route_rdl_differential -objects 
route_rdl_flip_chip -layers 
route_rdl_flip_chip -nets 
route_rdl_flip_chip -nets_in_file 
route_rdl_flip_chip -objects 
route_rdl_flip_chip -reuse_existing_global_route (false|true)]
route_rdl_flip_chip -skip_detail_route (false|true)]
route_track
runRDT -init (initialize flow -> restart from beginning)
runRDT -jump (jump to 'step' within the current stage (else if integer move step +forward or -reverse))
runRDT -load (load design flow from this stage)
runRDT -load_cel (Specify the  cel in starting  db that you want to load . Provide only the name of the cel along with the path to database from -load_path)
runRDT -load_path (Specify the location of starting db. Provide a complete path to database)
runRDT -mark_loaded_stage (Added along with the -load of a stage to automatically mark the loaded stage. Usefui to overcome logscan errors)
runRDT -no_run ()
runRDT -reset_ebb_libs (Specify If the link and reference libs needs to be reset)
runRDT -reset_start_stage (reset all the stages from start to final)
runRDT -signoff (signoff flow to be run. Supported flows are in signoff_procs.tcl file)
runRDT -stage (run next stage only)
runRDT -standalone (run specified standalone design flow)
runRDT -start (start the run from specified stage )
runRDT -step (run next step only)
runRDT -stop (stop design flow after this stage or stage.step)
runRDT -subflow (Execute a defined subflow instead of the standard flow)
run_block_compile_pg -host_options 
run_block_compile_pg -skip_top (do not create PG for top-portion design)
run_block_script -blocks (List of blocks to run)
run_block_script -cells (List of cell instances to run)
run_block_script -force (Force run even if data may be lost in modified blocks)
run_block_script -host_options 
run_block_script -name (Name to use for distributed run)
run_block_script -reuse_processes (Allow more than 1 block to run per process)
run_block_script -run_order 
run_block_script -script (Script to run on blocks)
run_block_script -var_list 
run_block_script -work_dir 
run_monitor_gui -kill (Terminate all running instances of the monitor gui from this session.)
run_monitor_gui -nolaunch (Works together with -kill: only terminate, no launching)
run_rdtpv
sL
sN
sW
saif_map -hsep (Write the Mapping Table using the specified hier char)
saif_map -read_map (Read the Mapping Table)
saif_map -start (Start the saif map notification process)
saif_map -stop (Delete the Mapping Table and stop the notification process)
saif_map -type (Write the PTPX commands)
saif_map -write_map (Write the Mapping Table)
save_block -as (Name [libName:]blockName[/labelName][.viewName] of block to be saved as)
save_block -compress (Save in compressed format)
save_block -force (force save -as if destination block is modified)
save_block -hierarchical (save all block views in this design hierarchy)
save_block -label (specify the desired user label while keeping lib, block, and view the same)
save_block -verbose (Verbose messages)
save_correlation_status
save_drc_error_data -as (Save the error data to this file name)
save_ems_database -all (save all open databases)
save_ems_database -as 
save_ems_database -overwrite (Overwrites the EMS database file, if it already exists)
save_lib -all (Save all libraries in memory)
save_lib -as (Library name to be saved as)
save_lib -compress (Save in compressed format)
save_lib -version (The file version to save to)
save_upf -exclude 
save_upf -for_empty_blackbox (Generate UPF for empty black-box)
save_upf -for_etm (Generate UPF for ETM)
save_upf -force_no_reference 
save_upf -force_reference 
save_upf -format (Output format: Values: both, user, supplemental)
save_upf -full_chip (Generate full-chip UPF)
save_upf -include 
sb
scale
scrollbar
sd_abstract_to_design
sd_abstract_to_frame
sd_add_diffcheck -include_macro_refs 
sd_add_diffcheck -layer_name 
sd_add_diffcheck -outputview 
sd_add_diffcheck -phase (negative straddles boundary {default=positive}: 
sd_add_diffcheck -pitch (layer pitch {default=0.084})
sd_add_diffcheck -skip (skip diffcheck generation {default=0, do not skip}: 
sd_add_diffcheck -width (layer width {default=0.028})
sd_add_dop_diode
sd_add_halo_metals -no_partition_twire (Don't add transition shapes or PG on the partition boundary)
sd_add_polycheck -datatype (datatype for layer_num - requires layer_num is defined {default use polycheck layer_datatype})
sd_add_polycheck -include_macro_refs 
sd_add_polycheck -layer_name 
sd_add_polycheck -outputview 
sd_add_polycheck -phase (negative straddles boundary {default=positive}: 
sd_add_polycheck -pitch (layer pitch {default=0.140})
sd_add_polycheck -skip (skip polycheck generation {default=0, do not skip}: 
sd_add_polycheck -width (layer width {default=0.042})
sd_add_routing_blockage_for_boundary -for_create_strap_only 
sd_add_routing_blockage_for_macro -additional_blkg (To create additional blockage around EBB/Macros based on G_PWR_ADDITIONAL_BLOCKAGE_FOR_CUSTOM & G_PWR_ADDITIONAL_BLOCKAGE_FOR_MACRO )
sd_add_routing_blockage_for_va -for_create_strap_only 
sd_aon_pg_hookup -cells (Specify the aon cells to insert via ladder)
sd_aon_pg_hookup -constraint_only (Setting constraints only)
sd_aon_pg_hookup -incremental (Run pg hookup for newly added aon cells only)
sd_aon_pg_hookup -logtag (Add log tag)
sd_aon_pg_route
sd_append_uin_parameters
sd_apply_hip_pdn
sd_base_layer_fill
sd_base_layer_fill_step
sd_base_layer_populate_lib
sd_base_layer_populate_templates
sd_base_layer_remove
sd_base_layer_update_templates
sd_block_clock_opt
sd_block_place_opt
sd_block_priority_route
sd_block_route
sd_block_user_priority_route
sd_bottom_up_run_parallel_job -script_name (name of script to execute, include full-path to script)
sd_bottom_up_run_parallel_job -work_dir (name of working directory where run_block_script jobs will be managed)
sd_boundary_fiducial_cells
sd_calculate_gridpattern
sd_call_diamond
sd_change_names
sd_channel_add_buffer_on_route -distance (Repeater distance for add-buffer-on-route use)
sd_channel_add_buffer_on_route -max_layer (Maximum layer for routing use)
sd_channel_add_buffer_on_route -min_layer (Minimum layer for routing use)
sd_channel_add_buffer_on_route -nets (Channel nets to insert repeaters)
sd_channel_add_buffer_on_route -repeater (Repeater name for add-buffer-on-route use)
sd_channel_add_buffer_on_route -verbose (Print more information. Default: None)
sd_channel_add_buffer_on_route -vialadder (Via ladder constraints)
sd_channel_block_recipe -backoff (Placement backoff from port. Default: 1.0um/G_CHANNEL_BACKOFF(BLOCK))
sd_channel_block_recipe -debug (Used specifically for GCR debug. Default: G_GCR_DEBUG)
sd_channel_block_recipe -distance (Repeater distance for add-buffer-on-route use. Default: LookUp/G_CHANNEL_REPEATER_DISTANCE(BLOCK))
sd_channel_block_recipe -keep_reps (Do not remove existing repeaters. Default: Remove/G_CHANNEL_KEEP_REPEATERS(BLOCK))
sd_channel_block_recipe -max_layer (Maximum layer for routing use. Default: G_MAX_ROUTING_LAYER/G_CHANNEL_MAX_LAYER(BLOCK))
sd_channel_block_recipe -min_layer (Minimum layer for routing use. Default: G_MIN_ROUTING_LAYER/G_CHANNEL_MIN_LAYER(BLOCK))
sd_channel_block_recipe -ports (Ports to trace and place/route channel cells. Default: All/G_CHANNEL_PORT_LIST(BLOCK))
sd_channel_block_recipe -repeater (Repeater name for add-buffer-on-route use. Default: G_CHANNEL_REPEATER(BLOCK))
sd_channel_block_recipe -save_steps (Save intermediate steps in the flow. Default: None/G_CHANNEL_SAVE_STEPS(BLOCK))
sd_channel_block_recipe -steps (Steps to run: {place route abor}. Default: All/G_CHANNEL_STEPS(BLOCK))
sd_channel_block_recipe -use_gcr (Run GCR routing. Default: ZRoute/G_GCR_ROUTE)
sd_channel_block_recipe -verbose (Print more information. Default: None/G_CHANNEL_VERBOSE)
sd_channel_block_recipe -vialadder (Via ladder default constraints. Default: G_CHANNEL_VIA_LADDER_DEFAULT_CONSTRAINTS/G_CHANNEL_VIA_LADDER_CONSTRAINTS(REF_NAME))
sd_channel_block_recipe -widths (Routing layer-width list {la wa lb wb ...} for wide wire routing)
sd_channel_blocks
sd_channel_get_nets
sd_channel_place_cells -backoff (Placement backoff from port. Default: At Port)
sd_channel_place_cells -keep_reps (Do Not remove repeaters. Default: Remove)
sd_channel_place_cells -ports (Ports to trace and place channel cells)
sd_channel_place_cells -verbose (Print more information. Default: None)
sd_channel_place_cells_based_on_route -first_distance 
sd_channel_place_cells_based_on_route -keep_reps (Do Not remove repeaters. Default: Remove)
sd_channel_place_cells_based_on_route -max_layer (Maximum layer for routing use)
sd_channel_place_cells_based_on_route -min_layer (Minimum layer for routing use)
sd_channel_place_cells_based_on_route -ports (Ports to trace and place channel cells)
sd_channel_place_cells_based_on_route -use_gcr (Run GCR router. Default is Z-route route_group)
sd_channel_place_cells_based_on_route -widths (Routing layer-width list for wide wire routing)
sd_channel_priority_route -cells (Channel cells to route)
sd_channel_priority_route -debug (Used specifically for GCR debug. Default: None)
sd_channel_priority_route -max_layer (Maximum layer for routing use)
sd_channel_priority_route -min_layer (Minimum layer for routing use)
sd_channel_priority_route -use_gcr (Run GCT routing. Default: Global Route)
sd_channel_priority_route -verbose (Print more information. Default: None)
sd_channel_priority_route -vialadder (Via ladder constraints)
sd_channel_priority_route -widths (Routing layer-width list for wide wire routing)
sd_channel_remove_repeaters -port (Port)
sd_channel_remove_repeaters -supernet (Supernet)
sd_channel_snap_cell_plc_at_coord
sd_checkProcess
sd_check_block_abutment
sd_check_cell_area
sd_check_fib_con
sd_check_pin_placement
sd_check_stitch_xmim
sd_check_terminals
sd_clean_up_block_level_power_hookup
sd_clean_up_routing_blockage_groups
sd_clk_load
sd_clk_ndr_shielding
sd_clk_push
sd_clk_route
sd_clk_shielding
sd_clock_cleanup
sd_commit_blocks -same_lib (Force commit of blocks in same library)
sd_commit_blocks_same_lib
sd_connect_ackport -drv_pin (Drive pin)
sd_connect_ackport -rev_pin (Receive pin)
sd_connect_aon_supply_pins -cells (List of cells)
sd_connect_aon_supply_pins -force (If given, existing cells connections will be disconnected and re-connected)
sd_connect_ebb_enables -reset_based_on_upf (Reset G_ vars based on upf values)
sd_connect_ebb_enables -va_name (Voltage name)
sd_connect_pg_net
sd_connect_power_switch_enables
sd_constraints
sd_consume_io_constraints
sd_create_aabb_region
sd_create_analog_pg_template -file (Specifies template file name)
sd_create_analog_pg_template -layers (Specifies layers list)
sd_create_analog_power_strap -pg_regions (create grid on analog pg regions)
sd_create_and_place_slos_logic
sd_create_and_swap_abstracts
sd_create_backoff_layer_blockage
sd_create_backoff_layer_blockage_per_block
sd_create_bbox_analog_power_strategies -bbox (Specify the bounding box to create grid. Format {{xl yl} {xh yh}})
sd_create_bbox_analog_power_strategies -grid_template 
sd_create_bbox_analog_power_strategies -layers (layers that need to be created)
sd_create_bbox_analog_power_strategies -nets 
sd_create_bbox_analog_power_strategies -pg_region 
sd_create_bbox_analog_power_strategies -recreate_template (recreate pg template for calling standalone call)
sd_create_black_box
sd_create_black_box_by_default
sd_create_black_box_pins
sd_create_boundary_power_blockage
sd_create_compl_pgr_blockage
sd_create_custom_grid_vars -pgr (list pg region names)
sd_create_custom_grid_vars -va (list of gas station voltage area names)
sd_create_custom_power_strap -bbox (Specify the bounding box to create grid. Format {{xl yl} {xh yh}}, if specified pg_region will be created)
sd_create_custom_power_strap -grid_template 
sd_create_custom_power_strap -net (Supply net name)
sd_create_custom_power_strap -pg_region 
sd_create_diffcheck
sd_create_dir -dir (name of directory to createt)
sd_create_dr_blockage_around_object
sd_create_gas_station_wrapper
sd_create_halo_id
sd_create_hierarchical_power_strap
sd_create_m0_power_straps_fill
sd_create_macro_on_boundary_blockage
sd_create_path_groups -modes (run for specific modes list)
sd_create_patterns -add_net_type (Add net type into the track spec of the pattern. Default: None)
sd_create_patterns -outfile (Specify output file-name for writing patterns file)
sd_create_patterns -pattern (Specify the patterns used for pattern creation)
sd_create_patterns -region (Specify the regions used for pattern creation. Default: None)
sd_create_patterns -verbose (Print more information. Default: None)
sd_create_physical_only_modules
sd_create_pin_pairings
sd_create_pins_for_power_continuity
sd_create_placement_abstracts
sd_create_polycheck
sd_create_port_polygon_for_terminals
sd_create_power
sd_create_power_straps -custom_only (Generate macro and custom rails only)
sd_create_power_straps -custom_tags (Generate power straps for specified custom tags only)
sd_create_power_straps -layers (Generate power straps for specified layers only)
sd_create_power_straps -no_vias (Turn off power via creation)
sd_create_power_straps -strategy_only (Generate pg strategy only)
sd_create_power_straps_m0 -keep_to_bnd (Keep space to boundary of top level (width of vert halo))
sd_create_power_straps_m0 -keep_to_macro (Keep this space to macro on left and right)
sd_create_power_straps_m0 -m0_width (Create m0 of this width)
sd_create_power_straps_m0 -m2width_ts (Min metal2 width threshold)
sd_create_power_straps_m0 -remove_only (Remove existed m0)
sd_create_prBoundary
sd_create_pwr_blkg_from_objs
sd_create_region_id
sd_create_region_tracks
sd_create_stdcell_fillers
sd_create_stub_upf
sd_create_timing_abstracts
sd_create_timing_arcs_on_unconstrained_pins
sd_create_top_va_pg_blockage -hierarchical (Process all VA in all hierarchy)
sd_create_trackfill_config -layers (List of layers to fill)
sd_create_trackfill_config -out_dir (Output directory)
sd_create_tracks -bounding_box 
sd_create_tracks -dont_delete (Does not delete the existent tracks)
sd_create_tracks -exclusive (Create track for exclusive creation)
sd_create_tracks -layer (Specify the layer to create track. If the layer defined in pattern does not match, it will be skipped)
sd_create_tracks -pattern (Specify the patterns used for track creation)
sd_create_tracks -reserved (Create the reserved tracks)
sd_create_tracks -skip_pg_track (Skip generating tracks for power rail)
sd_create_tracks -tag (Add tag to track)
sd_create_tracks -width (Specify the width to create track. If the width defined in pattern does not match, it will be skipped. Used for wide wire routing)
sd_create_tracks_for_hip_pins -cells (Cells to insert track on their pins.)
sd_create_tracks_for_hip_pins -layers (Pin's layers.)
sd_create_tracks_for_hip_pins -pins (Pin name to create tracks on it.)
sd_create_tracks_for_offgrid_pins
sd_create_twire_corner_blockage
sd_create_uin -layers (List of layers to fill)
sd_create_uin -out_dir (Output directory to save uin files)
sd_create_uin -type (Type of UIN files to be created)
sd_create_uin_gridpattern
sd_create_uin_icv
sd_create_uin_layers
sd_create_uin_parameters
sd_create_uin_v_layers
sd_create_va_pg_blockage
sd_create_visa_bound
sd_create_xmim_lib
sd_ctm_bumesh
sd_ctm_clone_clock_gadget
sd_ctm_create_dop_clocks
sd_ctm_create_dops
sd_ctm_detail_route
sd_ctm_dop_enable_scan_repeater_duplication
sd_ctm_dop_enable_split
sd_ctm_enable_buffering
sd_ctm_fishbone_route
sd_ctm_initialize
sd_ctm_level_balance
sd_ctm_merge
sd_ctm_optimize
sd_ctm_post_setup
sd_ctm_postroute_sizing
sd_ctm_remove_dop_clocks
sd_ctm_reports
sd_ctm_route_dops -dirty_mode (Allow DRCs for debug)
sd_ctm_route_dops -dop_nets (DOP nets - default all CTMESH dop nets)
sd_ctm_set_clock_latency
sd_ctm_set_visa_exceptions
sd_ctm_sizing
sd_ctp_create_clock_pins_at_block_center
sd_cts
sd_cts_ccd
sd_cts_exceptions_for_icc
sd_cts_params
sd_cts_rename_cts_punch_port
sd_cts_route_options
sd_cts_setup
sd_cts_store_hier_clk_pin_drivers
sd_cts_trace_fain_to_first_ctech
sd_customize_budgets
sd_ddh
sd_define_icc_wrappers
sd_define_user_attributes
sd_design_to_abstract
sd_detect_netlist_ecos
sd_dont_use
sd_dop_cts
sd_drc_bnd_spc_kor
sd_dump_pdfx_power_connections
sd_duplicate_slos
sd_eco_apply_changelist
sd_eco_boundary_cells -action (Option to remove or add boundary cells: 
sd_eco_boundary_cells -direction (Specify inside or outside given bbox update the boundary cells 
sd_eco_boundary_cells -target_obj_boundary_list 
sd_eco_clk_repair
sd_eco_connect_assignbuf_ceco
sd_eco_connect_net_ceco
sd_eco_create_port_ceco
sd_eco_gen_changelist
sd_eco_legalize
sd_eco_optimize
sd_eco_place_pins
sd_eco_place_unplaced_cells
sd_eco_rc_to_icc2_changelist -icc2_changelist (Pointer to the output ICC changelist file)
sd_eco_rc_to_icc2_changelist -rc_changelist (Pointer to input RC changelist file)
sd_eco_remove_dfm
sd_eco_reset_dfm_stages
sd_eco_route
sd_eco_save_pre_eco_state
sd_eco_scan_repair
sd_eco_tieoff
sd_enable_abstract_cmds
sd_enable_hold_fixing
sd_endcap_cells
sd_estimate_timing
sd_estimate_timing_pre_checks
sd_expand_all_mi_block_pg_blockages
sd_extend_macro_pins_on_boundary
sd_extract_collaterals_for_capr_sapr
sd_extraction_options_setup -corners (list of corners to work on, default is all)
sd_fdr_constraints -out_path (output directory for override tcl file(s))
sd_fdr_constraints -scenarios (list of scenarios to run for, by default run for all scenarios)
sd_fdr_get_physical_clock
sd_fdr_map_all_clocked_fdrs
sd_fdr_read_attributes_file
sd_fdr_read_clock_sources
sd_fdr_set_attributes
sd_fdr_write_vrlg_attr -flow (flow name)
sd_fdr_write_vrlg_attr -outfile (Output file name)
sd_fib_cells
sd_fib_con
sd_fill
sd_fill_get_keepout_cells_list
sd_fill_mark_hv_nets
sd_fill_post_process
sd_fill_run_calibre
sd_fill_run_dfm
sd_fill_run_icc
sd_fill_run_icv
sd_fill_run_qea
sd_find_accessible_tap -cell (Cell requiring tap)
sd_find_accessible_tap -direction (Specify which direction (left/right/both) to search for taps (default: both))
sd_find_accessible_tap -distance (Specify the max distance allowed between the cell and the tap (default: G_TAP_MAX_SPACING/2))
sd_find_accessible_tap -nwell_break_names 
sd_find_accessible_tap -nwell_break_refs 
sd_find_accessible_tap -tap_cells (Specify particular tap cells to be searched (default: G_TAP_CELL))
sd_find_closest_cell -cell (Cell from which the closest cell is to be found)
sd_find_closest_cell -direction (Specify which direction (left/right/both) to search for the cells (default: both))
sd_find_closest_cell -distance (Specify the max distance allowed between the cell and the tap (default: G_TAP_MAX_SPACING/2))
sd_find_closest_cell -include_variants (Specify whether variants of the ref names provided should also be checked)
sd_find_closest_cell -inst_names 
sd_find_closest_cell -ref_cells (Ref names of cells to be searched)
sd_find_unique_bound_name
sd_fix_ipb
sd_floorplan_design
sd_fn_assign_srsn_per_net_groups
sd_fn_cache_constraint_mapping_file
sd_fn_calculate_track_region -cell (Lower level block name)
sd_fn_calculate_track_region -coordinate (Coordinate of original region)
sd_fn_check_fix_illegal_name
sd_fn_convert_ps_pg_grid
sd_fn_create_black_box
sd_fn_create_black_box_abstract
sd_fn_create_black_box_initialize_and_hollow
sd_fn_create_black_box_pin_constraints
sd_fn_create_black_box_source_pdintent
sd_fn_create_black_box_timing
sd_fn_create_block_host_options
sd_fn_create_feedthru_supplies
sd_fn_create_gas_station_wrapper
sd_fn_create_keepout_margin
sd_fn_create_partition_bbox_abstract
sd_fn_create_stub_upf -outdir (output stub upf directory)
sd_fn_create_stub_upf -stub_modules (stub modules)
sd_fn_create_stub_upf -upf_dir (input upf directory)
sd_fn_create_track_check_edge -bounding_box 
sd_fn_create_track_check_edge -direction (Direction : X or Y)
sd_fn_create_track_check_edge -exclusive (Index of point in the list)
sd_fn_create_track_check_edge -index (Index of point in the list)
sd_fn_create_track_check_edge -points (location)
sd_fn_create_wire_on_power_track
sd_fn_duplicate_terminal -attr (Specifies attribute to attached to the new terminal)
sd_fn_duplicate_terminal -port (Specifies port related to the terminal)
sd_fn_duplicate_terminal -terms 
sd_fn_eco_concat_verilog_file -out_file ()
sd_fn_eco_concat_verilog_file -v_files ()
sd_fn_eco_concat_verilog_file -v_list ()
sd_fn_eco_count_sequence_diff
sd_fn_eco_create_bus
sd_fn_eco_data_analysis_max_string_match
sd_fn_eco_data_analysis_string_match
sd_fn_eco_dump_net_shape
sd_fn_eco_dump_terminals
sd_fn_eco_get_ignore_modules
sd_fn_eco_get_latters_diff
sd_fn_eco_get_pin_nets
sd_fn_eco_get_string_match
sd_fn_eco_rename_advisory
sd_fn_eco_write_ref_data
sd_fn_execute_run_block_script
sd_fn_find_dangling_partition_pins
sd_fn_find_excluded_nets_for_place_pins
sd_fn_fix_upf_for_icc
sd_fn_found_input_upf_files
sd_fn_gas_station_unwrap_hier
sd_fn_gen_budgets
sd_fn_get_custom_polygons
sd_fn_get_io_connected_cells -net (Net name)
sd_fn_get_io_connected_cells -type (receive or driver)
sd_fn_get_pg_geo_of_pgr_va
sd_fn_get_ref_libs
sd_fn_hack_split_constraints_upf
sd_fn_hier_commit_upf
sd_fn_ideal_network
sd_fn_insert_level_shifter -power (power)
sd_fn_load_black_box_upf
sd_fn_load_incremental_upf
sd_fn_parse_log_file_to_find_out_failed_jobs
sd_fn_pg_calculate_alt_pwrgrid_config
sd_fn_place
sd_fn_place_cell
sd_fn_place_global_dic_cells -dic_distance (User defined relative distance to keep between DICs. Default is got from central var G_DIC_DIST)
sd_fn_place_global_dic_cells -num_dics (User defined number of DIC pairs expected in design. Default is calculated based on core area)
sd_fn_place_global_dic_cells -remove_existing (User defined boolean switch if want to remove existing DIC cells and start afresh. Default OFF)
sd_fn_place_global_fid_cells -global_fid_distance 
sd_fn_place_global_fid_cells -num_global_fids (User defined number of global FIDs expected in design. Default is calculated based on core area)
sd_fn_place_global_fid_cells -remove_existing (User defined boolean switch if want to remove existing global FID cells and start afresh. Default OFF)
sd_fn_propagate_driver_supply
sd_fn_propagate_soft_macro_pg_terminal
sd_fn_ps_connect_top_pg -cells (Specify the ps cells to insert via ladder)
sd_fn_ps_create_rb_on_pg -cell (Specify the ps cell to insert via ladder)
sd_fn_ps_create_rb_on_pg -layers (Specify the layers to check)
sd_fn_ps_create_rb_on_pg -net (Specify the ps net to insert via ladder)
sd_fn_pvt_setup -analysis (analysis type (max/min): 
sd_fn_pvt_setup -corner (corner name)
sd_fn_read_block_tcl_files
sd_fn_read_pspec
sd_fn_remove_extract_layer_constraints
sd_fn_remove_twire_shorts
sd_fn_remove_wiretracks_and_power_straps
sd_fn_reports_pspec
sd_fn_restore_srsn
sd_fn_run_a_command_on_blocks -command (name of the TCL command to be executed)
sd_fn_run_block_script
sd_fn_run_parallel_set_of_commands_on_block -blocks (names of blocks)
sd_fn_run_parallel_set_of_commands_on_block -command_list 
sd_fn_run_step
sd_fn_save_srsn
sd_fn_save_user_attributes -outfile (File name)
sd_fn_set_td_type_for_tsvs
sd_fn_setup_ctp_config
sd_fn_source_icc_file -infile (Input file)
sd_fn_source_icc_file -outfile (output file)
sd_fn_source_icc_file -tag (Procedure tag)
sd_fn_synthesize_clock_trunks
sd_fn_template_based_partition_bbt -partition (Collection or list of partition to create bbt. Default: Selected)
sd_fn_update_block_netlist
sd_for_each_block_fib_cells
sd_for_each_block_local_fiducial_cells
sd_for_each_block_tap_cells
sd_fp_boundary_size_check
sd_frame_to_abstract
sd_gcr_create_commands -bus_with_signal_flow 
sd_gcr_create_commands -debug (Add report command to print out details of each route. Default: Do not print report for each net)
sd_gcr_create_commands -devtest (DO NOT USE!!! Developer testing switch ONLY. Default: PRD)
sd_gcr_create_commands -nets (Nets to set gcr min/max layer workaround)
sd_gcr_create_commands -outfile (Specify output file-name for writing gcr commands)
sd_gcr_create_commands -quick_route (Route with no converge passes to speedup runtime. Default: Route with converge passes)
sd_gcr_create_commands -skip_pre_checking (Skip pre-checking for pin access issues. Default: Check)
sd_gcr_create_commands -strip_pg_mesh (Remove PG mesh during design readin. Default: Do not remove PG mesh)
sd_gcr_create_commands -trunk_only (Route on preferred layers only. Default: Route on preferred layers and other layers to access pins)
sd_gcr_create_commands -work_dir (Specify working directory-name for priority-route use)
sd_gcr_create_patterns -add_net_type (Add net type into the track spec of the pattern. Default: None)
sd_gcr_create_patterns -outfile (Specify output file-name for writing patterns file)
sd_gcr_create_patterns -verbose (Print more information. Default: None)
sd_gcr_create_patterns -work_dir (Specify working directory-name for priority-route use)
sd_gcr_dump_bus_constraints -outfile (Specify output file-name for GCR bus constraint file)
sd_gcr_dump_bus_constraints -verbose (Print more information. Default: None)
sd_gcr_dump_bus_constraints -work_dir (Specify working directory-name for priority-route use)
sd_gcr_pin_analysis_debug -outfile (Specify output file-name for debug report. Default: <block>_check_pin_access_debug.rpt)
sd_gcr_pin_analysis_debug -return (Return nets instead. Default: ErrCount)
sd_gcr_pin_analysis_debug -standalone (Standalone pin access reporting. Default: None)
sd_gcr_pin_analysis_debug -work_dir (Specify working directory-name for priority-route use. Default: priority_route)
sd_gcr_routing_summary -outfile (Specify output file-name for summary report. Default: <block>_GCR_routing_summary.rpt)
sd_gcr_routing_summary -work_dir (Specify working directory-name for priority-route use. Default: priority_route)
sd_gen_budgets
sd_gen_mw_from_icc2
sd_gen_spef
sd_generate_critical_nets -add_options 
sd_generate_critical_nets -max_paths (Total number of timing paths to generate. Default is 2000000 (2e6))
sd_generate_critical_nets -net_threshold 
sd_generate_critical_nets -slack_lesser_than 
sd_generate_icv_netlist
sd_generate_pg_template -custom_only (Turn off power via creation)
sd_generate_pg_template -file (Template file name)
sd_generate_pg_template -layers (Generate power straps for specified layers only)
sd_generate_pg_template -macro (Create template for macro)
sd_generate_pg_template -no_stack_vias (Turn off stack via)
sd_generate_pg_template -no_vias (Turn off power via creation)
sd_get_boundary_cells_from_gvar -boundary_type_list (List of boundary cells with the GVARs of cell and orientation info)
sd_get_boundary_cells_from_gvar -layer (Layer To use for while expanding the GVAR)
sd_get_bus_layers_widths -verbose (Print more information. Default: None)
sd_get_fill_layers
sd_get_gvars
sd_get_keepout_cells_list
sd_get_macro_metal_layers -hml_type (Type for metal layer query, G_HEML, G_HPML or G_HSML)
sd_get_macro_metal_layers -macro_info (Array that will contain metal layer info per macro)
sd_get_macro_metal_layers -macro_refs (List of macro names)
sd_get_normalized_pattern -add_net_type (Add net type into the track spec of the pattern. Default: None)
sd_get_normalized_pattern -mult (Specify the pattern multipler)
sd_get_normalized_pattern -pattern (Specify the pattern)
sd_get_normalized_pattern -pitch (Pattern pitch)
sd_get_normalized_pattern -verbose (Print more information. Default: None)
sd_get_pattern_from_track_def -add_net_type (Add net type into the track spec of the pattern. Default: None)
sd_get_pattern_from_track_def -track_def (Specify the track definition)
sd_get_pattern_from_track_def -verbose (Print more information. Default: None)
sd_get_process_dot_num
sd_get_trackfill_process
sd_get_twire_config -use_pg_nets 
sd_get_twire_config -uses_aon_nets 
sd_get_twire_edge_polygons -layers (Only compute edge polygons for the specified layers)
sd_gridpattern_period
sd_hier_apply_netlist_ecos
sd_hier_insert_boundary_cells
sd_hier_insert_ps_cells
sd_hier_macro_pin_expose_to_block
sd_hier_place
sd_hier_ps_stitching
sd_hier_push_down_pg
sd_hier_push_pg_blockage
sd_hier_set_up_rows
sd_hierarchy_owner_wrapper
sd_ideal_network
sd_import_def
sd_import_die_file
sd_import_vars
sd_incr_stdcell_power_hookup -area (use defined area for hookup removal/insertion)
sd_incr_stdcell_power_hookup -cells (use area defined by cells boundary)
sd_init_place
sd_init_rpd
sd_input_port_diode
sd_insert_boundary_cells
sd_insert_decaps
sd_insert_fillers
sd_insert_level_shifter
sd_insert_ps_cells
sd_insert_ps_cells_around_macro -va (voltage area for ps cell)
sd_insert_ps_delay_cell
sd_insert_top_block_dic_cells
sd_insert_top_block_global_fid_cells
sd_io_placement
sd_iss_verify
sd_iss_verify_check
sd_iwsdb_close_tmp_lib
sd_iwsdb_open_tmp_lib_and_block
sd_iwsdb_recalc_offset_for_uin_gridpattern
sd_iwsdb_return_parallel_libs
sd_lbist_constraints -scenarios (run for list of scenarios, by default running for all scenarios)
sd_legalize_placement
sd_limit_template_layers -excl_layers (exclude layers, mutual exclusive with layers)
sd_limit_template_layers -excl_tags 
sd_limit_template_layers -layers (include layers, mutual exclusive with excl_layers)
sd_limit_template_layers -tags 
sd_load_aocvm
sd_load_aocvm_gcd -corner (Name of corner, usually max or min)
sd_load_aocvm_gcd -timing_mode (Timing analysis mode: hold or setup)
sd_load_aocvm_legacy -corner (Name of corner, usually max or min)
sd_load_aocvm_legacy -timing_mode (Timing analysis mode: hold or setup)
sd_load_aocvm_legacy -voltage (Voltage for corner)
sd_load_aocvm_legacy -vt_list (List of valid VT types: ln, nn, etc)
sd_load_app_option_info
sd_load_base_db_for_eco
sd_load_block_timing
sd_load_incremental_srsn
sd_load_incremental_upf
sd_load_io_placement
sd_load_macro_placement
sd_load_ocvm
sd_load_pg_grid
sd_load_pocvm
sd_load_post_split_constraints
sd_load_pre_defined_shapes_for_blocks
sd_load_routing_blockage_groups
sd_load_td_routes
sd_load_tm
sd_load_tracks
sd_load_upf
sd_local_fiducial_cells
sd_lr_check_env_vars
sd_lr_overrride_tool_versions
sd_lr_ovr_tools
sd_lr_restore_saved_vars_and_tool_versions
sd_lr_setup_run_dir
sd_macro_pin_expose_to_block
sd_macro_placement
sd_macropowerswitchorder -drive_p (Drive pin)
sd_macropowerswitchorder -inputPortPattern 
sd_macropowerswitchorder -outputPortPattern 
sd_macropowerswitchorder -va_name (Voltage name)
sd_man_page
sd_mark_critical_nets_for_qea_fill -nets (List or collection of nets to be marked as critical for qea fill)
sd_mbist_constraints -scenarios (run for list of scenarios, by default running for all scenarios)
sd_mcmm_analyze_existing_labels
sd_mcmm_corners_setup
sd_mcmm_create_scenarios_and_status
sd_mcmm_get_corner_default_voltage
sd_mcmm_get_corner_of_scenario
sd_mcmm_get_corner_priority_search_path
sd_mcmm_get_corners_from_map
sd_mcmm_get_default_scenario
sd_mcmm_get_mode_of_scenario
sd_mcmm_get_mode_priority_search_path
sd_mcmm_get_process_label
sd_mcmm_get_process_number
sd_mcmm_get_scenario_constraint_files
sd_mcmm_get_scenario_from_corner
sd_mcmm_get_scenario_priority_search_path
sd_mcmm_is_compatible_mode
sd_mcmm_match_ebb_label
sd_mcmm_match_ebb_label_from_dror
sd_mcmm_match_library_labels_to_spec
sd_mcmm_match_stdlib_label
sd_mcmm_match_stdlib_label_from_dror
sd_mcmm_post_setup_source
sd_mcmm_report_and_verify_pvt
sd_mcmm_set_corner_constraints -corners (list of corners to run for, default is all)
sd_mcmm_set_max_transition
sd_mcmm_set_mode_constraints -modes (list of modes to run for, default is all)
sd_mcmm_set_parasitics_parameters -corners (list of corners to work on, default is all)
sd_mcmm_set_process_labels_numbers -corners (list of corners to work on, default is all)
sd_mcmm_set_scenario_constraints -scenarios (list of scenarios to run for, default is all)
sd_mcmm_set_temperature -corners (list of corners to work on, default is all)
sd_mcmm_set_voltage -corners (list of corners to work on, default is all)
sd_mcmm_set_voltage_by_source -corners (list of corners to work on, default is all)
sd_mcmm_setup -keep_existing_scenarios 
sd_mcmm_setup -skip_loading_constraints 
sd_mcmm_setup_from_file
sd_mcmm_source_constraints_file -filename (file name to source)
sd_mcmm_source_constraints_file -flags (flags passed to rdt_source_if_exists)
sd_mcmm_source_constraints_file -logfile (log file name)
sd_mcmm_source_translated_icc_sdc_file
sd_mcmm_timing_constraints -corners (list of corners to run for, default is all)
sd_mcmm_timing_constraints -modes (list of modes to run for, default is all)
sd_mcmm_timing_constraints -scenarios (list of scenarios to run for, default is all)
sd_mcmm_verify_corner_name_type
sd_merge_layout_files -cell (Specify top cell in the input layout file.)
sd_merge_layout_files -compress (Specify if the layout file is compressed)
sd_merge_layout_files -gds (Specify the input gds file.)
sd_merge_layout_files -merge_list 
sd_merge_layout_files -oasis (Specify the input oasis file.)
sd_merge_layout_files -units (Specify the length precision.)
sd_metal_pre_fill
sd_module_placement
sd_n_site_cycling
sd_need_m0cid_remapping
sd_open_block
sd_open_library -block (Block to be opened; default G_DESIGN_NAME)
sd_open_library -dont_copy (Does not copy the lib to design_LIB)
sd_open_library -init (Create the library and design (G_DESIGN_NAME))
sd_open_library -keep_all_blocks (Do not delete the non-opened blocks from library)
sd_open_library -lib (Library to be opened)
sd_open_library -load (Loads a library based on a tag)
sd_open_library -readonly (Open the library in read only mode)
sd_open_library -reset_references (Reset the references)
sd_open_library -update_design_tech (Update tech file and tlu+)
sd_open_library -update_techfile (Update the tech file)
sd_opportunistic_lfid_cells
sd_outputs
sd_outputs_aon_pg_net
sd_outputs_box_file -output_file (Specify the location of the output file)
sd_outputs_create_abstract
sd_outputs_data_for_extraction -generate_boxfile (Generates the boxfile as a part of the FC pushdown call)
sd_outputs_data_for_extraction -input_lib (Pointer to input nlib)
sd_outputs_data_for_extraction -output_lib (Pointer to output lib)
sd_outputs_data_for_extraction -update_hips (Update the hip references-Ensure you have run noble -populate to get latest hip_list.tcl in WARD/collateral/rtl)
sd_outputs_def
sd_outputs_def_dct
sd_outputs_def_redhawk
sd_outputs_fdr_write_vrlg_attr
sd_outputs_floorplan_tcl
sd_outputs_frame
sd_outputs_gds
sd_outputs_icv_netlist
sd_outputs_iwsdb_write_donut
sd_outputs_lef
sd_outputs_macro_floorplan
sd_outputs_oas
sd_outputs_outputs_for_icc
sd_outputs_pb_floorplan
sd_outputs_saif
sd_outputs_scandef
sd_outputs_sdc
sd_outputs_spef
sd_outputs_upf_etm
sd_outputs_upf_out
sd_outputs_verilog
sd_outputs_verilog_w_power
sd_outputs_xyv
sd_pg_calculate_blockage -custom_pg (Include custom powergrid)
sd_pg_calculate_blockage -domain_name (Specify the domain name of upf design)
sd_pg_calculate_custom_grid_blockage -no_softmacro_blockage 
sd_pg_calculate_custom_grid_blockage -polygon (Specify the polygon of the custom grid)
sd_pg_regions
sd_pg_set_strategy -block (blocks)
sd_pg_set_strategy -blockages (specify blockage for the power grid)
sd_pg_set_strategy -custom_tags (Generate power strategies for specified custom tags only)
sd_pg_set_strategy -net (net name)
sd_pg_set_strategy -pg_pin (create_pg_pins)
sd_pg_set_strategy -tag (strategy tag name)
sd_pg_set_strategy -va (voltage area)
sd_pg_set_strategy -va_mode (create strategy base on va area instead of design boundary)
sd_pg_via0_via1_insertion -dirty_mode (Insert missing vias)
sd_place
sd_place_custom_2pass
sd_place_exploration
sd_place_hier_pins
sd_place_pins -nets (Nets to run place-pins on for testing)
sd_place_refine
sd_placement_blockage
sd_polaris_call
sd_post_cts_opt
sd_post_cts_setup
sd_post_priority_route_report -nets (Nets to report on priority route)
sd_post_priority_route_report -use_gcr (Report from GCR priority routing. Default: ZRoute)
sd_post_priority_route_report -work_dir (Specify working directory-name for priority-route use. Default: priority_route)
sd_post_pushdown_clean_up
sd_postplace_spare_cells
sd_postprocss_verilog_netlist
sd_postroute_tap_insertion
sd_power_hookup_search_repair
sd_power_switching_activity
sd_pre_clock_route
sd_pre_priority_route_report -nets (Nets to report on priority route)
sd_pre_priority_route_report -work_dir (Specify working directory-name for priority-route use. Default: priority_route)
sd_prep_collateral_for_pt
sd_preroute
sd_priority_create_shields -nets (Nets to priority create-shields. Default: All)
sd_priority_create_shields -post_gcr (Post GCR shield modification. Default: None)
sd_priority_place_hier_pins
sd_priority_route -debug (Used specifically for GCR debug. Default: G_PRIORITY_DEBUG)
sd_priority_route -devtest (DO NOT USE!!! Developer testing switch ONLY. Default: PRD)
sd_priority_route -gcr_avoid_PG_tracks (Add net type into the track spec of the pattern and avoid using PG tracks. Default: None)
sd_priority_route -gcr_effort (Route effort: quick==quick-route, trunk==trunk-only, full==full-route. Default: G_GCR_EFFORT/full)
sd_priority_route -gcr_keep_session (ONLY use to keep GCR session loaded when there is a real need to run multiple times and close on last call. Default: Close)
sd_priority_route -gcr_route_clocks (Do not filter-out HFN clock nets for GCR routing. Default: G_GCR_ROUTE_CLOCKS)
sd_priority_route -gcr_skip_pre_checking 
sd_priority_route -gcr_specific_constr_only 
sd_priority_route -gcr_strip_pg_mesh (Remove PG mesh during design readin. Default: Do not remove PG mesh)
sd_priority_route -nets (Nets to priority route. Default: All Constrained/G_GCR_SPECIFIC_CONSTRAINTS_ONLY + G_USER_PRIORITY_NETS_FILE)
sd_priority_route -shield_only (Run shielding-only on priority routes. Default: G_PRIORITY_SHIELD_ONLY/Both)
sd_priority_route -use_gcr (Run GCR for priority routing. Default: G_GCR_ROUTE/ZRoute)
sd_priority_route -verbose (Print more information. Default: None)
sd_priority_route -work_dir (Specify working directory-name for priority-route use. Default: priority_route)
sd_priority_route_group -nets (Nets to priority group-route)
sd_process_dcszo_cells
sd_process_ptlr_collaterals
sd_propagate_driver_supply
sd_propagate_pg_terminal
sd_ps_handle_dangling_ack_net -drv_pin (Pin to drive the ps chain hier ack pin)
sd_ps_handle_dangling_ack_net -is_top_level_port 
sd_ps_handle_dangling_ack_net -ps_ack_port 
sd_ps_handle_dangling_ack_net -ps_ack_port_net 
sd_ps_pg_hookup -cells (Specify the ps cells to insert via ladder)
sd_ps_pg_hookup_use_cfg -cells (Use to specify individual cells, otherwise operation is performed on all cells)
sd_ps_pg_hookup_use_cfg -connect_layer (Specify the ungated layer to hookup. Default is m5)
sd_ps_pg_hookup_use_cfg -incremental (Run the power switch power hookup in incremental mode on newly added PS cells)
sd_ps_pg_hookup_use_cfg -ps_pin_name 
sd_ps_remove_hookup -cells (Specify the ps cells to insert via ladder)
sd_ps_report_chain_info
sd_ps_snap_placement
sd_ps_stitching
sd_pt_ctsizer_run_flow
sd_pt_lr_run_flow
sd_pt_lrdp_run_flow
sd_pteco_apr_eco_setting
sd_pteco_fixer
sd_push_down_pg
sd_pushdown
sd_pushdown_pv_voltage_map
sd_pwr_hookup_interity_check -checker_max_tracks_for_gcn 
sd_pwr_hookup_interity_check -checker_max_tracks_for_m0 
sd_pwr_hookup_interity_check -max_tracks_for_gcn_in_cell 
sd_pwr_hookup_interity_check -max_tracks_for_m0_in_cell 
sd_qea_fill_critical_net_flow
sd_read_design -force_full_view (Force reading of full verilog - full view)
sd_read_design_for_delite
sd_read_design_for_planning
sd_read_design_for_split_constraints
sd_read_layout_file -cell (Specify top cell name in input oasis)
sd_read_layout_file -oasis 
sd_read_layout_file -type (Specify dfm run type)
sd_read_netspec
sd_read_pin_constraints_in_tcl_format
sd_read_pin_constraints_in_topo_format
sd_read_pspec
sd_read_pushdown_cells
sd_read_pushdown_content
sd_read_pushdown_routes_and_blockages
sd_read_pv_voltage_mapfile
sd_read_tspec
sd_read_upf
sd_read_user_collateral
sd_read_voltage_tcl_file
sd_reconcile_tintent
sd_regen_budgets
sd_remove_aon_pg_hookup -cells (Specify the aon cells to insert via ladder)
sd_remove_critical_nets_for_qea_fill
sd_remove_donut
sd_remove_icc_wrappers
sd_remove_level_shifter
sd_remove_pg_pins_based_on_user_input
sd_remove_priority_routes -nets (Nets to remove priority routes)
sd_remove_top_gas_station_wrapper
sd_replace_module_netlist
sd_report_pin_constraints
sd_report_pin_placement_qor
sd_reports_app_options
sd_reports_area
sd_reports_check_legality
sd_reports_check_mv_design
sd_reports_check_pin_placement
sd_reports_check_routes
sd_reports_clk_cap_histogram
sd_reports_clk_latency
sd_reports_clk_local_skew
sd_reports_clk_local_skew_histogram
sd_reports_clk_skew
sd_reports_clk_structure
sd_reports_clk_transition
sd_reports_clock
sd_reports_clock_drc_violators
sd_reports_clock_tree_summary
sd_reports_config_vars
sd_reports_design_check
sd_reports_design_qor
sd_reports_design_report
sd_reports_macro_data
sd_reports_max_fanout_vio
sd_reports_pdfx_content
sd_reports_pdfx_power_connections
sd_reports_pg_connectivity
sd_reports_pg_drc
sd_reports_pin_placement_qor
sd_reports_ps_chain_info
sd_reports_pspec
sd_reports_qor
sd_reports_secondary_power_bounds
sd_reports_threshold_voltage_group
sd_reports_vio_all
sd_reports_vio_max_no_clock_expanded_nworst_100
sd_reports_vio_max_nworst_100
sd_reports_vio_min_no_clock_expanded_nworst_100
sd_reports_vio_min_nworst_100
sd_reports_zeroRC_timing
sd_reset_library
sd_restore_input_port_diode_connections
sd_restore_pre_abstract_cmds
sd_restore_user_default_app_options
sd_route
sd_route_add_via_ladders -allow_drcs 
sd_route_add_via_ladders -report_tag (Report stage tag.)
sd_route_global
sd_route_opt
sd_rpd_post_place
sd_run_adr
sd_run_conformal_check -run_check (optional argument to run actual conformal check, default only shell shell executable file is generated)
sd_run_health_check
sd_run_parallel_job -blocks (collection of blocks for which script will run)
sd_run_parallel_job -cells (collection of cells for which script will run)
sd_run_parallel_job -detach (detach)
sd_run_parallel_job -host_options 
sd_run_parallel_job -run_order (top_down or bottom_up or all)
sd_run_parallel_job -script_name (name of scripts to execute, include full-path to script)
sd_run_parallel_job -var_list (list_of_variable_value_pairs)
sd_run_parallel_job -work_dir (name of working directory where run_block_script jobs will be managed)
sd_run_rumba_flow
sd_save_input_port_diode_connections
sd_save_user_default_app_options
sd_seq_chain_alignment -anchors (Ports or pins that are startpoints for the chains)
sd_seq_chain_alignment -corridor (Routing corridor object that is created in the database)
sd_seq_chain_alignment -run_place_pins (Switch to enable place_pins command run after all constraints are set)
sd_ser_insertion
sd_set_antenna_rules
sd_set_attributes
sd_set_boundary_for_logical_black_box
sd_set_boundary_insertion_variables
sd_set_detail_route_shape_use_and_physical_status -layers (List of layers to set shape-use and physical-status. Default: All)
sd_set_detail_route_shape_use_and_physical_status -nets (Nets to set shape-use from detail-route. Default: All)
sd_set_detail_route_shape_use_and_physical_status -phys_status 
sd_set_detail_route_shape_use_and_physical_status -shape_use (Shape-use to set from detail-route shape-use. Default: user_route)
sd_set_freeze_port_constraints -remove (remove all freeze port settings)
sd_set_freeze_port_constraints -type (data/clock/all )
sd_set_gvars_from_array
sd_set_hierarchy_owner
sd_set_host_options
sd_set_io_preroute_constraints -max_layer_constraint 
sd_set_io_preroute_constraints -min_layer_constraint 
sd_set_io_preroute_constraints -ports (List of port to check)
sd_set_io_preroute_constraints -use_ndr (Use ndr for the net. Default is not use)
sd_set_is_ft_noconn
sd_set_is_ft_noconn_for_block
sd_set_is_td
sd_set_layer_costs -costlist (Specify a complete list {via1 via2 ... via9  m0 m1 ... m10})
sd_set_layer_costs -reset (Reset layer costs back to defaults)
sd_set_min_max_ignored_layers
sd_set_multi_vtlibs
sd_set_parent_bbox
sd_set_pg_td_true
sd_set_pocvm_coeff_scale_factor
sd_set_pocvm_guardband
sd_set_preroute_constraints
sd_set_priority_route_options -trunk_only (Route on preferred layers only. Default: Route on preferred layers and other layers to access pins)
sd_set_priority_route_options -use_gcr (Set GCR route options. Default: ZRoute)
sd_set_routing_direction
sd_set_tile_symmetry
sd_set_vt_groups
sd_set_wiretracks
sd_setup_ctp_config
sd_setup_macro_placement_constraints
sd_setup_parasitic_tech
sd_setup_placement_constraints
sd_setup_xmim
sd_shape_blocks
sd_shell_budgets
sd_skew_groups_for_icc
sd_snap_macro_placement -pushdown (Enable and control snapping for pushdowns)
sd_source_caliber_cbc_files
sd_spare_cells
sd_split_constraints
sd_split_ps_chain -control_signal (List of control signal names of "a" chain of above power domains in the same order)
sd_split_ps_chain -domain_name (List of power domain names to split the chain)
sd_split_ps_chain -use_g_var_libcell (Uses G_POWER_SWITCH_CELL instead of upf lib cell)
sd_stdcell_power_hookup
sd_stitch_from_mapfile
sd_stitch_physically_shorted_pins
sd_stitch_xmim
sd_swap_design_and_remove_abstract
sd_swap_macrohalos_heml4 -macros (to query blocks info for all macros)
sd_switch_to_donut
sd_synthesize_clock_trunks
sd_tap_cells
sd_td_handler
sd_test_budgets
sd_tho_off
sd_tho_on
sd_tho_place
sd_time_derate_setup -corners (list of corners to work on, default is all)
sd_tm_attach_attribute
sd_tm_create_terminal_blockage_on_boundary
sd_tm_get_boundary
sd_tm_popup -disable_mim (Dont process MIM Cap layers)
sd_tm_route_terminal_blockage_on_boundary -layer (Layers to be processed)
sd_tm_route_terminal_blockage_on_boundary -only_blockages (If only blockages to create)
sd_tm_route_terminal_blockage_on_boundary -rects (Rectangle withtin which termianls/blockages are created)
sd_tm_write_collateral -convert_term_to_shape 
sd_tm_write_collateral -deleteCurrentLayerTM 
sd_tm_write_collateral -disable_mim (Dont process MIM Cap layers)
sd_tm_write_collateral -dont_delete_top_metals 
sd_tm_write_collateral -generate_def (To generate DEF file(both bu_tm & td_tm) : Default is .tcl format)
sd_tm_write_collateral -skip_bu_tm (In case if you want to generate only td_tm you can disable generating bu_tm with this option)
sd_undo_pteco_apr_eco_setting
sd_update_local_config_for_mcmm_run
sd_update_uin_keepout_cells
sd_upf_setup
sd_uv_fill
sd_vcx250_fill
sd_vector_swap
sd_via1_size
sd_via_color
sd_visa_set_clock_exceptions
sd_visa_trace_connectivity
sd_voltage_areas
sd_waitForICVComplete
sd_write_collateral
sd_write_collateral_for_block -block (Name of the block for which collateral is being written)
sd_write_collateral_for_block -cache_dir (Directory with cached collateral info)
sd_write_collateral_for_block -formats (List of formats to write collaterals)
sd_write_dp2apr_hand_shaking_ndm
sd_write_evr_collateral
sd_write_evr_collateral_for_one_cell -cell (Cell to write collateral for)
sd_write_evr_collateral_for_one_cell -file_name (File name)
sd_write_evr_collateral_for_one_cell -layers (List of layers to write EVR collateral for)
sd_write_icv_netlist
sd_write_iss_cmdfile
sd_write_layout_file -cell (Specify the cell for the layout file. Default is the current open cel)
sd_write_layout_file -compress (Specify if layout file to be compressed.  Oasis is compressed by default)
sd_write_layout_file -create_port_for_terminals 
sd_write_layout_file -ignore_blocks 
sd_write_layout_file -lib (Specify the lib for the cell to include in the layout file. Default is the current open ndm library)
sd_write_layout_file -output_file 
sd_write_layout_file -output_net_text (Specify if text is to be written for a net-shape)
sd_write_layout_file -rename_cell 
sd_write_layout_file -skip_fill_output (Specify if fill data should be skipped)
sd_write_layout_file -use_donut (Enable using donut models for sub blocks)
sd_write_macro_spice
sd_write_oas2ndm -fillcell (Specify if oas write to FILL view)
sd_write_oas2ndm -input_oasis_file 
sd_write_oas2ndm -input_top_cell 
sd_write_oas2ndm -ndm_lib_cell 
sd_write_oas2ndm -ndm_lib_name 
sd_write_oas2ndm -ndm_lib_path 
sd_write_oas2ndm -rundir (run directory)
sd_write_verilog_netlist
sd_zt_brb_on_cell_pin_ends
sd_zt_brb_on_pin_ends -pin (Pin to add routing blockages on ends)
sd_zt_create_brb_around_macro -back_off_half_dr (back_off brb half dr from boundary)
sd_zt_create_brb_around_macro -macro (generate brb for this macro)
sd_zt_create_fkp_over_macros -layers (layers to create fkp on)
sd_zt_create_staggered_pin_triplets -layers (Specify layers to stagger boundary pins.)
sd_zt_extend_power_staples_neighbors -terminals (Find neighbors of this non-staple terminal)
sd_zt_extend_power_staples_neighbors -zt_staple_ext 
sd_zt_extend_power_staples_to_boundary -layers (Only extend on these layers)
sd_zt_extend_power_staples_to_macros -layers (Only extend on these layers)
sd_zt_get_dbbrg_layer_spacing -layer (Layer to calculate dbbrg spacing)
sd_zt_neighbor_isolated_pins -layers (Only run on isolated pins on these layers)
sd_zt_neighbor_isolated_pins -terminals (Specify terminals to fix. Default is for all terminals of specified layer)
sd_zt_pull_back_boundary_terms -layers (Pull-back terminals on these layers)
sd_zt_query_term_neighbor -dir (Provide direction to look for neighbor: left/right/up/down)
sd_zt_query_term_neighbor -terminal (Find neighbor of this terminal)
sd_zt_remove_brb_on_cell_pin_ends
sd_zt_stagger_pin_triplets -layer (Specify layer to stagger boundary pins.)
sd_zt_stagger_pin_triplets -length1 (First terminal length)
sd_zt_stagger_pin_triplets -length2 (Second terminal length)
sd_zt_stagger_pin_triplets -length3 (Third terminal length)
sd_zt_stagger_pin_triplets -length4 (Fourth terminal length)
sd_zt_stagger_pin_triplets -length5 (Fifth terminal length)
sd_zt_stagger_pin_triplets -length6 (Sixth terminal length.  Longest between length1, length2, length3, length4, length5 and lenght6 will be used to as first pin length in pattern. 2nd longest will be used as 2nd pin length and so on. )
seed_pspecs
selection
send
send_status -status (Status message to send)
setDuetUser
set_3d_chip_placement -chip (Name of chip)
set_3d_chip_placement -location (Location of chip {x y z}, default is {0 0 0})
set_3d_chip_placement -orientation 
set_3d_chip_placement -scaling_factor 
set_annotated_check -clock (Clock rising or falling check: 
set_annotated_check -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_annotated_check -fall (fall arc check value)
set_annotated_check -from (List of from pins/ports)
set_annotated_check -hold (hold arc sense)
set_annotated_check -increment (increment check value)
set_annotated_check -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_annotated_check -nochange_high (nochange_high arc sense)
set_annotated_check -nochange_low (nochange_low arc sense)
set_annotated_check -override_increment (replace increment check value)
set_annotated_check -period (period arc sense)
set_annotated_check -recovery (recovery arc sense)
set_annotated_check -removal (removal arc sense)
set_annotated_check -rise (rise arc check value)
set_annotated_check -scenarios 
set_annotated_check -setup (setup arc sense)
set_annotated_check -to (List of to pins/ports)
set_annotated_check -width (pulsewidth arc sense)
set_annotated_delay -cell (annotated cell delay)
set_annotated_delay -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_annotated_delay -fall (Set fall delay only)
set_annotated_delay -from (List of from pins/ports)
set_annotated_delay -max (Set maximum delay only)
set_annotated_delay -min (Set minimum delay only)
set_annotated_delay -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_annotated_delay -net (annotated net delay)
set_annotated_delay -rise (Set rise delay only)
set_annotated_delay -scenarios 
set_annotated_delay -to (List of to pins/ports)
set_annotated_power -internal (Specify internal dynamic power in user power units)
set_annotated_power -leakage (Specify leakage power in user power units)
set_annotated_power -scenarios 
set_annotated_power -supply_net 
set_annotated_transition -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_annotated_transition -fall (Set fall transition only)
set_annotated_transition -max (Set maximum transition only)
set_annotated_transition -min (Set minimum transition only)
set_annotated_transition -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_annotated_transition -rise (Set rise transition only)
set_annotated_transition -scenarios 
set_aocvm_coefficient
set_app_options -as_user_default (Update the user-default)
set_app_options -block (Set options on this block)
set_app_options -category (Category of the application option)
set_app_options -list 
set_app_options -name (Name of the application option)
set_app_options -value (Value of the application option)
set_app_var -default (Reset the variable to its default value)
set_attribute -class (class name; for compatibility: 
set_attribute -name (Attribute name)
set_attribute -objects (List of collections of objects)
set_attribute -quiet (Suppress warning messages)
set_attribute -value (Attribute value)
set_base_lib -base_lib (Base library path)
set_base_lib -library (Library)
set_blackbox_clock_port
set_blackbox_port_drive -input_transition_fall 
set_blackbox_port_drive -input_transition_rise 
set_blackbox_port_drive -type (Specify the pre-defined drive type for the ports)
set_blackbox_port_load -factor (Specify the multiplication factor of the load type)
set_blackbox_port_load -type (Specify the pre-defined load type for the ports)
set_blackbox_port_load -value (Specify the load capacitance value for the ports)
set_block_grid_references -adjust_snap_point_of_cell 
set_block_grid_references -designs (Specify the block designs)
set_block_grid_references -grid (Specify the block grid to associate with)
set_block_grid_references -reset (Reset the block design reference's block grid settings)
set_block_grid_references -snap_point (Specify the design's snap point)
set_block_pin_constraints -allow_feedthroughs 
set_block_pin_constraints -allowed_layers 
set_block_pin_constraints -cells 
set_block_pin_constraints -corner_keepout_distance 
set_block_pin_constraints -corner_keepout_num_tracks 
set_block_pin_constraints -exclude_sides 
set_block_pin_constraints -hard_constraints 
set_block_pin_constraints -pin_spacing (Minimum number of wire tracks between adjacent block pins: 
set_block_pin_constraints -pin_spacing_distance 
set_block_pin_constraints -self (Set pin constraints for current top design)
set_block_pin_constraints -sides 
set_block_pin_constraints -stacking_allowed 
set_block_to_top_map -auto_clock (automatically associate clocks in blocks: 
set_block_to_top_map -block (Block cell in the netlist)
set_block_to_top_map -clock 
set_block_to_top_map -corner 
set_block_to_top_map -ignore_waveform (ignore mismatches between top and block clock waveforms)
set_block_to_top_map -inverted_clock 
set_block_to_top_map -mode 
set_block_to_top_map -path (Hierarchy path to a block)
set_block_to_top_map -report_only (only report on auto_clock creation)
set_block_to_top_map -unused_clock 
set_boundary_budget_constraints -auto (Indicate that boundary was automatically derived)
set_boundary_budget_constraints -corner (Corner for electrical values)
set_boundary_budget_constraints -default (Set default for unspecified corners)
set_boundary_budget_constraints -driving_cell 
set_boundary_budget_constraints -fanin_capacitance 
set_boundary_budget_constraints -from_pin 
set_boundary_budget_constraints -input_transition_fall 
set_boundary_budget_constraints -input_transition_rise 
set_boundary_budget_constraints -library (Library of driving cell)
set_boundary_budget_constraints -load_capacitance 
set_boundary_budget_constraints -max_transition 
set_boundary_budget_constraints -name (Name of the boundary constraint)
set_boundary_budget_constraints -pin (Driving pin name)
set_boundary_cell_rules -add_metal_cut_allowed 
set_boundary_cell_rules -at_va_boundary (Specifies whether rows are cut on voltage areas)
set_boundary_cell_rules -bottom_boundary_cells 
set_boundary_cell_rules -bottom_left_inside_corner_cells 
set_boundary_cell_rules -bottom_left_outside_corner_cell 
set_boundary_cell_rules -bottom_right_inside_corner_cells 
set_boundary_cell_rules -bottom_right_outside_corner_cell 
set_boundary_cell_rules -bottom_tap_cell 
set_boundary_cell_rules -do_not_swap_top_and_bottom_inside_corner_cell 
set_boundary_cell_rules -insert_into_blocks (Specifies whether end cap cells are inserted into blocks)
set_boundary_cell_rules -left_boundary_cell 
set_boundary_cell_rules -min_horizontal_jog 
set_boundary_cell_rules -min_horizontal_separation 
set_boundary_cell_rules -min_row_width 
set_boundary_cell_rules -min_vertical_jog 
set_boundary_cell_rules -min_vertical_separation 
set_boundary_cell_rules -mirror_left_boundary_cell 
set_boundary_cell_rules -mirror_left_inside_corner_cell 
set_boundary_cell_rules -mirror_left_outside_corner_cell 
set_boundary_cell_rules -mirror_right_boundary_cell 
set_boundary_cell_rules -mirror_right_inside_corner_cell 
set_boundary_cell_rules -mirror_right_outside_corner_cell 
set_boundary_cell_rules -no_1x (Specifies that the tool should not insert into a row where the row length equals two times the corner cell width plus one unit tile width.)
set_boundary_cell_rules -prefix (end cap inst prefix)
set_boundary_cell_rules -right_boundary_cell 
set_boundary_cell_rules -separator (end cap separator)
set_boundary_cell_rules -tap_distance 
set_boundary_cell_rules -top_boundary_cells 
set_boundary_cell_rules -top_left_inside_corner_cells 
set_boundary_cell_rules -top_left_outside_corner_cell 
set_boundary_cell_rules -top_right_inside_corner_cells 
set_boundary_cell_rules -top_right_outside_corner_cell 
set_boundary_cell_rules -top_tap_cell 
set_budget_margins -actual (Apply only where the block adjust option is set to "actual")
set_budget_margins -capture (Apply on budget segment that capture in the block)
set_budget_margins -clock 
set_budget_margins -corner (Corner for margin values)
set_budget_margins -default (Set default for unspecified corners)
set_budget_margins -from_clock 
set_budget_margins -hold (Apply only to hold budgets)
set_budget_margins -launch (Apply on budget segment that launch in the block)
set_budget_margins -postcts (Apply only where the block adjust option is set to "target" or "actual")
set_budget_margins -prects (Apply only where the block adjust option is set to "prects")
set_budget_margins -setup (Apply only to setup budgets)
set_budget_margins -target (Apply only where the block adjust option is set to "target")
set_budget_margins -to_clock 
set_budget_options -add_blocks (Add to list of cell instances to be budgeted)
set_budget_options -adjust_latency 
set_budget_options -all (Apply to all budget blocks and top level)
set_budget_options -capture_fixed_delay 
set_budget_options -capture_hold_fix 
set_budget_options -feed_fixed_delay 
set_budget_options -feed_hold_fix 
set_budget_options -launch_fixed_delay 
set_budget_options -launch_hold_fix 
set_budget_options -remove_blocks (Remove from list of cell instances to be budgeted)
set_budget_options -reset (Remove all budget options and constraints from the design)
set_budget_options -top_level (Apply to the top level of the design)
set_budget_shell_latencies -block 
set_budget_shell_latencies -block_mode 
set_budget_shell_latencies -block_output 
set_budget_shell_latencies -clock (Name of clock in the top-level clock)
set_budget_shell_latencies -corner (Corner for delay values)
set_budget_shell_latencies -early (Early (minimum) clock delay)
set_budget_shell_latencies -fall (Delay with respect to falling edge of the clock at its source)
set_budget_shell_latencies -late (Late (maximum) clock delay)
set_budget_shell_latencies -rise (Delay with respect to rising edge of the clock at its source)
set_bundle_pin_constraints -allow_feedthroughs 
set_bundle_pin_constraints -allowed_layers 
set_bundle_pin_constraints -bundle_order 
set_bundle_pin_constraints -bundles 
set_bundle_pin_constraints -cells (Specify  the  block cells that the net based constraints associated with.)
set_bundle_pin_constraints -keep_pins_together 
set_bundle_pin_constraints -length (Specified the length of the pin.)
set_bundle_pin_constraints -pin_spacing 
set_bundle_pin_constraints -pin_spacing_distance 
set_bundle_pin_constraints -range 
set_bundle_pin_constraints -self (Specifies that the constraint applies to the toplevel block.)
set_bundle_pin_constraints -sides (Specifies the block sides on which the pin must be placed.)
set_bundle_pin_constraints -width (Specified the width of the pin.)
set_busplan_constraints -from (bus the constraint is from)
set_busplan_constraints -remove (remove all constraints on bus)
set_busplan_constraints -to (bus the constraint is to)
set_busplan_constraints -to_value 
set_busplan_constraints -type (constraint to set)
set_case_analysis
set_cell_hierarchy_type -boundary (Boundary for the cell (only valid for boundary or partition types))
set_cell_hierarchy_type -type (New hierarchy type: 
set_cell_location -coordinates (Cell placement origin)
set_cell_location -design (Top design for finding objects)
set_cell_location -fixed (Set modified cells as fixed)
set_cell_location -ignore_fixed (Ignore fixed cells)
set_cell_location -orientation 
set_cell_mode -quiet (Suppress all messages)
set_cell_site -cells 
set_cell_site -height_type 
set_cell_site -library (Library to which the site_def will be set; default is current library)
set_cell_site -site_def (Site_def name)
set_cell_vt_type -lib_cells (Library cells to mark with the specified VT)
set_cell_vt_type -silent (Specifies whether additional information is printed)
set_cell_vt_type -vt_type (The left vt)
set_clock_balance_points -balance_points 
set_clock_balance_points -clock (clocks)
set_clock_balance_points -consider_for_balancing 
set_clock_balance_points -corners 
set_clock_balance_points -delay (Delay Value)
set_clock_balance_points -early (Specifies early delay)
set_clock_balance_points -fall (Specifies falling delay)
set_clock_balance_points -late (Specifies late delay)
set_clock_balance_points -rise (Specifies rising delay)
set_clock_cell_spacing -clocks (List of clocks)
set_clock_cell_spacing -lib_cells 
set_clock_cell_spacing -x_spacing (Value of spacing in x direction)
set_clock_cell_spacing -y_spacing (Value of spacing in y direction)
set_clock_gating_check -fall (Only fall checks are considered)
set_clock_gating_check -high (Check is for the high level of the clock)
set_clock_gating_check -hold (Clock gating hold time)
set_clock_gating_check -low (Check is for the low level of the clock)
set_clock_gating_check -rise (Only rise checks are considered)
set_clock_gating_check -setup (Clock gating setup time)
set_clock_groups -allow_paths (Keep paths as constrained)
set_clock_groups -asynchronous (Specify asynchronous clock groups)
set_clock_groups -comment (User specified comment)
set_clock_groups -group (List of clocks)
set_clock_groups -logically_exclusive (Specify logically exclusive clock groups)
set_clock_groups -name (Name for clock grouping)
set_clock_groups -physically_exclusive 
set_clock_latency -clock (List of relative clocks)
set_clock_latency -corners (set clock latency for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_clock_latency -dynamic 
set_clock_latency -early (Specify clock early source latency)
set_clock_latency -fall (Specify clock fall latency)
set_clock_latency -late (Specify clock late source latency)
set_clock_latency -max (Specify clock max condition latency)
set_clock_latency -min (Specify clock min condition latency)
set_clock_latency -modes (set clock latency for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_clock_latency -rise (Specify clock rise latency)
set_clock_latency -scenarios 
set_clock_latency -source (Specify clock source latency)
set_clock_routing_rules -clocks (List of clocks)
set_clock_routing_rules -default_rule (assign default routing rule)
set_clock_routing_rules -max_routing_layer 
set_clock_routing_rules -min_routing_layer 
set_clock_routing_rules -net_type (net type in the clock tree: 
set_clock_routing_rules -nets (List of nets)
set_clock_routing_rules -rules (non-default routing rules)
set_clock_sense -clock_leaf (Specify that the pin is a clock consumer)
set_clock_sense -clocks (List of clocks)
set_clock_sense -logical_stop_propagation 
set_clock_sense -negative (Specify negative unate (inverting) clock sense)
set_clock_sense -positive (Specify positive unate (non-inverting) clock sense)
set_clock_sense -pulse (Specify pulse clock sense: 
set_clock_sense -stop_propagation (Stop clock propagation from specified pins)
set_clock_transition -corners (set clock transition for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_clock_transition -fall (Set fall transition only)
set_clock_transition -max (Set maximum transition only)
set_clock_transition -min (Set minimum transition only)
set_clock_transition -modes (set clock transition for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_clock_transition -rise (Set rise transition only)
set_clock_transition -scenarios 
set_clock_tree_options -clocks (List of clocks)
set_clock_tree_options -copy_exceptions_across_modes 
set_clock_tree_options -corners (Corner list)
set_clock_tree_options -from_mode (from mode)
set_clock_tree_options -target_latency 
set_clock_tree_options -target_skew 
set_clock_tree_options -to_mode 
set_clock_tree_reference_subset -clocks (List of clocks)
set_clock_tree_reference_subset -lib_cells (Library cells allowed to use)
set_clock_trunk_endpoints -clock (Clocks)
set_clock_trunk_endpoints -corners (Corners)
set_clock_trunk_endpoints -delay (Phase delay)
set_clock_uncertainty -corners (set uncertainty for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_clock_uncertainty -fall (Inter-clock uncertainty is for falling clock edge)
set_clock_uncertainty -fall_from 
set_clock_uncertainty -fall_to 
set_clock_uncertainty -from (List of from clocks)
set_clock_uncertainty -hold (Clock uncertainty is for hold checks)
set_clock_uncertainty -modes (set uncertainty for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_clock_uncertainty -rise (Inter-clock uncertainty is for rising clock edge)
set_clock_uncertainty -rise_from 
set_clock_uncertainty -rise_to 
set_clock_uncertainty -scenarios 
set_clock_uncertainty -setup (Clock uncertainty is for setup checks)
set_clock_uncertainty -to (List of to clocks)
set_colors -color (Color ID for the color to use: 
set_colors -color_name (Color name for the color to use: 
set_colors -cycle_color (Cycle to the next color)
set_colors -depth (Integer hierarchy depth value or "all" to traverse entire hierarchy)
set_colors -hierarchy_types 
set_colors -keep (Keep current cell color if any)
set_command_option_value -command (set option value for an option of this command)
set_command_option_value -current (set current option value)
set_command_option_value -default (set default option value)
set_command_option_value -option (set option value for this option of the command)
set_command_option_value -position 
set_command_option_value -undefined (set option value to undefined)
set_command_option_value -value (set option value to this value)
set_consistency_settings_options -corner (cstr corner for extraction consistency checking)
set_consistency_settings_options -default (reset to default settings)
set_consistency_settings_options -early (select early mode)
set_consistency_settings_options -exec_path 
set_consistency_settings_options -report (report current option settings)
set_consistency_settings_options -saved_session 
set_consistency_settings_options -script (the script)
set_consistency_settings_options -star_corner 
set_consistency_settings_options -tluplus 
set_consistency_settings_options -tool 
set_constraint_mapping_file -reset (Reset existing block constraint map)
set_corner_status -active (Allow specified analysis types to happen)
set_corner_status -corners (List of corners)
set_corner_status -hold (Control hold analysis)
set_corner_status -label (Label name for reporting)
set_corner_status -max_capacitance 
set_corner_status -max_transition 
set_corner_status -min_capacitance 
set_corner_status -modes (List of modes)
set_corner_status -power (Control leakage power analysis)
set_corner_status -setup (Control setup analysis)
set_current_command_mode -command 
set_current_command_mode -mode (set current command mode to this mode)
set_current_ems_database -reset (Sets the current EMS database to none)
set_current_mismatch_config -enable 
set_data_check -clock (Clock at the related pin/port of the check)
set_data_check -corners (set data check for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_data_check -fall_from 
set_data_check -fall_to 
set_data_check -from (From pin or port for check)
set_data_check -hold (Check is for hold only)
set_data_check -modes (set data check for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_data_check -rise_from 
set_data_check -rise_to 
set_data_check -scenarios 
set_data_check -setup (Check is for setup only)
set_data_check -to (To pin or port for check)
set_db_file_mapping -library (Library)
set_density_gradient_options -cluster_threshold (5.0)]
set_density_gradient_options -edge_zone_width 
set_density_gradient_options -gradient_tolerance 
set_density_gradient_options -min_macro_size (500.0)]
set_density_gradient_options -outer_zone_width 
set_density_gradient_options -white_space_density 
set_design_attributes -attribute 
set_design_attributes -elements 
set_design_attributes -models (list of lib cells on which the attribute will be set)
set_disable_clock_gating_check
set_disable_timing -from (From pin on cell)
set_disable_timing -loop_break (indicate whether constraints coming from tool, not user)
set_disable_timing -to (To pin on cell)
set_domain_supply_net -primary_ground_net 
set_domain_supply_net -primary_power_net 
set_dont_touch
set_dont_touch_network -clear (Remove any dont_touch_network attribute)
set_dont_touch_network -clock_only (Propagate only within clock network)
set_dont_touch_network -no_propagate (Don't propagate across logic gates)
set_drive -corners (set drive resistance for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_drive -fall (Set fall resistance only)
set_drive -max (Set maximum resistance only)
set_drive -min (Set minimum resistance only)
set_drive -modes (set drive resistance for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_drive -rise (Set rise resistance only)
set_drive -scenarios 
set_drive_resistance -corners (set drive resistance for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_drive_resistance -fall (Set fall resistance only)
set_drive_resistance -max (Set maximum resistance only)
set_drive_resistance -min (Set minimum resistance only)
set_drive_resistance -modes (set drive resistance for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_drive_resistance -rise (Set rise resistance only)
set_drive_resistance -scenarios 
set_driving_cell -clock (Transition is relative to this clock)
set_driving_cell -clock_fall (Transition is relative to falling edge of the clock)
set_driving_cell -corners (set driving cell for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_driving_cell -dont_scale (Prevent operating condition scaling)
set_driving_cell -fall (Set fall driving_cell info)
set_driving_cell -from_pin 
set_driving_cell -input_transition_fall 
set_driving_cell -input_transition_rise 
set_driving_cell -lib_cell 
set_driving_cell -library (Library of driving cell)
set_driving_cell -max (Set maximum driving_cell info)
set_driving_cell -min (Set minimum driving_cell info)
set_driving_cell -modes (set driving cell for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_driving_cell -multiply_by (Driving strength multiplier: 
set_driving_cell -no_design_rule (Do not infer design rules from driving cell)
set_driving_cell -pin (Driving pin name)
set_driving_cell -rise (Set rise driving_cell info)
set_driving_cell -scenarios 
set_eco_placement_net_weight -nets 
set_eco_placement_net_weight -reset (reset all nets weight)
set_eco_placement_net_weight -weight (value of the weight: 
set_eco_power_intention -cells (List of cells)
set_edit_setting -auto_display_hidden 
set_edit_setting -default (Reset all options to default state)
set_edit_setting -expand_hit_blockage 
set_edit_setting -expand_hit_constraint 
set_edit_setting -expand_hit_macro_cell 
set_edit_setting -hierarchical_routing 
set_edit_setting -honor_ndr (honor non-default routing rules)
set_edit_setting -ignore_locked (ignore the locked flag and modify locked objects)
set_edit_setting -keep_pin_on_edge 
set_edit_setting -pin_layer_policy 
set_edit_setting -select_center_line 
set_edit_setting -select_center_vertex 
set_edit_setting -select_edge (allow object edge selection)
set_edit_setting -select_partial_object 
set_edit_setting -select_vertex (allow object vertex selection)
set_edit_setting -self_intersection 
set_edit_setting -specified_pin_layer 
set_edit_setting -update_color_mask 
set_edit_setting -update_floorplan 
set_edrc_setting -check_drc (check drc for editing)
set_edrc_setting -default (resets all options to their defaults)
set_edrc_setting -dpt_odd_cycle (check dpt odd cycle)
set_edrc_setting -dpt_precolor (check dpt color violation)
set_edrc_setting -enclosed_via_spacing_rule 
set_edrc_setting -end_of_line_spacing_rule 
set_edrc_setting -filter_same_net_spacing 
set_edrc_setting -general_via_spacing_rule 
set_edrc_setting -honor_ndr (honor non-default routing rules)
set_edrc_setting -max_error_limit 
set_edrc_setting -max_processing_time 
set_edrc_setting -max_shape_limit 
set_edrc_setting -metal_span_spacing_rule 
set_edrc_setting -metal_width_rule 
set_edrc_setting -minimum_edge_rule 
set_edrc_setting -minimum_length_and_area_rule 
set_edrc_setting -rdl_acute_angle_rule 
set_edrc_setting -rdl_right_angle_rule 
set_edrc_setting -show_error_browser 
set_edrc_setting -via_density_rule 
set_edrc_setting -via_enclosure_rule 
set_equivalent -function_only (Specifies that the supplies are functionally equivalent rather than electrically equivalent.)
set_equivalent -nets 
set_equivalent -sets (List of supply sets)
set_extraction_options -corners (List of corners)
set_extraction_options -default (restore all extraction options to default)
set_extraction_options -early_cap_scale 
set_extraction_options -early_ccap_ratio 
set_extraction_options -early_ccap_scale 
set_extraction_options -early_ccap_threshold 
set_extraction_options -early_res_scale 
set_extraction_options -early_vr_horizontal_cap_scale 
set_extraction_options -early_vr_horizontal_res_scale 
set_extraction_options -early_vr_vertical_cap_scale 
set_extraction_options -early_vr_vertical_res_scale 
set_extraction_options -early_vr_via_res_scale 
set_extraction_options -enable_ccap_or_filtering 
set_extraction_options -honor_mask_constraints 
set_extraction_options -include_pin_resistance 
set_extraction_options -late_cap_scale 
set_extraction_options -late_ccap_ratio 
set_extraction_options -late_ccap_scale 
set_extraction_options -late_ccap_threshold 
set_extraction_options -late_res_scale 
set_extraction_options -late_vr_horizontal_cap_scale 
set_extraction_options -late_vr_horizontal_res_scale 
set_extraction_options -late_vr_vertical_cap_scale 
set_extraction_options -late_vr_vertical_res_scale 
set_extraction_options -late_vr_via_res_scale 
set_extraction_options -operating_frequency 
set_extraction_options -process_scale 
set_extraction_options -real_metalfill_extraction 
set_extraction_options -reference_direction 
set_extraction_options -virtual_shield_extraction 
set_false_path -comment (User specified comment)
set_false_path -fall (Eliminate only falling delays for the defined paths)
set_false_path -fall_from 
set_false_path -fall_through 
set_false_path -fall_to 
set_false_path -from (List of path startpoints or clocks)
set_false_path -hold (Eliminate hold timing analysis for paths)
set_false_path -reset_path (Reset this path before setting false path)
set_false_path -rise (Eliminate only rising delays for the defined paths)
set_false_path -rise_from 
set_false_path -rise_through 
set_false_path -rise_to 
set_false_path -setup (Eliminate setup timing analysis for paths)
set_false_path -through 
set_false_path -to (List of path endpoints or clocks)
set_fanout_load
set_fixed_objects -unfix (Unfix objects)
set_floorplan_area_rules -forbidden_list 
set_floorplan_area_rules -forbidden_ranges 
set_floorplan_area_rules -layers (layers for routing_blockage object type)
set_floorplan_area_rules -lib_cells 
set_floorplan_area_rules -max (maximum value)
set_floorplan_area_rules -min (minimum value)
set_floorplan_area_rules -name (name of the rule)
set_floorplan_area_rules -object_types 
set_floorplan_area_rules -valid_list 
set_floorplan_area_rules -valid_ranges 
set_floorplan_enclosure_rules -follow_rotations (whether sides specified should follow all rotations of lib cells)
set_floorplan_enclosure_rules -forbidden_list 
set_floorplan_enclosure_rules -forbidden_ranges 
set_floorplan_enclosure_rules -from_corner 
set_floorplan_enclosure_rules -from_object_types 
set_floorplan_enclosure_rules -ignore_rotate90 (whether this rule be checked for 90 degree rotations of lib cells)
set_floorplan_enclosure_rules -layers (layers for routing_blockage object type)
set_floorplan_enclosure_rules -max (maximum value)
set_floorplan_enclosure_rules -min (minimum value)
set_floorplan_enclosure_rules -must_enclose (whether from object must enclose to object)
set_floorplan_enclosure_rules -name (name of the rule)
set_floorplan_enclosure_rules -offset (offset for dimension constraint)
set_floorplan_enclosure_rules -sides (sides for this enclosure floorplan rule: 
set_floorplan_enclosure_rules -step (step for dimension constraint)
set_floorplan_enclosure_rules -to_corner (to corner for this enclosure floorplan rule: 
set_floorplan_enclosure_rules -to_lib_cells 
set_floorplan_enclosure_rules -to_object_types 
set_floorplan_enclosure_rules -valid_list 
set_floorplan_enclosure_rules -valid_ranges 
set_floorplan_halo_rules -follow_rotations (whether sides specified should follow all rotations of lib cells)
set_floorplan_halo_rules -forbidden_list 
set_floorplan_halo_rules -forbidden_ranges 
set_floorplan_halo_rules -from_object_types 
set_floorplan_halo_rules -ignore_rotate90 (whether this rule be checked for 90 degree rotations of lib cells)
set_floorplan_halo_rules -layers (layers for routing_blockage object type)
set_floorplan_halo_rules -max (maximum value)
set_floorplan_halo_rules -min (minimum value)
set_floorplan_halo_rules -must_enclose (whether from object must enclose to object)
set_floorplan_halo_rules -name (name of the rule)
set_floorplan_halo_rules -offset (offset for dimension constraint)
set_floorplan_halo_rules -sides (sides for this enclosure floorplan rule: 
set_floorplan_halo_rules -step (step for dimension constraint)
set_floorplan_halo_rules -to_lib_cells 
set_floorplan_halo_rules -to_object_types 
set_floorplan_halo_rules -type (halo type for this halo floorplan rule: 
set_floorplan_halo_rules -valid_list 
set_floorplan_halo_rules -valid_ranges 
set_floorplan_spacing_rules -directions 
set_floorplan_spacing_rules -follow_rotations (whether sides specified should follow all rotations of lib cells)
set_floorplan_spacing_rules -forbidden_list 
set_floorplan_spacing_rules -forbidden_ranges 
set_floorplan_spacing_rules -from_layers 
set_floorplan_spacing_rules -from_lib_cells 
set_floorplan_spacing_rules -from_object_types 
set_floorplan_spacing_rules -ignore_rotate90 (whether this rule be checked for 90 degree rotations of lib cells)
set_floorplan_spacing_rules -max (maximum value)
set_floorplan_spacing_rules -min (minimum value)
set_floorplan_spacing_rules -min_parallel_run_length 
set_floorplan_spacing_rules -name (name of the rule)
set_floorplan_spacing_rules -no_overlap (whether the shapes will overlap)
set_floorplan_spacing_rules -offset (offset for dimension constraint)
set_floorplan_spacing_rules -step (step for dimension constraint)
set_floorplan_spacing_rules -to_layers 
set_floorplan_spacing_rules -to_lib_cells 
set_floorplan_spacing_rules -to_object_types 
set_floorplan_spacing_rules -valid_list 
set_floorplan_spacing_rules -valid_ranges 
set_floorplan_width_rules -direction (direction for this width floorplan rule: 
set_floorplan_width_rules -forbidden_list 
set_floorplan_width_rules -forbidden_ranges 
set_floorplan_width_rules -layers (layers for routing_blockage object type)
set_floorplan_width_rules -lib_cells 
set_floorplan_width_rules -max (maximum value)
set_floorplan_width_rules -min (minimum value)
set_floorplan_width_rules -name (name of the rule)
set_floorplan_width_rules -object_types 
set_floorplan_width_rules -offset (offset for dimension constraint)
set_floorplan_width_rules -step (step for dimension constraint)
set_floorplan_width_rules -type (type for this width floorplan rule: 
set_floorplan_width_rules -valid_list 
set_floorplan_width_rules -valid_ranges 
set_freeze_ports -all (Change both data and clock port freeze settings)
set_freeze_ports -clock (Change clock port freeze settings)
set_freeze_ports -data (Change data port freeze settings)
set_grid -layers (Specify the routing layers to consider within the PG strategy)
set_grid -orientations 
set_grid -pg_strategy 
set_grid -reset (Remove all existing options of the grid)
set_grid -site_arrays 
set_grid -site_rows (Specify the site rows to be considered in creating the grid)
set_grid -x_offset (Specify the grid's offset to the owner design's origin in the X direction)
set_grid -x_step (Specify the grid pitch in the X direction)
set_grid -y_offset (Specify the grid's offset to the owner design's origin in the Y direction)
set_grid -y_step (Specify the grid pitch in the Y direction)
set_hidden_app_var
set_hierarchy_options -blocks 
set_hierarchy_options -enable_planning 
set_hierarchy_options -from_level 
set_hierarchy_options -to_level 
set_host_options -add_hosts (addHosts)
set_host_options -max_cores (Maximum number of cores for the parent or child processes: 
set_host_options -name (Name for these options)
set_host_options -num_processes (Maximum number of processes for specified pool/hosts : 
set_host_options -submit_command (Command with options to submit a job)
set_host_options -submit_protocol 
set_host_options -target (Target application: 
set_host_options -timeout 
set_host_options -work_dir (Work directory for job files)
set_ideal_latency -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_ideal_latency -fall (Fall ideal latency)
set_ideal_latency -max (Max ideal latency)
set_ideal_latency -min (Min ideal latency)
set_ideal_latency -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_ideal_latency -rise (Rise ideal latency)
set_ideal_latency -scenarios 
set_ideal_network -no_propagate (Don't propagate through logic cells)
set_ideal_transition -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_ideal_transition -fall (Fall ideal transition)
set_ideal_transition -max (Max ideal transition)
set_ideal_transition -min (Min ideal transition)
set_ideal_transition -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_ideal_transition -rise (Rise ideal transition)
set_ideal_transition -scenarios 
set_ignored_layers -max_routing_layer 
set_ignored_layers -min_routing_layer 
set_ignored_layers -rc_congestion_ignored_layers 
set_ignored_layers -verbose (Print verbose output)
set_individual_pin_constraints -allow_feedthroughs 
set_individual_pin_constraints -allowed_layers 
set_individual_pin_constraints -cells (Specifies the collection of block cells for nets to set pin constraints)
set_individual_pin_constraints -length (length of the pin)
set_individual_pin_constraints -location 
set_individual_pin_constraints -nets (set constraints on block pins that connected to nets.)
set_individual_pin_constraints -off_edge (this pin should be placed off edge)
set_individual_pin_constraints -offset 
set_individual_pin_constraints -pin_spacing 
set_individual_pin_constraints -pin_spacing_distance 
set_individual_pin_constraints -pins (Specifies the collection of pins to set pin constraints)
set_individual_pin_constraints -ports (Specifies the collection of ports to set pin constraints)
set_individual_pin_constraints -sides 
set_individual_pin_constraints -width (width of the pin)
set_info_var -caller (Procedure that uses the var (usually step procedure))
set_info_var -category (Step/procedure/category for the variable - default global)
set_info_var -one_of (List of user specified value for the variable)
set_info_var -required (Variable needs to be set)
set_info_var -type (Type of the variable. Similar to the option used by setvar - default: string)
set_input_delay -add_delay (Don't remove existing input delay)
set_input_delay -clock (Relative clock)
set_input_delay -clock_fall (Delay is relative to falling edge of clock)
set_input_delay -corners (set input delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_input_delay -fall ( Specifies falling delay)
set_input_delay -level_sensitive (Delay is from level-sensitive latch)
set_input_delay -max ( Specifies maximum delay)
set_input_delay -min ( Specifies minimum delay)
set_input_delay -modes (set input delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_input_delay -network_latency_included 
set_input_delay -reference_pin 
set_input_delay -rise ( Specifies rising delay)
set_input_delay -scenarios 
set_input_delay -source_latency_included 
set_input_transition -clock (Transition is relative to this clock)
set_input_transition -clock_fall (Transition is relative to falling edge of the clock)
set_input_transition -corners (set transition for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_input_transition -fall (Set fall transition only)
set_input_transition -max (Set maximum transition only)
set_input_transition -min (Set minimum transition only)
set_input_transition -modes (set transition for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_input_transition -rise (Set rise transition only)
set_input_transition -scenarios 
set_interfaces -design (Top design for finding objects)
set_interfaces -force (Disconnect any connected nets)
set_isolate_ports -driver 
set_isolate_ports -force (ensure that specified driver libcell type or buffer/inverter type is used)
set_isolate_ports -type 
set_isolation -applies_to 
set_isolation -clamp_value (The value to which the input or output shall be clamped: 
set_isolation -diff_supply_only 
set_isolation -domain (Power domain)
set_isolation -elements 
set_isolation -exclude_elements 
set_isolation -isolation_ground_net 
set_isolation -isolation_power_net 
set_isolation -isolation_sense 
set_isolation -isolation_signal 
set_isolation -isolation_supply_set 
set_isolation -location (Location in logic hierarchy: 
set_isolation -name_prefix 
set_isolation -name_suffix 
set_isolation -no_isolation (No isolation)
set_isolation -sink (The sink supply set)
set_isolation -source (The source supply set)
set_isolation -update (update elements)
set_isolation_control -domain (Power domain)
set_isolation_control -isolation_sense 
set_isolation_control -isolation_signal 
set_isolation_control -location (Location in logic hierarchy: 
set_latch_loop_breaker -avoid (Indicates to avoid these pins when selecting loop-breakers)
set_latch_loop_breaker -pin (latch D pin)
set_latch_loop_breaker -remove (Removes the user-specified settings on pins)
set_latency_adjustment_options -clocks_to_update 
set_latency_adjustment_options -exclude_clocks 
set_latency_adjustment_options -ocv_included (Update clock already includes early and late clock variance)
set_latency_adjustment_options -reference_clock 
set_latency_budget_constraints -clock 
set_latency_budget_constraints -corner (Corner for delay values)
set_latency_budget_constraints -crp (Set "clock reconvergence pessimism" that should be added back to the budget path)
set_latency_budget_constraints -default (Set default for unspecified corners)
set_latency_budget_constraints -early_dynamic (Specifies dynamic component of latency)
set_latency_budget_constraints -early_latency (Set budgeted early latency for the clock)
set_latency_budget_constraints -from_clock 
set_latency_budget_constraints -late_dynamic (Specifies dynamic component of latency)
set_latency_budget_constraints -late_latency (Set budgeted late latency for the clock)
set_latency_budget_constraints -latency_offset 
set_latency_budget_constraints -source (Specified latencies are source latency)
set_latency_budget_constraints -to_clock 
set_layer_map_file -format (Layer mapping file format: Values: gds, starrc)
set_layer_map_file -library 
set_layer_map_file -map_file 
set_level_shifter -applies_to 
set_level_shifter -domain (Power domain)
set_level_shifter -elements (List of pin and ports)
set_level_shifter -exclude_elements 
set_level_shifter -force_shift (Unconditional insertion of a level shifter)
set_level_shifter -location (Location in logic hierarchy: 
set_level_shifter -name_prefix 
set_level_shifter -name_suffix 
set_level_shifter -no_shift (No shift)
set_level_shifter -rule (Rules for level shifter: 
set_level_shifter -threshold (Voltage threshold)
set_level_shifter -update (update elements)
set_lib_cell_purpose -exclude (The lib_cells cannot be used for these purposes: 
set_lib_cell_purpose -include (The lib_cells can be used for only these purposes: 
set_load -fall (Specify the fall capacitance value (for ports only))
set_load -max (Specify the maximum capacitance value)
set_load -min (Specify the minimum capacitance value)
set_load -pin_load (Pin capacitance (for ports only))
set_load -rise (Specify the rise capacitance value (for ports only))
set_load -subtract_pin_load (Subtract pin capacitance from value (nets only))
set_load -wire_load (Wire capacitance (for ports only))
set_locked_objects -unlock (Unlock objects)
set_m14_pg_config_by_direction
set_macro_constraints -align_pins_to_tracks 
set_macro_constraints -alignment_grid 
set_macro_constraints -alignment_orientation_set 
set_macro_constraints -alignment_point 
set_macro_constraints -allowed_orientations 
set_macro_constraints -preferred_location 
set_macro_relative_location -anchor_corner 
set_macro_relative_location -anchor_object 
set_macro_relative_location -offset (X and Y distance from anchor corner to target corner)
set_macro_relative_location -offset_type 
set_macro_relative_location -scale_edge 
set_macro_relative_location -target_corner 
set_macro_relative_location -target_object 
set_macro_relative_location -target_orientation 
set_macro_relative_location -used_length 
set_max_capacitance -clock_path (Specify clock path)
set_max_capacitance -corners (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_max_capacitance -data_path (Specify data path)
set_max_capacitance -db (Specify db library path for lib_pins)
set_max_capacitance -modes (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_max_capacitance -scenarios 
set_max_delay -comment (User specified comment)
set_max_delay -fall (Delay value applies to falling paths)
set_max_delay -fall_from 
set_max_delay -fall_through 
set_max_delay -fall_to 
set_max_delay -from (List of path startpoints or clocks)
set_max_delay -ignore_clock_latency 
set_max_delay -reset_path (Reset this path first)
set_max_delay -rise (Delay value applies to rising paths)
set_max_delay -rise_from 
set_max_delay -rise_through 
set_max_delay -rise_to 
set_max_delay -through 
set_max_delay -to (List of path endpoints or clocks)
set_max_fanout
set_max_lvth_percentage
set_max_time_borrow -corners (set max_time_borrow for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_max_time_borrow -modes (set max_time_borrow for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_max_time_borrow -scenarios 
set_max_transition -clock_path (Specify clock path)
set_max_transition -corners (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_max_transition -data_path (Specify data path)
set_max_transition -db (Specify db library path for lib_pins)
set_max_transition -modes (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_max_transition -scenarios 
set_message_info -id (Message id)
set_message_info -limit (Maximum occurences before auto-suppression: 
set_message_info -stop_off (Turn off Tcl error for message if -stop_on was previously used)
set_message_info -stop_on (Force Tcl error if message is emitted)
set_min_capacitance -clock_path (Specify clock path)
set_min_capacitance -corners (set DRC limit for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_min_capacitance -data_path (Specify data path)
set_min_capacitance -db (Specify db library path for lib_pins)
set_min_capacitance -modes (set DRC limit for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_min_capacitance -scenarios 
set_min_delay -comment (User specified comment)
set_min_delay -fall (Delay value applies to falling paths)
set_min_delay -fall_from 
set_min_delay -fall_through 
set_min_delay -fall_to 
set_min_delay -from (List of path startpoints or clocks)
set_min_delay -ignore_clock_latency 
set_min_delay -reset_path (Reset this path first)
set_min_delay -rise (Delay value applies to rising paths)
set_min_delay -rise_from 
set_min_delay -rise_through 
set_min_delay -rise_to 
set_min_delay -through 
set_min_delay -to (List of path endpoints or clocks)
set_min_pulse_width -corners (use scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_min_pulse_width -high (Applies value only to high clock signal level)
set_min_pulse_width -low (Applies value only to low clock signal level)
set_min_pulse_width -modes (use scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_min_pulse_width -scenarios 
set_multicycle_path -comment (User specified comment)
set_multicycle_path -end (Multiplier measured against capture clock)
set_multicycle_path -fall (Multiplier valid for falling delays on path endpoint)
set_multicycle_path -fall_from 
set_multicycle_path -fall_through 
set_multicycle_path -fall_to 
set_multicycle_path -from (List of path startpoints or clocks)
set_multicycle_path -hold (Only hold multiplier is set)
set_multicycle_path -reset_path (Reset this path before setting multicycle)
set_multicycle_path -rise (Multiplier valid for rising delays on path endpoint)
set_multicycle_path -rise_from 
set_multicycle_path -rise_through 
set_multicycle_path -rise_to 
set_multicycle_path -setup (Only setup multiplier is set)
set_multicycle_path -start (Multiplier measured against launch clock)
set_multicycle_path -through 
set_multicycle_path -to (List of path endpoints or clocks)
set_multisource_clock_subtree_constraints -cells (list of cells to which constraints need to be applied)
set_multisource_clock_subtree_constraints -clock (the clock the settings should apply to)
set_multisource_clock_subtree_constraints -ignore_for_icg_reordering 
set_multisource_clock_subtree_constraints -name (name of the option settings)
set_multisource_clock_subtree_constraints -pins (list of pins to which constraints need to be applied)
set_multisource_clock_subtree_constraints -target_level (add buffers to make all subtrees have this number of levels: 
set_multisource_clock_subtree_options -balance_levels (false|true)]
set_multisource_clock_subtree_options -clock (the clock the settings should apply to)
set_multisource_clock_subtree_options -corners (Corner list)
set_multisource_clock_subtree_options -dont_merge_cells 
set_multisource_clock_subtree_options -driver_objects 
set_multisource_clock_subtree_options -enable_icg_reordering (false|true)]
set_multisource_clock_subtree_options -max_total_wire_delay 
set_multisource_clock_subtree_options -name (name of the option settings)
set_multisource_clock_subtree_options -target_level (add buffers to make all subtrees have this number of levels: 
set_multisource_clock_tap_options -clock (the clock the settings should apply to)
set_multisource_clock_tap_options -dont_merge_cells 
set_multisource_clock_tap_options -driver_objects 
set_multisource_clock_tap_options -name (explicit name for the option setting)
set_multisource_clock_tap_options -num_taps 
set_net_estimation_rule -horizontal_value 
set_net_estimation_rule -parameter 
set_net_estimation_rule -unset (Remove a manually set value)
set_net_estimation_rule -value (Set a manual value)
set_net_estimation_rule -vertical_value 
set_net_weight_effort -nets 
set_net_weight_effort -verbose (Print verbose output)
set_net_weight_effort -virtual_flat (Propagate net weight to associated net segments in child blocks)
set_net_weight_effort -weight_effort (Weight effort <low | medium | high | ultra | none>. Default is low.)
set_object_layer -force (To ignore locked status of the objects)
set_object_layer -layers (Target layers for objects)
set_object_layer -of_objects (Set layer of these objects)
set_object_shape -area (specifies the required area)
set_object_shape -keep_area (specifies to use the current area)
set_object_shape -lengths (specifies absolute lengths or length ratios of the sides of the shape.)
set_object_shape -rotate (amount to rotate by: 
set_object_shape -shape (shape to set: 
set_object_shape -utilization (specifies the required utilization: 
set_operating_conditions -analysis_type (Analysis type (unused): 
set_operating_conditions -library (.db library name to search)
set_operating_conditions -max (Max operating condition name)
set_operating_conditions -max_library (.db library name to search for max condition)
set_operating_conditions -min (Min operating condition name)
set_operating_conditions -min_library (.db library name to search for min condition)
set_operating_conditions -object_list 
set_output_delay -add_delay (Don't remove existing output delay)
set_output_delay -clock (Relative clock)
set_output_delay -clock_fall (Delay is relative to falling edge of clock)
set_output_delay -corners (set output delay for scenarios of these corners (default is all corners, or current scenario if neither mode nor corner are specified))
set_output_delay -fall ( Specifies falling delay)
set_output_delay -group_path 
set_output_delay -level_sensitive (Delay is to level-sensitive latch)
set_output_delay -max ( Specifies maximum delay)
set_output_delay -min ( Specifies minimum delay)
set_output_delay -modes (set output delay for scenarios of these modes (default is current mode, or current scenario if neither mode nor corner are specified))
set_output_delay -network_latency_included 
set_output_delay -reference_pin 
set_output_delay -rise ( Specifies rising delay)
set_output_delay -scenarios 
set_output_delay -source_latency_included 
set_parasitic_parameters -corners (List of corners)
set_parasitic_parameters -early_spec 
set_parasitic_parameters -early_temperature 
set_parasitic_parameters -late_spec 
set_parasitic_parameters -late_temperature 
set_parasitic_parameters -library (Library containing specs)
set_parasitics_parameters -corners (List of corners)
set_parasitics_parameters -early_spec 
set_parasitics_parameters -early_temperature 
set_parasitics_parameters -late_spec 
set_parasitics_parameters -late_temperature 
set_parasitics_parameters -library (Library containing specs)
set_partial_on_translation -full_on_tools 
set_partial_on_translation -off_tools (list of tools in which partial on is translated to off)
set_path_margin -comment (User specified comment)
set_path_margin -corners 
set_path_margin -fall (Margin value applies to falling paths at endpoint)
set_path_margin -fall_from 
set_path_margin -fall_through 
set_path_margin -fall_to 
set_path_margin -from (List of path startpoints or clocks)
set_path_margin -hold (Margin value applies for hold timing at endpoint)
set_path_margin -reset_path (Reset this path before setting path margin)
set_path_margin -rise (Margin value applies to rising paths at endpoint)
set_path_margin -rise_from 
set_path_margin -rise_through 
set_path_margin -rise_to 
set_path_margin -setup (Margin value applies for setup timing at endpoint)
set_path_margin -through 
set_path_margin -to (List of path endpoints or clocks)
set_pg_mask_constraint -track_alignment_mode 
set_pg_mask_constraint -track_alignment_offset 
set_pg_mask_constraint -width (PG wire width)
set_pg_strategy -blockage (blockage option of this strategy)
set_pg_strategy -blocks (use blocks as routing area)
set_pg_strategy -core (use core area as routing area)
set_pg_strategy -design_boundary (use design boundary as routing area)
set_pg_strategy -extension (extension option of this strategy)
set_pg_strategy -macros (use macros as routing area)
set_pg_strategy -pattern 
set_pg_strategy -pg_regions 
set_pg_strategy -polygon (use polygon as routing area)
set_pg_strategy -voltage_areas 
set_pg_strategy_via_rule -via_rule (via rule for PG strategies)
set_pg_via_master_rule -allow_multiple 
set_pg_via_master_rule -contact_code 
set_pg_via_master_rule -cut_mask 
set_pg_via_master_rule -cut_spacing (the horizontal and vertical spacing between cuts in an array via)
set_pg_via_master_rule -offset (horizontal and vertical offset of the via)
set_pg_via_master_rule -offset_start 
set_pg_via_master_rule -orient (the orient of the contact code: 
set_pg_via_master_rule -snap_reference_point 
set_pg_via_master_rule -track_alignment 
set_pg_via_master_rule -via_array_dimension 
set_pg_via_master_rule -via_site_ratio 
set_pin_budget_constraints -all (Specify all pins of all budgeted blocks in all modes)
set_pin_budget_constraints -all_modes (Apply budget in all modes)
set_pin_budget_constraints -all_pins (Specify all pins of all budgeted blocks in the selected modes)
set_pin_budget_constraints -early_boundary 
set_pin_budget_constraints -feedthrough (Apply only to paths that are part of block feedthroughs)
set_pin_budget_constraints -from_clock (Apply only to paths starting with this clock)
set_pin_budget_constraints -from_clock_fall (Specify falling edge of from_clock)
set_pin_budget_constraints -from_clock_rise (Specify rising edge of from_clock)
set_pin_budget_constraints -from_delay (Set a manual budget by specifying delay on the path before the pin)
set_pin_budget_constraints -from_percent 
set_pin_budget_constraints -frozen (Don't allow update_budget to change value)
set_pin_budget_constraints -inputs (Apply only to specified block inputs)
set_pin_budget_constraints -internal (Apply only to paths that start or end in the local block)
set_pin_budget_constraints -internal_delay 
set_pin_budget_constraints -internal_percent 
set_pin_budget_constraints -late_boundary 
set_pin_budget_constraints -modes (Apply budget in these modes)
set_pin_budget_constraints -none (Set so no budget is created)
set_pin_budget_constraints -not_frozen (Allow update_budget to change value)
set_pin_budget_constraints -not_same_as_feedthrough 
set_pin_budget_constraints -not_same_as_mib (Make this pin independent of other multiply instantiated blocks)
set_pin_budget_constraints -not_same_as_modes (Make this pin independent of other mode budgets)
set_pin_budget_constraints -not_same_as_pin (Make this pin independent of other pin budgets)
set_pin_budget_constraints -outputs (Apply only to specified block outputs)
set_pin_budget_constraints -reset (Clear all budgets for this pin)
set_pin_budget_constraints -same_as_feedthrough (Set the internal budget to be the same as the feedthrough budget)
set_pin_budget_constraints -same_as_mib (Set the same budget as other multiply instantiated blocks)
set_pin_budget_constraints -same_as_modes 
set_pin_budget_constraints -same_as_pin 
set_pin_budget_constraints -to_clock (Apply only to paths ending with this clock)
set_pin_budget_constraints -to_clock_fall (Specify falling edge of to_clock)
set_pin_budget_constraints -to_clock_rise (Specify rising edge of to_clock)
set_pin_budget_constraints -to_delay (Set a manual budget by specifying delay on the path after the pin)
set_pin_budget_constraints -to_percent (Set a manual budget by specifying percent of the path after the pin)
set_placement_spacing_label -lib_cells (collection of lib cells)
set_placement_spacing_label -name (Label name)
set_placement_spacing_label -row (row of cell)
set_placement_spacing_label -side (Side one of left | right | both: 
set_placement_spacing_rule -labels 
set_placement_status
set_pocvm_corner_sigma -corners (List of corners)
set_pop_up_object_options -block_action 
set_pop_up_object_options -object_type 
set_pop_up_object_options -pins_as_terminals 
set_pop_up_object_options -routing_overlap_check 
set_port_antenna_property -add (Add to Existing data)
set_port_antenna_property -data (Antenna Prop Data)
set_port_antenna_property -port (Port name)
set_port_antenna_property -replace (Replace Existing Data)
set_port_attributes -applies_to 
set_port_attributes -attribute 
set_port_attributes -clamp_value (indicates the value that specified ports shall be clamped to: 
set_port_attributes -driver_supply 
set_port_attributes -elements 
set_port_attributes -feedthrough (indicates specified ports connected together internally)
set_port_attributes -model (name of a library cell)
set_port_attributes -ports (list of ports to be attributed)
set_port_attributes -receiver_supply 
set_port_attributes -repeater_supply 
set_port_attributes -unconnected (indicates specified ports are unconnected internally)
set_power_clock_scaling -period (period of clock used in SAIF: 
set_power_clock_scaling -ratio (clock period in SAIF / clock period in SDC: 
set_power_clock_scaling -scenarios (Scenarios for which to set the clock scaling values)
set_power_derate -groups (Specify the power group names)
set_power_derate -internal (Apply derate to internal power)
set_power_derate -leakage (Apply derate to leakage power)
set_power_derate -scenarios 
set_power_derate -switching (Apply derate to switching power)
set_power_group -name (power group names to be set)
set_power_io_constraints -io_guide_object 
set_power_io_constraints -offset 
set_power_io_constraints -ratio 
set_power_io_constraints -reference_cell 
set_power_io_constraints -share 
set_power_io_constraints -spacing 
set_power_strategy_attribute
set_power_switch_placement_pattern -connect_mode 
set_power_switch_placement_pattern -direction (power switch pattern placement direction: 
set_power_switch_placement_pattern -driver (drive cell in the pattern)
set_power_switch_placement_pattern -name (power switch placement pattern name)
set_power_switch_placement_pattern -pattern (power switch pattern)
set_power_switch_placement_pattern -placement_type 
set_power_switch_placement_pattern -port_net_name (port net name)
set_process_label -clear (Remove existing settings)
set_process_label -corners (List of corners)
set_process_label -early (Early process label name)
set_process_label -late (Late process label name)
set_process_label -library (Applicable cell library)
set_process_label -object_list (List of cells and/or ports)
set_process_number -clear (Remove existing settings)
set_process_number -corners (List of corners)
set_process_number -early (Early process number)
set_process_number -late (Late process number)
set_process_number -library (Applicable cell library)
set_process_number -object_list (List of cells and/or ports)
set_programmable_spare_cell_mapping_rule -compatible (compatible psc type id list)
set_programmable_spare_cell_mapping_rule -dont_overlap_pg_stripe_layer 
set_programmable_spare_cell_mapping_rule -multi_height_merge 
set_programmable_spare_cell_mapping_rule -multi_height_split 
set_programmable_spare_cell_mapping_rule -partial_overlap_pg_stripe_layer 
set_programmable_spare_cell_mapping_rule -psc_type_id (a list of psc type id)
set_propagated_clock
set_push_down_object_options -allow_multi_rail_cells (default is false)]
set_push_down_object_options -block_action 
set_push_down_object_options -collinear_margin (default is -1, 0 means abutting exactly, >0 applies a non-0 margin)]
set_push_down_object_options -ignore_misalignment 
set_push_down_object_options -location_based_terminal_naming 
set_push_down_object_options -object_type 
set_push_down_object_options -pin_meet_fatwire_rule (default is false)]
set_push_down_object_options -routing_overlap_check 
set_push_down_object_options -top_action 
set_pvt_configuration -add (Create a new rule)
set_pvt_configuration -clear_filter 
set_pvt_configuration -name (Give the new rule a specific name)
set_pvt_configuration -process_labels 
set_pvt_configuration -process_numbers 
set_pvt_configuration -rule (Change the current rule)
set_pvt_configuration -temperatures 
set_pvt_configuration -voltages 
set_rail_integrity_strategy -allow_stacked_endpoint_vias_outside_of_overlapping_area 
set_rail_integrity_strategy -area_edge_condition 
set_rail_integrity_strategy -core ((default false))
set_rail_integrity_strategy -cut_merged_shape ((default false))
set_rail_integrity_strategy -discontinuous_connection_directionality 
set_rail_integrity_strategy -discontinuous_connection_threshold 
set_rail_integrity_strategy -enable_discontinuous_connection_check 
set_rail_integrity_strategy -error_data ()
set_rail_integrity_strategy -exclude_cell_masters 
set_rail_integrity_strategy -exclude_macros ()
set_rail_integrity_strategy -exclude_polygon ()
set_rail_integrity_strategy -existing_stacked_via_check_mode 
set_rail_integrity_strategy -filter_layer_net_shapes 
set_rail_integrity_strategy -ideal_sourced_dangling_vias 
set_rail_integrity_strategy -ignore_conn_view_eeq_for_physical_connectivity_tracing 
set_rail_integrity_strategy -ignore_discontinuous_connection_object_types 
set_rail_integrity_strategy -ignore_discontinuous_connection_routing_layers 
set_rail_integrity_strategy -ignore_discontinuous_connection_shape_types 
set_rail_integrity_strategy -ignore_minimum_via_criterion 
set_rail_integrity_strategy -ignore_other_pg_net_shapes 
set_rail_integrity_strategy -ignore_other_shape_net_types 
set_rail_integrity_strategy -ignore_pin_shape_layers 
set_rail_integrity_strategy -ignore_pins_by_cell 
set_rail_integrity_strategy -ignore_pins_by_cell_type 
set_rail_integrity_strategy -ignore_routing_blockage_layers 
set_rail_integrity_strategy -ignore_routing_blockages 
set_rail_integrity_strategy -ignore_small_overlapping_area 
set_rail_integrity_strategy -ignore_touching_floating_pin_shape_errors 
set_rail_integrity_strategy -ignore_via_enclosure_shape 
set_rail_integrity_strategy -macros ()
set_rail_integrity_strategy -max_via_distance_along_parallel_wires 
set_rail_integrity_strategy -merge_same_layer_shapes 
set_rail_integrity_strategy -missing_via_net_shape_direction 
set_rail_integrity_strategy -missing_via_rule ()
set_rail_integrity_strategy -nets ()
set_rail_integrity_strategy -no_stack ((default false))
set_rail_integrity_strategy -non_ideal_sourced_floating_shapes 
set_rail_integrity_strategy -override_conn_view_eeq_class_to_interpret_as_same_class 
set_rail_integrity_strategy -pg_pin_floating_connection_check 
set_rail_integrity_strategy -pg_regions ()
set_rail_integrity_strategy -polygon ()
set_rail_integrity_strategy -use_conn_view ((default false))
set_rail_integrity_strategy -via_existence_check_merge_via_cut 
set_rail_integrity_strategy -via_existence_check_partially_enclosed 
set_rail_integrity_strategy -voltage_areas ()
set_ref_libs -add (Add library reference path)
set_ref_libs -before (Add reference before library)
set_ref_libs -clear (Remove all library references)
set_ref_libs -library (Library name)
set_ref_libs -rebind (Rebind library references)
set_ref_libs -ref_libs (Reference library list)
set_ref_libs -remove (Remove library reference)
set_ref_libs -use_technology_lib 
set_reference -block (New reference block)
set_reference -design (Top design for finding objects)
set_reference -of_object (Old reference block)
set_reference -pin_map (Map old pins to new ports by name)
set_reference -pin_rebind (Pin rebind style: default is 'safe': 
set_reference -pin_verbose (Verbose pin operations)
set_reference -reference (Old reference name)
set_reference -to_block (New reference block)
set_reference -to_module (New reference module)
set_related_supply_net -ground 
set_related_supply_net -object_list 
set_related_supply_net -power 
set_report_configuration -columns 
set_report_configuration -default (Revert to default report configuration)
set_report_configuration -dynamic_width 
set_report_configuration -filler_string 
set_report_configuration -overflow_method 
set_report_configuration -report (Name of the report)
set_retention -domain (Specify the power domain of the strategy)
set_retention -elements (Specify design elements to which this strategy is applied)
set_retention -no_retention (No retention)
set_retention -restore_condition 
set_retention -restore_signal 
set_retention -retention_condition 
set_retention -retention_ground_net 
set_retention -retention_power_net 
set_retention -retention_supply_set 
set_retention -save_condition 
set_retention -save_signal 
set_retention -update (Update previously defined retention strategy)
set_retention_control -assert_r_mutex 
set_retention_control -assert_rs_mutex 
set_retention_control -assert_s_mutex 
set_retention_control -domain (Specify the power domain of the strategy)
set_retention_control -restore_signal 
set_retention_control -save_signal 
set_retention_elements -elements (Specify the retention element list)
set_route_opt_target_endpoints -hold_endpoints 
set_route_opt_target_endpoints -hold_timing 
set_route_opt_target_endpoints -ldrc_objects 
set_route_opt_target_endpoints -reset (Reset)
set_route_opt_target_endpoints -scenario (Default scenario name)
set_route_opt_target_endpoints -setup_endpoints 
set_route_opt_target_endpoints -setup_timing 
set_routing_rule -clear (To clear values on the nets)
set_routing_rule -default_rule (To assign the default rule)
set_routing_rule -max_layer_is_user 
set_routing_rule -max_layer_mode (Maximum routing layer mode: 
set_routing_rule -max_layer_mode_soft_cost 
set_routing_rule -max_routing_layer 
set_routing_rule -min_layer_is_user 
set_routing_rule -min_layer_mode (Minimum routing layer mode: 
set_routing_rule -min_layer_mode_soft_cost 
set_routing_rule -min_routing_layer 
set_routing_rule -no_rule (To assign no rule, allowing tool to auto-assign a rule)
set_routing_rule -rule (Non-default routing rule to assign)
set_rp_group_options -alignment 
set_rp_group_options -allow_non_rp_cells (Placement of non RP cells on empty space of rp group)
set_rp_group_options -allow_non_rp_cells_on_blockages 
set_rp_group_options -anchor_column 
set_rp_group_options -anchor_corner 
set_rp_group_options -anchor_row 
set_rp_group_options -group_orientation 
set_rp_group_options -move_effort 
set_rp_group_options -optimization_restriction 
set_rp_group_options -pin_name 
set_rp_group_options -place_around_fixed_cells 
set_rp_group_options -rp_only_keepout_margin 
set_rp_group_options -tiling_type 
set_rp_group_options -utilization 
set_rp_group_options -x_offset (X offset)
set_rp_group_options -y_offset (Y offset)
set_scenario_status -active (Allow specified analysis types to happen)
set_scenario_status -all (Turn on all analysis types)
set_scenario_status -cell_em 
set_scenario_status -dynamic_power 
set_scenario_status -hold (Control hold analysis)
set_scenario_status -leakage_power 
set_scenario_status -max_capacitance 
set_scenario_status -max_transition 
set_scenario_status -min_capacitance 
set_scenario_status -none (Turn off all analysis types)
set_scenario_status -setup (Control setup analysis)
set_scenario_status -signal_em 
set_scope
set_segment_budget_constraints -delay (Delay to attach to the segment)
set_segment_budget_constraints -from (Pin on budget block where segment starts)
set_segment_budget_constraints -remove (Remove the specified constraint)
set_segment_budget_constraints -rule (Name of a rule for calculating delay)
set_segment_budget_constraints -to (Pin on budget block where segment ends)
set_sense -clock_leaf (Specify that the pin is a clock consumer)
set_sense -clocks (List of clocks)
set_sense -negative (Specify negative unate (inverting) clock sense)
set_sense -positive (Specify positive unate (non-inverting) clock sense)
set_sense -pulse (Specify pulse clock sense: 
set_sense -stop_propagation (Stop propagation from specified pins)
set_sense -type (Specify type of sense: Values: clock, data)
set_shaping_options -add_channel_blockages 
set_shaping_options -guard_band_size 
set_shaping_options -keep_top_level_together 
set_shaping_options -min_channel_size 
set_shaping_options -reset (Specify to reset to all default values)
set_shaping_options -utilization_slack 
set_si_delay_analysis -aggressors 
set_si_delay_analysis -exclude (Exclude nets for crosstalk)
set_si_delay_analysis -ignore_arrival 
set_si_delay_analysis -victims (List of nets as victim)
set_signal_io_constraints -constraint 
set_signal_io_constraints -file 
set_signal_io_constraints -io_guide_object 
set_site_array_stack_order -above (Name or collection of a site array)
set_site_array_stack_order -below (Name or collection of a site array)
set_site_array_stack_order -bottom (lower site array to the bottom of the stack)
set_site_array_stack_order -lower (lower site array by one position)
set_site_array_stack_order -raise (raise site array by one position)
set_site_array_stack_order -top (raise site array to the top of the stack)
set_size_only -all_instances (Process all other cells similar to the given cells)
set_snap_setting -class (snap object class: 
set_snap_setting -cursor_edge (snap cursor to object edges)
set_snap_setting -default (Reset all options to default state)
set_snap_setting -edge_radius (edge search radius: 
set_snap_setting -enabled (snapping state)
set_snap_setting -fix_orientation 
set_snap_setting -macro_by_color 
set_snap_setting -object_edge (snap object to object edges)
set_snap_setting -preferred_track 
set_snap_setting -snap (snap type for given object class: 
set_snap_setting -user_grid (current user grid)
set_ssc_clock -clock (name of the new generated clock)
set_ssc_clock -debug (enable debug message)
set_ssc_clock -from (name of the source register clock pin)
set_ssc_clock -to (port name at which you want to create generated clock)
set_ssc_data_read -clock (name of the clock against which the check should be defined)
set_ssc_data_read -debug (enable debug message)
set_ssc_data_read -from (name of the data port at which you want to create the check)
set_ssc_data_read -hold_args (hold value)
set_ssc_data_read -nofp (dont apply false paths)
set_ssc_data_read -setup_args (setup value)
set_ssc_data_read -to (name of the source register )
set_ssc_data_write -clock (name of the clock against which the check should be defined)
set_ssc_data_write -debug (enable debug message)
set_ssc_data_write -from (name of the source register name or pin)
set_ssc_data_write -hold_args (hold value)
set_ssc_data_write -nofp (dont apply false paths)
set_ssc_data_write -setup_args (setup value)
set_ssc_data_write -to (name of the data port at which you want to create the check)
set_ssc_top_get_par_name
set_ssc_top_get_unit_name
set_ssc_top_get_unit_par_names
set_starrc_in_design -config (config file to set for StarRC in design)
set_supernet_exceptions -disable_cells 
set_supernet_exceptions -pins (Pins whch are to be set to supernet transparent)
set_svf -append (Append guidance to existing directory)
set_svf -off (Stop recording guidance and close all files)
set_svf -replace (Replace directory if it already exists)
set_switching_activity -base_clock 
set_switching_activity -corners (Set activity for specified corners)
set_switching_activity -modes (Set activity for specified modes)
set_switching_activity -path_sources 
set_switching_activity -period (Related clock frequency in Hertz (cycles per second))
set_switching_activity -scenarios (Set activity for specified scenarios)
set_switching_activity -state_condition 
set_switching_activity -static_probability 
set_switching_activity -toggle_rate 
set_target_library_subset -clock (To indicate subset constrains only clock paths)
set_target_library_subset -data (To indicate subset constrains only data paths)
set_target_library_subset -dont_use (Library cells to not use)
set_target_library_subset -objects (Hierarchical cells on which to apply the subset)
set_target_library_subset -only_here (Library cells to allow here but not in other places)
set_target_library_subset -top (To apply the subset on the top block)
set_technology -node (Technology node name (12, 7))
set_temperature -clear (Remove existing settings)
set_temperature -corners (List of corners)
set_temperature -min (min temperature)
set_temperature -object_list 
set_threshold_voltage_group_type -type (Vth type: 
set_timing_derate -aocvm_guardband (Specify AOCVM GuardBand)
set_timing_derate -cell_check (Specify derate factor for cell timing checks)
set_timing_derate -cell_delay (Specify derate factor for cell delays)
set_timing_derate -clock (Specify derate factor for clock paths)
set_timing_derate -corners (List of corners)
set_timing_derate -data (Specify derate factor for data paths)
set_timing_derate -dynamic (Specify derate factor for delta delays.)
set_timing_derate -early (Specify early derate factor)
set_timing_derate -fall (Specify fall derate factor)
set_timing_derate -increment (Specify incremental derate factor)
set_timing_derate -late (Specify late derate factor)
set_timing_derate -max (Ignored)
set_timing_derate -min (Ignored)
set_timing_derate -net_delay (Specify derate factor for nets)
set_timing_derate -pocvm_coefficient_scale_factor 
set_timing_derate -pocvm_guardband (Specify POCVM GuardBand)
set_timing_derate -rise (Specify rise derate factor)
set_timing_derate -static (Specify derate factor for non-delta delays.)
set_timing_derate -variation (Specify derate factor for statistical delays only. Option currenty ignored)
set_timing_paths_disabled_blocks -all_sub_blocks (Ignore internal timing paths in all sub-blocks )
set_tmp_var
set_track_constraint -block 
set_track_constraint -grid 
set_track_constraint -label (A label identifying the given constraint)
set_track_constraint -layer 
set_track_constraint -mask 
set_track_constraint -offset 
set_track_constraint -origin (The region in which the constraint applies: 
set_track_constraint -track_direction 
set_unix_variable
set_user_units -input (Set the user units for data input)
set_user_units -output (Set the user units for data output)
set_user_units -type (Unit type: 
set_user_units -value (Unit value)
set_via_def -pitch 
set_via_def -size (Number of rows and columns in a simple array via)
set_via_def -via_def (Simple via definition)
set_via_def -vias (Names or collection of vias to change via def)
set_via_ladder_constraints -pins (Collection or names of pins)
set_via_ladder_rules -all_clock_inputs (false|true)]
set_via_ladder_rules -all_clock_outputs (false|true)]
set_via_ladder_rules -all_instances_of 
set_via_ladder_rules -all_pins_driving 
set_via_ladder_rules -default_ladders 
set_via_ladder_rules -master_pin_map 
set_via_ladder_rules -master_pin_map_file 
set_via_ladder_rules -remove_all_rules (If this option is specified, all the rules will be removed.)
set_via_ladder_spacing -cells 
set_via_ladder_spacing -distance 
set_via_ladder_spacing -lib_cells 
set_view_switch_list -design (Design to set view switch list of)
set_view_switch_list -global (To set the global view switch list)
set_view_switch_list -library (Library to set view switch list of)
set_virtual_pad -coordinate (Specify coordinates of the virtual pad)
set_virtual_pad -layer (Specify layer of the virtual tap)
set_virtual_pad -net (Power or ground net)
set_voltage -cell (Cell instance (ignored))
set_voltage -corners (List of corners)
set_voltage -dynamic (dynamic voltage)
set_voltage -min (min voltage)
set_voltage -min_dynamic (min dynamic voltage)
set_voltage -object_list 
set_voltage -pg_pin_name (Name of cell pg pin (ignored))
set_voltage_area -add_cells (Cells to be added to this voltage_area)
set_voltage_area -add_power_domains 
set_voltage_area -ground (ground supply_net of this voltage_area)
set_voltage_area -is_fixed (Set the voltage_area location as fixed)
set_voltage_area -merge_regions (Merge abutted and overlapped regions)
set_voltage_area -name 
set_voltage_area -power (power supply_net of this voltage_area)
set_voltage_area -remove_all_cells (Remove all cells from this voltage_area)
set_voltage_area -remove_cells 
set_voltage_area -remove_power_domains 
set_voltage_area_shape -above 
set_voltage_area_shape -add_cells (Cells to be added to this voltage_area_shape)
set_voltage_area_shape -below 
set_voltage_area_shape -bottom (lower shape to the bottom of the position stack)
set_voltage_area_shape -lower (lower shape by one position)
set_voltage_area_shape -raise (raise shape by one position)
set_voltage_area_shape -remove_all_cells (Remove all cells from this voltage_area_shape)
set_voltage_area_shape -remove_cells 
set_voltage_area_shape -top (raise shape to the top of the position stack)
set_vsdc -append (Append guidance to existing file)
set_vsdc -off (Stop recording guidance and close the file)
set_vsdc -replace (Replace file if it already exists)
set_vt_filler_rule -filler_cells 
set_vt_filler_rule -quiet (Specifies whether additional information is printed)
set_vt_filler_rule -silent (Specifies whether additional information is printed)
set_vt_filler_rule -vt_type (the vts to set the cell to)
set_working_design -level (Level to pop design stack: 
set_working_design -pop (Pop current design out of stack)
set_working_design -push (Cell to be pushed to)
set_working_design_stack
setenv
setup_toolbars_hotkeys
setvar -constant (Value cannot be modified after setting)
setvar -info (Information about the parameter)
setvar -one_of (List of user specified value for the variable)
setvar -property (User property for parameter)
setvar -roulette (Values for roulette flow.)
setvar -subst (Run subst before returning the value in getvar)
setvar -type (Type of the parameter)
setvar_array
setvar_array_copy_partial -clean (Cleanup target array first)
setvar_array_copy_partial -from_array (Source array name)
setvar_array_copy_partial -from_tag (Source array key pattern)
setvar_array_copy_partial -to_array (Target array name)
setvar_array_copy_partial -to_tag (Target array key pattern)
sh
shape_blocks -channels 
shape_blocks -constraint_file 
shape_blocks -host_options 
shape_blocks -incremental 
shape_blocks -pg_strategy 
shell_debug
signoff_calculate_hier_antenna_property -contact_layers 
signoff_calculate_hier_antenna_property -contact_layers_between_m0_diffusion 
signoff_calculate_hier_antenna_property -diffusion_layers 
signoff_calculate_hier_antenna_property -gate_class1_marking_layers 
signoff_calculate_hier_antenna_property -gate_class2_marking_layers 
signoff_calculate_hier_antenna_property -gate_class3_marking_layers 
signoff_calculate_hier_antenna_property -m0_layers_for_diffusion_connection 
signoff_calculate_hier_antenna_property -m0_layers_for_poly_connection 
signoff_calculate_hier_antenna_property -poly_layers 
signoff_calculate_hier_antenna_property -report_diodes (false|true)]
signoff_calculate_hier_antenna_property -top_cell_pin_only (false|true)]
signoff_calculate_hier_antenna_property -treat_source_drain_as_diodes (false|true)]
signoff_calculate_hier_antenna_property -v0_layers_between_m1_m0 
signoff_check_design -read_frame_view 
signoff_check_design -short_with_metal_fill (false|true)]
signoff_check_drc -auto_eco (false|true)]
signoff_check_drc -check_all_runset_layers (false|true)]
signoff_check_drc -coordinates 
signoff_check_drc -error_data 
signoff_check_drc -excluded_coordinates 
signoff_check_drc -pre_eco_design 
signoff_check_drc -select_layers 
signoff_check_drc -select_rules 
signoff_check_drc -unselect_rules 
signoff_create_metal_fill -all_runset_layers (false|true)]
signoff_create_metal_fill -auto_eco (false|true)]
signoff_create_metal_fill -coordinates 
signoff_create_metal_fill -excluded_coordinates 
signoff_create_metal_fill -fill_all_tracks (false|true)]
signoff_create_metal_fill -mode (overwrite|add|remove|replace)]
signoff_create_metal_fill -nets 
signoff_create_metal_fill -output_colored_fill (false|true)]
signoff_create_metal_fill -pre_eco_design 
signoff_create_metal_fill -remove_by_rule (off|ndr|max_density_threshold|drc)]
signoff_create_metal_fill -report_density 
signoff_create_metal_fill -select_layers 
signoff_create_metal_fill -timing_preserve_setup_slack_threshold 
signoff_create_metal_fill -track_fill (off|generic|list|<foundry_node>)]
signoff_create_metal_fill -track_fill_parameter_file (auto|generate_file_only|<custom_params_file>]
signoff_fix_drc -coordinates 
signoff_fix_drc -excluded_coordinates 
signoff_fix_drc -max_number_repair_loop 
signoff_fix_drc -nets 
signoff_fix_drc -select_rules 
signoff_fix_drc -start_repair_loop 
signoff_fix_drc -timing_preserve_setup_slack_threshold 
signoff_fix_drc -unselect_rules 
signoff_fix_isolated_via -check_only (false|true)]
signoff_fix_isolated_via -error_data 
signoff_fix_isolated_via -save_design (false|true)]
signoff_fix_isolated_via -track_fill_runset_include_file 
signoff_fix_isolated_via -update_track_fill (false|true)]
signoff_report_metal_density -coordinates 
signoff_report_metal_density -output (output file to generate report)
signoff_report_metal_density -select_layers 
signoff_report_metal_density -starting_point (Starting point for density windows. Default is lower left cornet of chip boundary bbox.)
size_cell -lib_cell (New lib_cell used to size cells)
size_cell -max_distance_to_spare_cell 
size_cell -not_spare_cell_aware 
sizeof_collection
snap_cells_to_block_grid -cells (Specify the block instances to snap)
snap_cells_to_block_grid -designs (Specify the block designs)
snap_cells_to_block_grid -grid (Specify the block grid)
snap_object_shapes -bottom 
snap_object_shapes -edge_number (Specifies edge number to be snapped: 
snap_object_shapes -edge_policy 
snap_object_shapes -grid (grid to use for snapping)
snap_object_shapes -left 
snap_object_shapes -right 
snap_object_shapes -top (Specifies snapping for all top edges: 
snap_objects
snps_version_at_least
snps_version_prior_to
snps_version_within
sort_bboxes_y_x_increasing
sort_collection -descending (Sort in descending order)
sort_collection -dictionary (Sort strings dictionary order.)
source -continue_on_error (Don't stop script on errors)
source -echo (Echo all commands)
source -verbose (Display intermediate results)
source_pkg_file
spinbox
split_bins
split_clock_cells -cells (list of cells to be split)
split_clock_cells -loads 
split_constraints -compress (File compression method: 
split_constraints -corners (Corners to write; default is all corners)
split_constraints -design_subblocks 
split_constraints -force (Overwrite old directory if it exists)
split_constraints -hier_abstract_subblocks 
split_constraints -modes (Modes to write; default is all modes)
split_constraints -nosplit (Don't split lines if column overflows)
split_constraints -output (Directory for output files; default is ./split)
split_constraints -sdc_only (Split SDC only)
split_constraints -upf_only (Split UPF only)
split_fanout -cell_prefix 
split_fanout -driver (Driver pin)
split_fanout -hierarchy (hierarchy to insert buffer)
split_fanout -lib_cell 
split_fanout -loads (List of loads to be buffered)
split_fanout -max_distance_for_incomplete_route 
split_fanout -max_fanout 
split_fanout -net (Net which need to be buffered)
split_fanout -net_prefix 
split_fanout -on_route (Turn on on_route split_fanout)
split_fanout -respect_blockages (whether respect blockages and macros)
split_multibit -cells (multibit cells to be de-banked)
split_multibit -exclude_instance 
split_multibit -lib_cells 
split_multibit -path_groups 
split_multibit -slack_threshold 
split_objects -gap (split gap)
split_objects -gap_min_spacing (min sapcing as split gap)
split_objects -ignore_end_cap (ignore end caps when splitting wires)
split_objects -line (split object shape by line)
split_objects -rect (split object shape by rectangle)
split_polygons -objects (Use as input geometry)
split_polygons -output (Specifies the format of output as either geo_mask or poly_rect)
split_polygons -split (Specifies the orientation of the fracture lines along which to split: 
split_rdl_routes -from_layers 
split_rdl_routes -mode (same_layer|adjacent_layer)]
split_rdl_routes -nets 
split_rdl_routes -nets_in_file 
split_rdl_routes -number_of_routes 
split_rdl_routes -objects 
split_rdl_routes -spacings 
split_rdl_routes -to_layers 
split_rdl_routes -via_interval 
split_rdl_routes -widths 
spread_objects -anchor (names or collection of anchor objects)
spread_objects -from (spread from point)
spread_objects -margin (consider keepout margins or guard bands)
spread_objects -parent (spread to parent)
spread_objects -to (spread to point)
spread_objects -vertical (vertical spread)
spread_spare_cells -boundary 
spread_spare_cells -cells (List of cells)
spread_spare_cells -density_aware_ratio 
spread_spare_cells -ignore_blockage_types 
spread_spare_cells -voltage_areas 
spread_wires -min_jog_length 
spread_wires -min_jog_spacing_by_layer_name 
spread_wires -pitch (Number of pitches to spread on either side of the wire, default is 0.5)
spread_wires -timing_preserve_hold_slack_threshold 
spread_wires -timing_preserve_nets 
spread_wires -timing_preserve_setup_slack_threshold 
ss_remove_net_routing
start_busplan_gui
start_gui -file (file to source on gui_start)
start_gui -no_windows (set flag not to load windows for this cmd)
stop_gui
suppress_message
swap_objects
synthesize_clock_trees -clocks (List of clocks)
synthesize_clock_trees -postroute (run post route CTO)
synthesize_clock_trees -propagate_only (purge ideal clocks attributes and propagate clocks only)
synthesize_clock_trees -routed_clock_stage 
synthesize_clock_trunk_endpoints -blocks 
synthesize_clock_trunk_endpoints -clocks (List of clocks)
synthesize_clock_trunk_endpoints -estimate_timing (Run virtual timing optimization)
synthesize_clock_trunk_endpoints -host_options 
synthesize_clock_trunk_endpoints -work_dir (Specify the directory for block scripts and log files)
synthesize_clock_trunks -clock (List of clocks)
synthesize_multisource_clock_subtrees -clocks (synthesize subtrees of these clocks)
synthesize_multisource_clock_subtrees -from 
synthesize_multisource_clock_subtrees -list_only (returns a list of all flow steps: preprocess, merge, optimize, route_clock, refine)
synthesize_multisource_clock_subtrees -to 
synthesize_multisource_clock_taps -clocks (consider tap option sets belonging to these clocks)
synthesize_multisource_global_clock_trees -leaves (List of global clock tree leaves)
synthesize_multisource_global_clock_trees -lib_cells 
synthesize_multisource_global_clock_trees -nets (List of global clock tree nets)
synthesize_multisource_global_clock_trees -prefix (prefix for created instances)
synthesize_multisource_global_clock_trees -roots (List of global clock tree roots)
synthesize_multisource_global_clock_trees -skip_pin_connections 
synthesize_multisource_global_clock_trees -use_zroute_for_pin_connections 
table
tclLog
tclPkgSetup
tclPkgUnknown
tcl_findLibrary
termWire
test_rst
text
tix
tixAddBindTag
tixAppContext
tixAppContext:AutoLoad
tixAppContext:BitmapInit
tixAppContext:Constructor
tixAppContext:FileDialogInit
tixAppContext:StartupError
tixAppContext:addbitmapdir
tixAppContext:config-fontset
tixAppContext:config-scheme
tixAppContext:filedialog
tixAppContext:getbitmap
tixAppContext:getimage
tixAppContext:initstyle
tixAppContext:option
tixAppContext:platform
tixAppContext:resetoptions
tixAppendBindTag
tixBalIgnoreWhenGrabbed
tixBalloon
tixBalloon:Activate
tixBalloon:AutoLoad
tixBalloon:ClearStatus
tixBalloon:ClientDestroy
tixBalloon:ConstructWidget
tixBalloon:Deactivate
tixBalloon:Destructor
tixBalloon:GrabBad
tixBalloon:InitWidgetRec
tixBalloon:PopDown
tixBalloon:PopUp
tixBalloon:SetStatus
tixBalloon:SwitchToClient
tixBalloon:Verify
tixBalloon:XXButton
tixBalloon:XXButtonUp
tixBalloon:XXMotion
tixBalloon:bind
tixBalloon:config-state
tixBalloon:post
tixBalloon:unbind
tixBalloon_XXButton
tixBalloon_XXButtonUp
tixBalloon_XXMotion
tixBind
tixBreak
tixBuiltInCmdErrorHandler
tixBusy
tixButtonBox
tixButtonBox:AutoLoad
tixButtonBox:InitWidgetRec
tixButtonBox:add
tixButtonBox:button
tixButtonBox:buttons
tixButtonBox:config-padx
tixButtonBox:config-pady
tixButtonBox:config-state
tixButtonBox:invoke
tixCObjView
tixCObjView:AutoLoad
tixCObjView:ConstructWidget
tixCObjView:GeometryInfo
tixCObjView:GetScrollRegion
tixCObjView:PlaceWindow
tixCObjView:SetBindings
tixCObjView:SetScrollBars
tixCObjView:UserScroll
tixCObjView:XScroll
tixCObjView:YScroll
tixCObjView:adjustscrollregion
tixCObjView:config-takefocus
tixCallMethod
tixChainMethod
tixCheckList
tixCheckList:AutoLoad
tixCheckList:BrowseCmd
tixCheckList:Command
tixCheckList:GetSel
tixCheckList:HandleCheck
tixCheckList:InitWidgetRec
tixCheckList:Select
tixCheckList:getselection
tixCheckList:getstatus
tixCheckList:setstatus
tixClass
tixCmdErrorHandler
tixComboBox
tixComboBox:ArrowDown
tixComboBox:ArrowUp
tixComboBox:AutoLoad
tixComboBox:BlinkEntry
tixComboBox:Cancel
tixComboBox:CheckListboxSelection
tixComboBox:ClearListboxSelection
tixComboBox:ConstructEntryFrame
tixComboBox:ConstructFramedWidget
tixComboBox:ConstructListFrame
tixComboBox:ConstructListShell
tixComboBox:CrossBtn
tixComboBox:Destructor
tixComboBox:EntDirKey
tixComboBox:EntKeyPress
tixComboBox:EntReturnKey
tixComboBox:EntTab
tixComboBox:EntryAlignEnd
tixComboBox:EscKey
tixComboBox:GoState
tixComboBox:GoState-0
tixComboBox:GoState-1
tixComboBox:GoState-10
tixComboBox:GoState-11
tixComboBox:GoState-12
tixComboBox:GoState-13
tixComboBox:GoState-14
tixComboBox:GoState-15
tixComboBox:GoState-16
tixComboBox:GoState-17
tixComboBox:GoState-19
tixComboBox:GoState-2
tixComboBox:GoState-3
tixComboBox:GoState-4
tixComboBox:GoState-5
tixComboBox:GoState-6
tixComboBox:GoState-7
tixComboBox:GoState-9
tixComboBox:GoState-n0
tixComboBox:GoState-n1
tixComboBox:GoState-n3
tixComboBox:GoState-n4
tixComboBox:GoState-n6
tixComboBox:Grab
tixComboBox:HandleDirKey
tixComboBox:InitWidgetRec
tixComboBox:Invoke
tixComboBox:LbBrowse
tixComboBox:LbCommand
tixComboBox:LbGetSelection
tixComboBox:LbIndex
tixComboBox:LbSelect
tixComboBox:Popdown
tixComboBox:Popup
tixComboBox:RestoreBlink
tixComboBox:RootDown
tixComboBox:RootUp
tixComboBox:SetBindings
tixComboBox:SetCursor
tixComboBox:SetSelection
tixComboBox:SetSelectionFromListbox
tixComboBox:SetState
tixComboBox:SetValue
tixComboBox:StateError
tixComboBox:Ungrab
tixComboBox:UpdateListboxSelection
tixComboBox:WidUp
tixComboBox:addhistory
tixComboBox:align
tixComboBox:appendhistory
tixComboBox:config-selection
tixComboBox:config-state
tixComboBox:config-value
tixComboBox:config-variable
tixComboBox:flash
tixComboBox:insert
tixComboBox:invoke
tixComboBox:pick
tixComboBox:popdown
tixComboBoxBind
tixCombobox
tixConsoleBind
tixConsoleEvalAppend
tixConsoleExit
tixConsoleHistory
tixConsoleInit
tixConsoleInsert
tixConsoleInvoke
tixConsoleOutput
tixConsolePrompt
tixConsoleSetFont
tixControl
tixControl:AdjustValue
tixControl:AutoLoad
tixControl:ConstructFramedWidget
tixControl:Destructor
tixControl:Escape
tixControl:InitWidgetRec
tixControl:Invoke
tixControl:KeyPress
tixControl:Repeat
tixControl:SetBindings
tixControl:SetValue
tixControl:StartRepeat
tixControl:StopRepeat
tixControl:Tab
tixControl:config-state
tixControl:config-value
tixControl:config-variable
tixControl:decr
tixControl:incr
tixControl:invoke
tixControl:update
tixControlBind
tixDebug
tixDeleteBindTag
tixDescendants
tixDestroy
tixDetailList
tixDetailList:AutoLoad
tixDetailList:FormatCmd
tixDialogDestroy
tixDialogRestore
tixDialogShell
tixDialogShell:AutoLoad
tixDialogShell:ConstructWidget
tixDialogShell:center
tixDialogShell:popdown
tixDialogShell:popup
tixDialogWithdraw
tixDirList
tixDirList:AutoLoad
tixDirList:Browse
tixDirList:CallBrowseCmd
tixDirList:CallCommand
tixDirList:Command
tixDirList:ConstructWidget
tixDirList:HighLight
tixDirList:InitWidgetRec
tixDirList:ListHierachy
tixDirList:ListSubDirs
tixDirList:LoadDir
tixDirList:SetBindings
tixDirList:SetValue
tixDirList:chdir
tixDirList:config-showhidden
tixDirList:config-value
tixDirSelectBox
tixDirSelectBox:AutoLoad
tixDirSelectBox:Browse-DirList
tixDirSelectBox:Cmd-DirCbx
tixDirSelectBox:Cmd-DirList
tixDirSelectBox:ConstructWidget
tixDirSelectBox:InitWidgetRec
tixDirSelectBox:SetBindings
tixDirSelectBox:SetValue
tixDirSelectBox:config-label
tixDirSelectBox:config-value
tixDirSelectDialog
tixDirSelectDialog:AutoLoad
tixDirSelectDialog:CallCmd
tixDirSelectDialog:Cancel
tixDirSelectDialog:ConstructWidget
tixDirSelectDialog:DirBoxCmd
tixDirSelectDialog:OK
tixDirSelectDialog:SetBindings
tixDirTree
tixDirTree:AddToList
tixDirTree:AutoLoad
tixDirTree:BrowseCmd
tixDirTree:CallBrowseCmd
tixDirTree:CallCommand
tixDirTree:ChangeDir
tixDirTree:CloseCmd
tixDirTree:Command
tixDirTree:ConstructWidget
tixDirTree:InitWidgetRec
tixDirTree:LoadDir
tixDirTree:OpenCmd
tixDirTree:SetBindings
tixDirTree:SetDir
tixDirTree:StartUp
tixDirTree:ToggleDir
tixDirTree:chdir
tixDirTree:config-directory
tixDirTree:refresh
tixDisableAll
tixDisplayStyle
tixDlgBtns
tixDoWhenIdle
tixDoWhenMapped
tixDragDropContext
tixDragDropContext:AutoLoad
tixDragDropContext:CallCommand
tixDragDropContext:Constructor
tixDragDropContext:Send
tixDragDropContext:drag
tixDragDropContext:drop
tixDragDropContext:set
tixDragDropContext:startdrag
tixDropBind
tixDropBindTags
tixEnableAll
tixEvalCmdBinding
tixEvent
tixExFileSelectBox
tixExFileSelectBox:AutoLoad
tixExFileSelectBox:Browse-DirList
tixExFileSelectBox:Cancel
tixExFileSelectBox:Cmd-DirCombo
tixExFileSelectBox:Cmd-DirList
tixExFileSelectBox:Cmd-FileCombo
tixExFileSelectBox:Cmd-FileList
tixExFileSelectBox:Cmd-TypeCombo
tixExFileSelectBox:ConstructWidget
tixExFileSelectBox:InitWidgetRec
tixExFileSelectBox:Invoke
tixExFileSelectBox:IsPattern
tixExFileSelectBox:LoadFiles
tixExFileSelectBox:Map
tixExFileSelectBox:Ok
tixExFileSelectBox:SetShowHidden
tixExFileSelectBox:config-directory
tixExFileSelectBox:config-filetypes
tixExFileSelectBox:config-showhidden
tixExFileSelectBox:filter
tixExFileSelectBox:invoke
tixExFileSelectDialog
tixExFileSelectDialog:AutoLoad
tixExFileSelectDialog:ConstructWidget
tixExFileSelectDialog:SetBindings
tixExFileSelectDialog:config-command
tixFSAncestors
tixFSDisplayFileName
tixFSDisplayName
tixFSExternal
tixFSInternal
tixFSIsAbsPath
tixFSIsValid
tixFSJoin
tixFSListDir
tixFSNative
tixFSNativeNorm
tixFSNormalize
tixFSSep
tixFSTilde
tixFSVolumes
tixFalse
tixFile
tixFileComboBox
tixFileComboBox:AutoLoad
tixFileComboBox:ConstructWidget
tixFileComboBox:InitWidgetRec
tixFileComboBox:OnComboCmd
tixFileComboBox:SetBindings
tixFileComboBox:config-directory
tixFileComboBox:config-text
tixFileComboBox:invoke
tixFileEntry
tixFileEntry:AutoLoad
tixFileEntry:ConstructFramedWidget
tixFileEntry:Destructor
tixFileEntry:FileDlgCallback
tixFileEntry:InitWidgetRec
tixFileEntry:OpenFile
tixFileEntry:SetBindings
tixFileEntry:SetValue
tixFileEntry:config-state
tixFileEntry:config-value
tixFileEntry:config-variable
tixFileEntry:filedialog
tixFileEntry:invoke
tixFileEntry:update
tixFileJoin
tixFileSelectBox
tixFileSelectBox:AutoLoad
tixFileSelectBox:ConstructWidget
tixFileSelectBox:CreateFrame1
tixFileSelectBox:CreateFrame2
tixFileSelectBox:CreateFrame3
tixFileSelectBox:FirstMapped
tixFileSelectBox:InitWidgetRec
tixFileSelectBox:InterpFilter
tixFileSelectBox:InvokeDir
tixFileSelectBox:InvokeFile
tixFileSelectBox:LoadDir
tixFileSelectBox:LoadDirIntoLists
tixFileSelectBox:SelInvoke
tixFileSelectBox:SelectDir
tixFileSelectBox:SelectFile
tixFileSelectBox:SetBindings
tixFileSelectBox:SetDir
tixFileSelectBox:SetFilter
tixFileSelectBox:SetPat
tixFileSelectBox:SetValue
tixFileSelectBox:config-directory
tixFileSelectBox:config-pattern
tixFileSelectBox:config-value
tixFileSelectBox:filter
tixFileSelectBox:invoke
tixFileSelectDialog
tixFileSelectDialog:AutoLoad
tixFileSelectDialog:ConstructTopFrame
tixFileSelectDialog:Invoke
tixFileSelectDialog:SetBindings
tixFileSelectbox
tixFloatEntry
tixFloatEntry:AutoLoad
tixFloatEntry:ConstructWidget
tixFloatEntry:InitWidgetRec
tixFloatEntry:SetBindings
tixFloatEntry:config-value
tixFloatEntry:invoke
tixFloatEntry:post
tixFloatEntry:unpost
tixFloatEntryBind
tixFlushX
tixForm
tixGeometryRequest
tixGet3DBorder
tixGetBoolean
tixGetDefault
tixGetDragDropContext
tixGetInt
tixGetMegaWidget
tixGetMethod
tixGrid
tixGrid:AutoScan
tixGrid:B1-Enter
tixGrid:B1-Leave
tixGrid:B1-Motion
tixGrid:Button-1
tixGrid:ButtonRelease-1
tixGrid:CallBrowseCmd
tixGrid:CallCommand
tixGrid:CheckEdit
tixGrid:Control-B1-Enter
tixGrid:Control-B1-Leave
tixGrid:Control-B1-Motion
tixGrid:Control-Button-1
tixGrid:DirKey
tixGrid:DoScan
tixGrid:DoneEdit
tixGrid:Double-1
tixGrid:EditApply
tixGrid:EditCell
tixGrid:GetState
tixGrid:GoState
tixGrid:GoState-0
tixGrid:GoState-1
tixGrid:GoState-12
tixGrid:GoState-13
tixGrid:GoState-14
tixGrid:GoState-16
tixGrid:GoState-18
tixGrid:GoState-2
tixGrid:GoState-20
tixGrid:GoState-21
tixGrid:GoState-22
tixGrid:GoState-3
tixGrid:GoState-4
tixGrid:GoState-5
tixGrid:GoState-b0
tixGrid:GoState-b1
tixGrid:GoState-b10
tixGrid:GoState-b2
tixGrid:GoState-b3
tixGrid:GoState-b4
tixGrid:GoState-b5
tixGrid:GoState-b6
tixGrid:GoState-b7
tixGrid:GoState-b8
tixGrid:GoState-b9
tixGrid:GoState-e0
tixGrid:GoState-e1
tixGrid:GoState-e10
tixGrid:GoState-e2
tixGrid:GoState-e3
tixGrid:GoState-e4
tixGrid:GoState-e5
tixGrid:GoState-e6
tixGrid:GoState-e7
tixGrid:GoState-e8
tixGrid:GoState-e9
tixGrid:GoState-m0
tixGrid:GoState-m1
tixGrid:GoState-m2
tixGrid:GoState-m3
tixGrid:GoState-m4
tixGrid:GoState-m5
tixGrid:GoState-m6
tixGrid:GoState-m7
tixGrid:GoState-m8
tixGrid:GoState-m9
tixGrid:GoState-s10
tixGrid:GoState-s5
tixGrid:GoState-s6
tixGrid:GoState-s7
tixGrid:GoState-s8
tixGrid:GoState-s9
tixGrid:GoState-xm7
tixGrid:Return
tixGrid:Select
tixGrid:SelectSingle
tixGrid:SetAnchor
tixGrid:SetEdit
tixGrid:SetFocus
tixGrid:SetState
tixGrid:Shift-Button-1
tixGrid:Space
tixGrid:StartScan
tixGridBind
tixHList
tixHList:AutoScan
tixHList:B1-Enter
tixHList:B1-Leave
tixHList:B1-Motion
tixHList:Browse
tixHList:Button-1
tixHList:ButtonRelease-1
tixHList:CallIndicatorCmd
tixHList:DoScan
tixHList:Double-1
tixHList:GetNearest
tixHList:GetState
tixHList:GoState
tixHList:GoState-0
tixHList:GoState-1
tixHList:GoState-10
tixHList:GoState-11
tixHList:GoState-12
tixHList:GoState-13
tixHList:GoState-14
tixHList:GoState-16
tixHList:GoState-18
tixHList:GoState-20
tixHList:GoState-21
tixHList:GoState-22
tixHList:GoState-23
tixHList:GoState-24
tixHList:GoState-25
tixHList:GoState-26
tixHList:GoState-27
tixHList:GoState-28
tixHList:GoState-29
tixHList:GoState-30
tixHList:GoState-31
tixHList:GoState-32
tixHList:GoState-33
tixHList:GoState-5
tixHList:GoState-6
tixHList:InsideArmedIndicator
tixHList:Keyboard-Activate
tixHList:Keyboard-Browse
tixHList:LeftRight
tixHList:Select
tixHList:SetAnchor
tixHList:SetState
tixHList:StartScan
tixHList:UpDown
tixHListBind
tixHListSingle:DragTimer
tixHListSingle:Rec:DragIn
tixHListSingle:Rec:DragOut
tixHListSingle:Rec:DragOver
tixHListSingle:Rec:Drop
tixHListSingle:Send:Cmd
tixHListSingle:Send:DoneDrag
tixHListSingle:Send:StartDrag
tixHListSingle:Send:WaitDrag
tixHandleArgv
tixHandleOptions
tixIconView
tixIconView:Arrange
tixIconView:ArrangeGrid
tixIconView:ArrangePack
tixIconView:AutoLoad
tixIconView:ConstructWidget
tixIconView:Drag
tixIconView:EndDrag
tixIconView:PackOneRow
tixIconView:PlaceWindow
tixIconView:SetBindings
tixIconView:StartDrag
tixIconView:add
tixIconView:arrange
tixInit
tixInputOnly
tixInt_Expand
tixIsDescendant
tixLabelEntry
tixLabelEntry:AutoLoad
tixLabelEntry:ConstructFramedWidget
tixLabelEntry:config-state
tixLabelEntryBind
tixLabelFrame
tixLabelFrame:AutoLoad
tixLabelFrame:frame
tixLabelWidget
tixLabelWidget:AutoLoad
tixLabelWidget:ConstructFramedWidget
tixLabelWidget:ConstructWidget
tixLabelWidget:Pack
tixLabelWidget:Pack-acrosstop
tixLabelWidget:Pack-bottom
tixLabelWidget:Pack-left
tixLabelWidget:Pack-none
tixLabelWidget:Pack-right
tixLabelWidget:Pack-top
tixLabelWidget:config-label
tixListGetSingle
tixListNoteBook
tixListNoteBook:AutoLoad
tixListNoteBook:Choose
tixListNoteBook:ConstructWidget
tixListNoteBook:CreateChildFrame
tixListNoteBook:InitGeometryManager
tixListNoteBook:InitialRaise
tixListNoteBook:RaiseChildFrame
tixListNoteBook:add
tixListNoteBook:config-dynamicgeometry
tixListNoteBook:config-height
tixListNoteBook:config-width
tixListNoteBook:raise
tixListboxGetCurrent
tixManageGeometry
tixMapWindow
tixMeter
tixMeter:AutoLoad
tixMeter:ConstructWidget
tixMeter:InitWidgetRec
tixMeter:SetBindings
tixMeter:Update
tixMeter:config-fillcolor
tixMeter:config-text
tixMeter:config-value
tixMkFileDialog
tixMoveResizeWindow
tixMultiView
tixMultiView:AutoLoad
tixMultiView:ConstructWidget
tixMultiView:GetWid
tixMultiView:GridFormat
tixMultiView:InitWidgetRec
tixMultiView:SetBindings
tixMultiView:VerifyView
tixMultiView:add
tixMultiView:config-view
tixMwm
tixNoteBook
tixNoteBook:AutoLoad
tixNoteBook:ConstructWidget
tixNoteBook:FocusNext
tixNoteBook:InitWidgetRec
tixNoteBook:MouseDown
tixNoteBook:MouseUp
tixNoteBook:Resize
tixNoteBook:SetFocusByKey
tixNoteBook:add
tixNoteBook:delete
tixNoteBook:raise
tixNoteBookFind
tixNoteBookFrame
tixOptionMenu
tixOptionMenu:AutoLoad
tixOptionMenu:ConstructFramedWidget
tixOptionMenu:Destructor
tixOptionMenu:InitWidgetRec
tixOptionMenu:Invoke
tixOptionMenu:Post
tixOptionMenu:SetBindings
tixOptionMenu:SetMaxWidth
tixOptionMenu:SetValue
tixOptionMenu:add
tixOptionMenu:config-state
tixOptionMenu:config-value
tixOptionMenu:config-variable
tixOptionMenu:delete
tixOptionMenu:disable
tixOptionMenu:enable
tixOptionMenu:entries
tixOptionMenu:entrycget
tixOptionMenu:entryconfigure
tixOptionName
tixPConfig
tixPanedWindow
tixPanedWindow:AddSeparator
tixPanedWindow:AutoLoad
tixPanedWindow:BtnDown
tixPanedWindow:BtnMove
tixPanedWindow:BtnMoveCompressed
tixPanedWindow:BtnUp
tixPanedWindow:CalculateChange
tixPanedWindow:CancleLines
tixPanedWindow:ClientGeomProc
tixPanedWindow:ConstructWidget
tixPanedWindow:DeHighlightBtn
tixPanedWindow:DoRepack
tixPanedWindow:GetMotionLimit
tixPanedWindow:GetNaturalSizes
tixPanedWindow:Grow
tixPanedWindow:HighlightBtn
tixPanedWindow:InitWidgetRec
tixPanedWindow:Iterate
tixPanedWindow:MasterGeomProc
tixPanedWindow:Min2
tixPanedWindow:MoveAfter
tixPanedWindow:MoveBefore
tixPanedWindow:PlotHandles
tixPanedWindow:Repack
tixPanedWindow:RepackWhenIdle
tixPanedWindow:SetBindings
tixPanedWindow:Shrink
tixPanedWindow:UpdateSizes
tixPanedWindow:add
tixPanedWindow:config-handlebg
tixPanedWindow:delete
tixPanedWindow:forget
tixPanedWindow:manage
tixPanedWindow:panecget
tixPanedWindow:paneconfigure
tixPanedWindow:panes
tixPanedWindow:setsize
tixPanedWindow:xGrow
tixPanedWindow:xShrink
tixPopEventStack
tixPopGrab
tixPopupMenu
tixPopupMenu:AutoLoad
tixPopupMenu:BtnRelease
tixPopupMenu:ConstructWidget
tixPopupMenu:Destructor
tixPopupMenu:InitWidgetRec
tixPopupMenu:SetBindings
tixPopupMenu:Unmap
tixPopupMenu:Unpost
tixPopupMenu:bind
tixPopupMenu:config-title
tixPopupMenu:post
tixPopupMenu:unbind
tixPrimitive
tixPrimitive:AutoLoad
tixPrimitive:ConstructWidget
tixPrimitive:Constructor
tixPrimitive:CreateRootWidget
tixPrimitive:Destructor
tixPrimitive:InitWidgetRec
tixPrimitive:MkWidgetCmd
tixPrimitive:ParseDefaultOptions
tixPrimitive:ParseUserOptions
tixPrimitive:SetBindings
tixPrimitive:config
tixPrimitive:subwidget
tixPrimitive:subwidgets
tixPushEventStack
tixPushGrab
tixRaiseWindow
tixResizeHandle
tixResizeHandle:Attach
tixResizeHandle:AutoLoad
tixResizeHandle:BMotion
tixResizeHandle:BRelease
tixResizeHandle:ComposeWindow
tixResizeHandle:ConstructWidget
tixResizeHandle:Destructor
tixResizeHandle:DrawTmpLines
tixResizeHandle:HideHintFrame
tixResizeHandle:InitWidgetRec
tixResizeHandle:SetBindings
tixResizeHandle:SetHintFrame
tixResizeHandle:ShowHintFrame
tixResizeHandle:UpdateSize
tixResizeHandle:attachwidget
tixResizeHandle:config-height
tixResizeHandle:config-width
tixResizeHandle:config-x
tixResizeHandle:config-y
tixResizeHandle:detachwidget
tixResizeHandle:dragstart
tixResizeHandle:hide
tixResizeHandle:show
tixScriptPatchLevel
tixScriptVersion
tixScrolledGrid
tixScrolledGrid:AutoLoad
tixScrolledGrid:Button-1
tixScrolledGrid:ConstructWidget
tixScrolledGrid:FormatCmd
tixScrolledGrid:GeometryInfo
tixScrolledGrid:SetBindings
tixScrolledGridBind
tixScrolledHList
tixScrolledHList:AutoLoad
tixScrolledHList:ConstructWidget
tixScrolledHList:GeometryInfo
tixScrolledHList:RepackHook
tixScrolledHList:SetBindings
tixScrolledHList:config-highlightbackground
tixScrolledHList:config-highlightcolor
tixScrolledHList:config-highlightthickness
tixScrolledHList:config-takefocus
tixScrolledListBox
tixScrolledListBox:AutoLoad
tixScrolledListBox:Browse
tixScrolledListBox:Configure
tixScrolledListBox:ConstructWidget
tixScrolledListBox:GeometryInfo
tixScrolledListBox:InitWidgetRec
tixScrolledListBox:Invoke
tixScrolledListBox:KeyBrowse
tixScrolledListBox:KeyInvoke
tixScrolledListBox:SetBindings
tixScrolledListBox:TrickScrollbar
tixScrolledListBox:XView
tixScrolledListBox:YView
tixScrolledListBox:config-takefocus
tixScrolledListBoxBind
tixScrolledListbox
tixScrolledTList
tixScrolledTList:AutoLoad
tixScrolledTList:ConstructWidget
tixScrolledTList:GeometryInfo
tixScrolledTList:SetBindings
tixScrolledTList:config-takefocus
tixScrolledText
tixScrolledText:AutoLoad
tixScrolledText:ConstructWidget
tixScrolledText:GeometryInfo
tixScrolledText:SetBindings
tixScrolledText:XScroll
tixScrolledText:YScroll
tixScrolledText:config-scrollbar
tixScrolledText:config-takefocus
tixScrolledWidget
tixScrolledWidget:AutoLoad
tixScrolledWidget:CheckScrollbars
tixScrolledWidget:ClientGeomProc
tixScrolledWidget:Configure
tixScrolledWidget:InitWidgetRec
tixScrolledWidget:MasterGeomProc
tixScrolledWidget:NeedScrollbar
tixScrolledWidget:PlaceWindow
tixScrolledWidget:Repack
tixScrolledWidget:RepackHook
tixScrolledWidget:ScrollCmd
tixScrolledWidget:SetBindings
tixScrolledWidget:config-scrollbar
tixScrolledWidget:config-scrollbarspace
tixScrolledWidget:config-sizebox
tixScrolledWindow
tixScrolledWindow:AutoLoad
tixScrolledWindow:ConstructWidget
tixScrolledWindow:GeometryInfo
tixScrolledWindow:InitWidgetRec
tixScrolledWindow:PlaceWindow
tixScrolledWindow:Scroll
tixScrolledWindow:ScrollBarCB
tixScrolledWindow:SetBindings
tixScrolledWindow:WindowGeomProc
tixSelect
tixSelect:AutoLoad
tixSelect:CallCommand
tixSelect:Destructor
tixSelect:InitWidgetRec
tixSelect:SetValue
tixSelect:add
tixSelect:button
tixSelect:config-state
tixSelect:config-value
tixSelect:config-variable
tixSelect:invoke
tixSetDefaultFontset
tixSetDefaultScheme-Color
tixSetDefaultScheme-Mono
tixSetEntry
tixSetMegaWidget
tixSetSilent
tixShell
tixShell:AutoLoad
tixShell:CreateRootWidget
tixShell:config-title
tixSimpleDialog
tixSimpleDialog:AutoLoad
tixSimpleDialog:ConstructWidget
tixStackWindow
tixStackWindow:AutoLoad
tixStackWindow:ConstructWidget
tixStackWindow:Resize
tixStackWindow:add
tixStackWindow:raise
tixStatusBar
tixStatusBar:AutoLoad
tixStatusBar:ConstructWidget
tixStdButtonBox
tixStdButtonBox:AutoLoad
tixStdButtonBox:ConstructWidget
tixStdButtonBox:config
tixStdDialogShell
tixStdDialogShell:AutoLoad
tixStdDialogShell:ConstructTopFrame
tixStdDialogShell:ConstructWidget
tixStdDlgBtns
tixStrEq
tixStringSub
tixSubwidgetRef
tixSubwidgetRetCreate
tixSubwidgetRetDelete
tixTList
tixTList:AutoScan
tixTList:B1-Enter
tixTList:B1-Leave
tixTList:B1-Motion
tixTList:Button-1
tixTList:ButtonRelease-1
tixTList:CallBrowseCmd
tixTList:CallCommand
tixTList:Control-B1-Enter
tixTList:Control-B1-Leave
tixTList:Control-B1-Motion
tixTList:Control-Button-1
tixTList:DirKey
tixTList:DoScan
tixTList:Double-1
tixTList:GetState
tixTList:GoState
tixTList:GoState-b0
tixTList:GoState-b1
tixTList:GoState-b10
tixTList:GoState-b2
tixTList:GoState-b3
tixTList:GoState-b4
tixTList:GoState-b5
tixTList:GoState-b6
tixTList:GoState-b7
tixTList:GoState-b8
tixTList:GoState-b9
tixTList:GoState-e0
tixTList:GoState-e1
tixTList:GoState-e10
tixTList:GoState-e2
tixTList:GoState-e3
tixTList:GoState-e4
tixTList:GoState-e5
tixTList:GoState-e6
tixTList:GoState-e7
tixTList:GoState-e8
tixTList:GoState-e9
tixTList:GoState-m0
tixTList:GoState-m1
tixTList:GoState-m2
tixTList:GoState-m3
tixTList:GoState-m4
tixTList:GoState-m5
tixTList:GoState-m6
tixTList:GoState-m7
tixTList:GoState-m8
tixTList:GoState-m9
tixTList:GoState-s0
tixTList:GoState-s1
tixTList:GoState-s10
tixTList:GoState-s2
tixTList:GoState-s3
tixTList:GoState-s4
tixTList:GoState-s5
tixTList:GoState-s6
tixTList:GoState-s7
tixTList:GoState-s8
tixTList:GoState-s9
tixTList:GoState-xm7
tixTList:Return
tixTList:Select
tixTList:SetAnchor
tixTList:SetState
tixTList:Shift-Button-1
tixTList:Space
tixTList:StartScan
tixTListBind
tixTmpLine
tixTopLevel
tixTraverseToNoteBook
tixTree
tixTree:AutoLoad
tixTree:BrowseCmd
tixTree:CallSwitchCmd
tixTree:CloseCmd
tixTree:Command
tixTree:ConstructWidget
tixTree:InitWidgetRec
tixTree:OpenCmd
tixTree:SetBindings
tixTree:SetModes
tixTree:addchild
tixTree:anchor
tixTree:autosetmode
tixTree:close
tixTree:column
tixTree:delete
tixTree:entrycget
tixTree:entryconfigure
tixTree:getmode
tixTree:header
tixTree:hide
tixTree:indicator
tixTree:info
tixTree:item
tixTree:nearest
tixTree:open
tixTree:see
tixTree:selection
tixTree:setmode
tixTree:show
tixTrue
tixUnmapWindow
tixUnsetMegaWidget
tixVResize
tixVResize:AutoLoad
tixVResize:DragCompressed
tixVResize:InitWidgetRec
tixVResize:drag
tixVResize:dragend
tixVResize:dragstart
tixVStack
tixVStack:AutoLoad
tixVStack:ClientGeomProc
tixVStack:CreateChildFrame
tixVStack:DestroyTop
tixVStack:InitGeometryManager
tixVStack:InitWidgetRec
tixVStack:MasterGeomProc
tixVStack:RaiseChildFrame
tixVStack:Resize
tixVStack:SetBindings
tixVStack:add
tixVStack:delete
tixVStack:pagecget
tixVStack:pageconfigure
tixVStack:pages
tixVStack:raise
tixVStack:raised
tixVTree
tixVTree:Activate
tixVTree:AutoLoad
tixVTree:BrowseCmd
tixVTree:BrowseCmdHook
tixVTree:CloseCmd
tixVTree:Command
tixVTree:CommandHook
tixVTree:ConstructWidget
tixVTree:GetType
tixVTree:IndicatorCmd
tixVTree:InitWidgetRec
tixVTree:OpenCmd
tixVTree:SetBindings
tixVTree:SetMode
tixVariable:ConfigVariable
tixVariable:DeleteVariable
tixVariable:TraceProc
tixVariable:UpdateVariable
tixVerifyBoolean
tixWInfo
tixWidgetClass
tixWidgetClassEx
tixWidgetDoWhenIdle
tixWinCmd
tixWinHeight
tixWinWidth
tixWithinWindow
tk
tkButtonInvoke
tkButtonUp
tkCancelRepeat
tkListboxUpDown
tkMbButtonUp
tkMbEnter
tkMbPost
tkMenuFind
tkMenuUnpost
tkTextSetCursor
tk_bisque
tk_chooseColor
tk_chooseDirectory
tk_getOpenFile
tk_getSaveFile
tk_menuSetFocus
tk_messageBox
tk_popup
tk_setPalette
tk_tableCopy
tk_tableCut
tk_tablePaste
tk_tablePasteHandler
tk_textCopy
tk_textCut
tk_textPaste
tkerror
tkwait
tm_container
toplevel
transform_polygons -coordinate (Relative coordinate to shift geometry by)
transform_polygons -inverse (Inverts the provided transformation)
transform_polygons -objects (Use as input geometry)
transform_polygons -orientation 
trim_pg_mesh -drc (DRC option for trimming: 
trim_pg_mesh -layers 
trim_pg_mesh -nets (List of power or ground nets)
trim_pg_mesh -shapes (Object shapes for trimming)
trim_pg_mesh -trim_to 
trim_pg_mesh -types (Object types for trimming)
trim_pg_mesh -undo (restore trimmed shapes and vias)
trim_pg_mesh -verbose (Verbose option for trimming: none | dangling | drc | {dangling drc})
unalias
uncommit_block -design 
uncommit_block -remove_design (remove design after physical hierarchy is removed)
uncommit_block -type 
uncommit_block -verbose (Show detailed information)
undo -check_only (Report result without doing anything)
undo -levels (Levels of commands to undo back to)
undo -marker (Marker to undo back to)
undo -silent (Print no messages)
ungroup_cells -all (Ungroup all hierarchical cells in current module)
ungroup_cells -flatten (Flatten all levels of hierarchy)
ungroup_cells -simple_names (Do not use hierarchy separator in names)
uniquify -uniquify_children (Include children instances for uniquification)
uniquify -verbose (Show detailed information)
uniquify_block -library (Library for the new design)
unknown
unset_tmp_var
unsetenv
unsetvar -array (Consider the parameter as an array)
unsuppress_message
update_constraint_mapping_file -remove_all (Remove all constraint files from all blocks)
update_constraint_mapping_file -remove_blocks (Remove constraints in the block constraint map for specified blocks)
update_constraint_mapping_file -remove_types 
update_local_config_for_mcmm_run
update_timing -full (Update entire design from scratch)
upf_version
v_mod_list
verify_rail_integrity -integrity_layout_strategies 
verify_rail_integrity -script_only ((default false))
verify_via_ladders -nets (the nets for via ladder verification (default all))
verify_via_ladders -shift_vias_on_transition_layers (false|true)]
visa_clocks_in_path_groups
visa_constraints
visa_create_clock_and_constraints
visa_filter_clocks
visa_find_outlane_number
visa_get_unit_name
visa_setup_tool
visa_uncertainty
visa_uncertainty_post_cts
visa_uncertainty_post_process
visa_unset_tool
visa_write_need_visa_report
which
widen_wires -spreading_widening_relative_weight 
widen_wires -timing_preserve_hold_slack_threshold 
widen_wires -timing_preserve_nets 
widen_wires -timing_preserve_setup_slack_threshold 
widen_wires -widen_widths_by_layer_name 
win_select_objects -again_at (Repeat last -at selection)
win_select_objects -at (Select an object at the specified point)
win_select_objects -create_slct_buses (bool)
win_select_objects -index (Index of objects at point)
win_select_objects -intersect (select intersecting objects with specified rectangle)
win_select_objects -line (Match objects names intersected by specified line)
win_select_objects -radius (Radius from pick point to select in (for _pins and _ports))
win_select_objects -root (Root instance to start selection at)
win_select_objects -slct_targets 
win_select_objects -slct_targets_operation 
win_select_objects -visible (Select objects marked as visible with win_set_select_class command)
win_select_objects -within (Match objects names within specified rectangle)
win_set_filter -class (Object class)
win_set_filter -expand_cell_types 
win_set_filter -filter (Object filter)
win_set_filter -highlighted_only 
win_set_filter -layer (Object layer)
win_set_filter -start_level (Level in hierararchy to start searching)
win_set_filter -stop_level (Level in hierarchy to stop searching)
win_set_filter -user_filter (Enable user filter cmd)
win_set_filter -user_filter_cmd 
win_set_filter -visible (Specified filters are for visible objects. By default the filters are for selectable objects.)
win_set_select_class -all (Allow selection of all classes)
win_set_select_class -visible (Specified classes are for visible objects. By default the classes are for selectable objects.)
winfo
wm
write_aif -bumps 
write_aif -hierarchy (Consider bumps across all hierarchy levels)
write_aif -use_port_name (Write port connection instead of net connection of the bump)
write_app_var -all (Write default values too)
write_app_var -only_changed_vars (Only write changed variables)
write_app_var -output (File to write script to)
write_blackbox_timing_script -qtm_directory 
write_blackbox_timing_script -qtm_format (Write out blackbox timing data in QTM format)
write_bound
write_budgets -blocks (List of cell instances to write budgets for)
write_budgets -compress (File compression method: 
write_budgets -design_subblocks 
write_budgets -force (Overwrite old directory if it exists)
write_budgets -full_budget_blocks 
write_budgets -hier_abstract_subblocks 
write_budgets -nosplit (Don't split lines if column overflows)
write_budgets -output (Directory to hold budget files; default is ./budgets)
write_budgets -shell_subblocks 
write_budgets -top (Write a budget for the top level)
write_budgets -verbose (Write verbose warning messages)
write_busplans -implementation_script 
write_busplans -multi_cycle_script 
write_busplans -xml_file (Save busplan details in XML format)
write_cell_expansion -output (Specify the file name for output)
write_cell_expansion -scale_factor (Specify the differnce in units between tools)
write_checksum -output_directory 
write_checksum -scenario (Optional, scenario for which report needs to be generated; if not specified, will use current_scenario. This option should not be used for PT.)
write_checksum -type (Optional, one of the following checksum type "library design parasitics constraints". If this option is not used, all checksums are generated.)
write_clock_trunks -clock (List of clocks for which to write the clock trunk.)
write_clock_trunks -file (File to write TCL commands to.)
write_create_clock_for_feedthroughs
write_def -bus_delimiters 
write_def -compress (File compression method: 
write_def -convert_sites 
write_def -exclude 
write_def -exclude_physical_status 
write_def -include 
write_def -include_physical_status 
write_def -include_tech_via_definitions 
write_def -no_marker_layer (Disable the writing of marker layers no_marker_layerno_marker_layer)
write_def -objects (Objects to output to the DEF file)
write_def -only_master_variant (Replace all variant instances by the master instances.master_instances_replacing_variantsmaster_instaces_replacing_variants)
write_def -traverse_physical_hierarchy 
write_def -units 
write_def -version (The file version: 
write_def -via_as_fixed (Output all vias as fixed viasvia_as_fixed)
write_default_pg_pattern -output_filename 
write_default_pg_pattern -type (list of pattern types)
write_dff_trace_filters -filename (Write patterns to this file)
write_dff_trace_filters -overwrite (Overwrite file if it exists.)
write_dff_trace_filters -type (type of filter: net or pin: 
write_dim
write_drc_error_data -error_data 
write_drc_error_data -file_name (Error data XML file to which to write)
write_drc_error_data -overwrite (Overwrite any existing file by the same name)
write_ems_rules -all (Write all user-defined rules)
write_ems_rules -overwrite (Overwrites the file contents if it already exists)
write_ems_rules -rule (Pattern matching one or more user-defined rules)
write_floorplan -add_def_dependencies (false|true)]
write_floorplan -blocks (List of blocks to output)
write_floorplan -compress (File compression method: 
write_floorplan -def_units 
write_floorplan -def_version 
write_floorplan -exclude 
write_floorplan -force (Allow use of existing directory)
write_floorplan -format (Target format; default is icc2: 
write_floorplan -include 
write_floorplan -nosplit (Don't split lines if column overflows)
write_floorplan -objects (List of objects to output)
write_floorplan -output (Directory for output files; default is ./floorplan)
write_frame_options -block (frame block)
write_frame_options -format (icc2_lm_shell|icc2_shell)]
write_frame_options -library (library)
write_frame_options -output (output file name)
write_gds -allow_design_mismatch 
write_gds -bbox_list (define the bbox list per layer)
write_gds -block_map 
write_gds -bus_delimiters 
write_gds -compress (compress flag enable)
write_gds -connect_below_cut_metal 
write_gds -design (name of the design to be exported)
write_gds -disable_output_mask_layers 
write_gds -exclude_empty_block (exclude empty blocks)
write_gds -fill (option to filter fill data: 
write_gds -flat_vias (flatten vias flag enable)
write_gds -foreign (use LEF foreign cell name as the structure name)
write_gds -hierarchy 
write_gds -ignore_cut_datatype_tbl_mapping 
write_gds -instance_property 
write_gds -keep_data_type (Keep ICC2 data type)
write_gds -layer_map 
write_gds -layer_map_format 
write_gds -layers (Layers which are to be written in the output GDSII file)
write_gds -lib_cell_view (lib cell view type: 
write_gds -library (name of the libray)
write_gds -long_names (long names flag enable)
write_gds -mask_shifted_suffix 
write_gds -mask_shifted_suffix_without_constraint 
write_gds -merge_conflict_suffix 
write_gds -merge_files 
write_gds -merge_gds_top_cell 
write_gds -merge_overwrite_conflicting_cell 
write_gds -net_property 
write_gds -no_marker_layer (Disables generation of marker layers)
write_gds -output_net_text (Specify if text is to be written for a net-shape)
write_gds -output_pin 
write_gds -pin_property 
write_gds -propagate_pin_mask_to_via_metal 
write_gds -rename_cell 
write_gds -switch_view_list 
write_gds -units 
write_gds -use_block_name (Use block name instead of module name for top STR)
write_gds -via_matrix_property 
write_gds -view (name of the design view to be exported: 
write_gds -write_default_layers 
write_gds -write_instance_blockage_mask 
write_gds -write_instance_via_mask 
write_hidden_app_var
write_inc_srsn_for_eco -blocks 
write_io_constraints -filename 
write_io_constraints -format (Specifies the format used to generated io constraints)
write_lef -design (Design from which the LEF file will be written)
write_lef -include 
write_lef -library (Library from which the LEF file will be written; default is current library)
write_lef -properties 
write_lef -slice_polygon (slice polygon to rectangles)
write_lef -version 
write_lib_package -blocks (List of blocks to pack)
write_lib_package -exclude_design_view 
write_lib_package -exclude_ref_libs 
write_lib_package -library (name of the library to be packed)
write_lib_package -verbose (Writes the log while saving a session checkpoint)
write_macro_relative_location -file (Specifies the output file name)
write_macro_relative_location -hierarchical (output hierarchical)
write_matching_types -file_name (Required option to specify a file name for the output file)
write_matching_types -from_existing_assignment 
write_name_map
write_net_estimation_rules -format (Format of output (tcl or xml))
write_net_estimation_rules -net_estimation_rule 
write_net_estimation_rules -script (Name of script to write)
write_oasis -allow_design_mismatch 
write_oasis -bbox_list (define the bbox list per layer)
write_oasis -block_map 
write_oasis -bus_delimiters 
write_oasis -compress 
write_oasis -connect_below_cut_metal 
write_oasis -design (name of the design to be exported)
write_oasis -fill (option to filter fill data: 
write_oasis -flat_vias (flatten vias flag enable)
write_oasis -foreign (use LEF foreign cell name as the structure name)
write_oasis -hierarchy 
write_oasis -ignore_cut_datatype_tbl_mapping 
write_oasis -instance_property 
write_oasis -keep_data_type (Keep ICC2 data type)
write_oasis -layer_map 
write_oasis -layer_map_format 
write_oasis -layers (Layers which are to be written in the output GDSII file)
write_oasis -lib_cell_view (lib cell view type: 
write_oasis -library (name of the libray)
write_oasis -mask_shifted_suffix 
write_oasis -mask_shifted_suffix_without_constraint 
write_oasis -merge_conflict_suffix 
write_oasis -merge_files 
write_oasis -merge_oasis_top_cell 
write_oasis -merge_overwrite_conflicting_cell 
write_oasis -net_property 
write_oasis -no_marker_layer (Disables generation of marker layers)
write_oasis -output_net_text (Specify if text is to be written for a net-shape)
write_oasis -output_pin 
write_oasis -pin_property 
write_oasis -propagate_pin_mask_to_via_metal 
write_oasis -rename_cell 
write_oasis -switch_view_list 
write_oasis -units 
write_oasis -use_block_name (Use block name instead of module name for top STR)
write_oasis -via_matrix_property 
write_oasis -view (name of the design view to be exported: 
write_oasis -write_default_layers 
write_oasis -write_instance_blockage_mask 
write_oasis -write_instance_via_mask 
write_parasitics -compress (write out compressed(GZIP) SPEF output )
write_parasitics -hierarchical (write out hierarchical spef)
write_parasitics -no_name_mapping (no name mapping in SPEF output)
write_parasitics -output (output parasitics to spef file)
write_pin_constraints -bundle_pin_constraint 
write_pin_constraints -bundles 
write_pin_constraints -cells 
write_pin_constraints -exclude_nets 
write_pin_constraints -file_name (Specifies the constraint file name)
write_pin_constraints -from_existing_pins (Use existed pin placement results to generate pin constraints file)
write_pin_constraints -nets (Write pin constraints that associated with nets.)
write_pin_constraints -physical_pin_constraint 
write_pin_constraints -pins (write pin constraints that associated with pins.)
write_pin_constraints -ports 
write_pin_constraints -self (Only write out pin constraint for current design)
write_pin_constraints -topological_map (Write out topological map constraints into constraint file name
write_placement
write_pt_checksum -output_directory 
write_pt_checksum -pt_exec_path (Path to PT shell executable)
write_pt_checksum -pt_user_script 
write_pt_checksum -type (Optional, one of the following checksum type "library design parasitics constraints". If this option is not used, all checksums are generated.)
write_rail_integrity_strategy -output ()
write_routes -nets 
write_routes -objects 
write_routes -output (specifies an output file name)
write_rp_groups -all (Write all RP groups)
write_rp_groups -blockage (Write add_to_rp_groups command for rp_blockage objects only)
write_rp_groups -cell (Write add_to_rp_groups command for cell objects only)
write_rp_groups -create (Write create_rp_group and set_rp_group_options command only.)
write_rp_groups -file_name (Write RP constraints to this file)
write_rp_groups -hierarchical (Write RP groups recursively too. Applicable only with rp_group_list)
write_rp_groups -nosplit (Write full command in single line. Do not split the line.)
write_rp_groups -rp_group (Write add_to_rp_groups command for rp_group objects only)
write_saif -cells (A list of the instances for which SAIF is to be generated.)
write_saif -corners (write saif for specified corners)
write_saif -duration 
write_saif -exclude_sdpd (Does not write the SDPD info in SAIF file)
write_saif -modes (write SAIF for specified modes)
write_saif -no_hierarchy (Writes out the SAIF file non-hierarchically.)
write_saif -propagated (Propagates the switching activity before writing out.)
write_saif -scenarios (Scenarios for which to write SAIF)
write_saif -switching_activity_types 
write_sanity_check_point -output (output file for sanity check)
write_sanity_check_point -stage (Report stage values: setup, placement)
write_script -compress (File compression method: 
write_script -corners (Corners to write; default is all corners)
write_script -exclude 
write_script -force (Overwrite existing output directory)
write_script -format (Target format; default is icc2: 
write_script -include 
write_script -modes (Modes to write; default is all modes)
write_script -nosplit (Don't split lines if column overflows)
write_script -output (Directory for output files; default is ./wscript)
write_sdc -compress (File compression method: 
write_sdc -corner (Name of the corner to write; default is current corner)
write_sdc -exclude 
write_sdc -include 
write_sdc -mode (Name of the mode to write; default is current mode)
write_sdc -nosplit (Don't split lines if column overflows)
write_sdc -output (Output file name)
write_sdc -scenario (Name of the scenario to write; default is current scenario)
write_sdc -version (SDC file version; default is latest: 
write_shadow_eco -cells (List of selected cells for shadow scripts creation)
write_shadow_eco -command_style (default: icc2)]
write_shadow_eco -disable_undo (Disable Undo history in the ECO script)
write_shadow_eco -nets (List of selected nets for shadow scripts creation)
write_shadow_eco -output 
write_shadow_eco -reporting_style (default: design_based)]
write_shadow_eco -self (Top design only)
write_shadow_eco -set_shadow_status (Set shadow status in the ECO script)
write_taps -file (File to be written to)
write_tech_file -library (Library from which the technology file to be written; default is current tech)
write_verilog -compress (File compression method: 
write_verilog -exclude 
write_verilog -force_no_reference 
write_verilog -force_reference 
write_verilog -hierarchy (Write modules in this scope: 
write_verilog -include 
write_verilog -only_master_variant (Replace all variant instances by the master instances.master_instances_replacing_variantsmaster_instaces_replacing_variants)
write_verilog -split_bus (Write bus as single bits)
write_verilog -switch_view_list 
write_verilog -top_module_first (Write top module first)
write_virtual_pad_file
